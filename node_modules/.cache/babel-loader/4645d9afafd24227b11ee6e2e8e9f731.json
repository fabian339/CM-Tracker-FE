{"ast":null,"code":"import { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, SET_UNAUTHENTICATED_USER, LOADING_USER // MARCK_NOTIFICATIONS_READ,\n} from '../types';\nimport { getSecrets } from './dataActions';\nimport axios from 'axios'; // export const loginUser = (userData, history) => (dispatch) => {\n//     dispatch({ type: LOADING_UI });\n//     axios.post('/login', userData)\n//     .then((res) => {\n//         setAuthorizationHeader(res.data.token);\n//         dispatch(getUserData());\n//         dispatch({ type: CLEAR_ERRORS});\n//         history.push('/');\n//     })\n//     .catch(err => {\n//       dispatch({\n//           type: SET_ERRORS,\n//           payload: err.response.data\n//       })\n//     });\n// }\n\nexport const adminRegistration = (newUserData, history) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  }); // axios.post('/signup', newUserData)\n  // .then((res) => {\n  //     setAuthorizationHeader(res.data.token);\n  //     dispatch(getUserData());\n  //     dispatch({ type: CLEAR_ERRORS});\n  //     history.push('/');\n  // })\n  // .catch(err => {\n  //   dispatch({\n  //       type: SET_ERRORS,\n  //       payload: err.response.data\n  //   })\n  // });\n};\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem('FBIdToken');\n  delete axios.defaults.headers.common['Authorization'];\n  dispatch({\n    type: SET_UNAUTHENTICATED_USER\n  });\n};\nexport const getUserData = () => dispatch => {\n  console.log(\"User Calledd\");\n  dispatch({\n    type: LOADING_USER\n  });\n  axios.get('/user').then(res => {\n    dispatch({\n      type: SET_USER,\n      payload: res.data\n    }); // console.log(\"PayloadData-->\", res.data)\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const uploadImage = formData => dispatch => {\n  // dispatch( { type: ON_IMAGE_CHANGE });\n  dispatch({\n    type: LOADING_USER\n  });\n  axios.post('/user/image', formData).then(() => {\n    dispatch(getUserData()); //refetch secrets from serve after 2 seconds to avoid incorrect data\n\n    setTimeout(() => {\n      dispatch(getSecrets(true));\n    }, 2500);\n  }).catch(err => console.log(err));\n};\nexport const editUserDetails = userDetails => dispatch => {\n  dispatch({\n    type: LOADING_USER\n  });\n  axios.post('/user', userDetails).then(() => {\n    dispatch(getUserData());\n  }).catch(err => console.log(err));\n}; // export const markNotificationsRead = (notificationIds) => (dispatch) => {\n//     axios.post('/notifications', notificationIds)\n//     .then(res => {\n//         dispatch({ type: MARCK_NOTIFICATIONS_READ })\n//     })\n//     .catch(err => console.log(err));\n// }\n\nconst setAuthorizationHeader = token => {\n  const FBIdToken = `Bearer ${token}`;\n  localStorage.setItem('FBIdToken', FBIdToken);\n  axios.defaults.headers.common['Authorization'] = FBIdToken;\n};","map":{"version":3,"sources":["/Users/mrfabian/Documents/cm-tracker-project/CM-Tracker-FE/src/redux/actions/userActions.js"],"names":["SET_USER","SET_ERRORS","CLEAR_ERRORS","LOADING_UI","SET_UNAUTHENTICATED_USER","LOADING_USER","getSecrets","axios","adminRegistration","newUserData","history","dispatch","type","logoutUser","localStorage","removeItem","defaults","headers","common","getUserData","console","log","get","then","res","payload","data","catch","err","uploadImage","formData","post","setTimeout","editUserDetails","userDetails","setAuthorizationHeader","token","FBIdToken","setItem"],"mappings":"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","sourcesContent":["import { \n    SET_USER, \n    SET_ERRORS, \n    CLEAR_ERRORS, \n    LOADING_UI, \n    SET_UNAUTHENTICATED_USER, \n    LOADING_USER, \n    // MARCK_NOTIFICATIONS_READ,\n    } from '../types';\n\n    import {getSecrets} from './dataActions'\n\nimport axios from 'axios';\n\n// export const loginUser = (userData, history) => (dispatch) => {\n//     dispatch({ type: LOADING_UI });\n//     axios.post('/login', userData)\n//     .then((res) => {\n//         setAuthorizationHeader(res.data.token);\n//         dispatch(getUserData());\n//         dispatch({ type: CLEAR_ERRORS});\n//         history.push('/');\n//     })\n//     .catch(err => {\n//       dispatch({\n//           type: SET_ERRORS,\n//           payload: err.response.data\n//       })\n\n//     });\n// }\n\n\nexport const adminRegistration = (newUserData, history) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    // axios.post('/signup', newUserData)\n    // .then((res) => {\n    //     setAuthorizationHeader(res.data.token);\n    //     dispatch(getUserData());\n    //     dispatch({ type: CLEAR_ERRORS});\n    //     history.push('/');\n    // })\n    // .catch(err => {\n    //   dispatch({\n    //       type: SET_ERRORS,\n    //       payload: err.response.data\n    //   })\n\n    // });\n}\n\n\n\nexport const logoutUser = () => (dispatch) => {\n    localStorage.removeItem('FBIdToken');\n    delete axios.defaults.headers.common['Authorization'];\n    dispatch({ type: SET_UNAUTHENTICATED_USER });\n}\n\n\n\nexport const getUserData = () => (dispatch) => {\n    console.log(\"User Calledd\");\n    dispatch({ type: LOADING_USER });\n    axios.get('/user')\n    .then((res) => {\n        dispatch({\n            type: SET_USER,\n            payload: res.data\n        })\n        // console.log(\"PayloadData-->\", res.data)\n    })\n    .catch(err => {\n        console.log(err);\n    })\n}\n\nexport const uploadImage = (formData) => (dispatch) => {\n    // dispatch( { type: ON_IMAGE_CHANGE });\n    dispatch({ type: LOADING_USER });\n    axios.post('/user/image', formData)\n    .then(() => {\n        dispatch(getUserData());\n        //refetch secrets from serve after 2 seconds to avoid incorrect data\n        setTimeout(() => {dispatch(getSecrets(true))}, 2500);\n    })\n    .catch(err => console.log(err));\n}\n\n\nexport const editUserDetails = (userDetails) => (dispatch) => {\n    dispatch({ type: LOADING_USER});\n\n    axios.post('/user', userDetails)\n    .then(() => {\n        dispatch(getUserData());\n    })\n    .catch(err => console.log(err));\n}\n\n\n// export const markNotificationsRead = (notificationIds) => (dispatch) => {\n//     axios.post('/notifications', notificationIds)\n//     .then(res => {\n//         dispatch({ type: MARCK_NOTIFICATIONS_READ })\n//     })\n//     .catch(err => console.log(err));\n// }\n\n\nconst setAuthorizationHeader = (token) => {\n    const FBIdToken = `Bearer ${token}`;\n    localStorage.setItem('FBIdToken', FBIdToken);\n    axios.defaults.headers.common['Authorization'] = FBIdToken;\n}"]},"metadata":{},"sourceType":"module"}