{"ast":null,"code":"var _jsxFileName = \"/Users/mrfabian/Documents/cm-tracker-project/CM-Tracker-FE/src/util/authRoutes/PrivateAdminRoute.js\";\n// import React, { Component } from 'react'\n// import {Route, Redirect } from 'react-router-dom';\n// import { connect } from 'react-redux';\n// import PropTypes from 'prop-types';\n// export class PrivateAdminRoute extends Component {\n//     componentDidMount() {\n//         console.log(\"private route\", this.props);\n//     }\n//     render() {\n//         const { authenticated, component} = this.props;\n//         // var authUrl = window.location.pathname.includes(localStorage.fullname);\n//         let adminRoute = (authenticated) ? (\n//             <Route component={component} />\n//         ) : (\n//             <Redirect to='/UNAUTHORIZED' />\n//         )\n//         return (adminRoute)\n//     }\n// }\n// PrivateAdminRoute.propTypes = {\n//     authenticated: PropTypes.bool.isRequired,\n// }\n// const mapStateToProps = (state) => ({\n//     authenticated: state.admin.authenticated,\n// });\n// export default connect(mapStateToProps)(PrivateAdminRoute);\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst PrivateAdminRoute = ({\n  component: Component,\n  authenticated,\n  ...rest\n}) => React.createElement(Route, Object.assign({}, rest, {\n  render: props => (authenticated === true ? React.createElement(Component, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })) : React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))(console.log(props)),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}));\n\nconst mapStateToProps = state => ({\n  authenticated: state.admin.authenticated\n});\n\nPrivateAdminRoute.prototype = {\n  admin: PropTypes.object\n};\nexport default connect(mapStateToProps)(PrivateAdminRoute);","map":{"version":3,"sources":["/Users/mrfabian/Documents/cm-tracker-project/CM-Tracker-FE/src/util/authRoutes/PrivateAdminRoute.js"],"names":["React","Route","Redirect","connect","PropTypes","PrivateAdminRoute","component","Component","authenticated","rest","props","console","log","mapStateToProps","state","admin","prototype","object"],"mappings":";AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAGC,SAAb;AAAwBC,EAAAA,aAAxB;AAAuC,KAAGC;AAA1C,CAAD,KACtB,oBAAC,KAAD,oBACIA,IADJ;AAEA,EAAA,MAAM,EAAGC,KAAD,IACJ,CACIF,aAAa,KAAK,IAAlB,GAAyB,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAzB,GAAoD,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADxD,EAGIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAHJ,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADJ;;AAaA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAChCN,EAAAA,aAAa,EAAEM,KAAK,CAACC,KAAN,CAAYP;AADK,CAAZ,CAAxB;;AAIAH,iBAAiB,CAACW,SAAlB,GAA8B;AAC1BD,EAAAA,KAAK,EAAEX,SAAS,CAACa;AADS,CAA9B;AAIA,eAAed,OAAO,CAACU,eAAD,CAAP,CAAyBR,iBAAzB,CAAf","sourcesContent":["// import React, { Component } from 'react'\n// import {Route, Redirect } from 'react-router-dom';\n// import { connect } from 'react-redux';\n// import PropTypes from 'prop-types';\n\n\n\n// export class PrivateAdminRoute extends Component {\n//     componentDidMount() {\n//         console.log(\"private route\", this.props);\n\n//     }\n\n//     render() {\n//         const { authenticated, component} = this.props;\n//         // var authUrl = window.location.pathname.includes(localStorage.fullname);\n\n\n//         let adminRoute = (authenticated) ? (\n//             <Route component={component} />\n//         ) : (\n//             <Redirect to='/UNAUTHORIZED' />\n//         )\n\n//         return (adminRoute)\n//     }\n// }\n\n// PrivateAdminRoute.propTypes = {\n//     authenticated: PropTypes.bool.isRequired,\n// }\n\n// const mapStateToProps = (state) => ({\n//     authenticated: state.admin.authenticated,\n// });\n\n\n// export default connect(mapStateToProps)(PrivateAdminRoute);\n\n\nimport React from 'react'\nimport {Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst PrivateAdminRoute = ({component : Component, authenticated, ...rest}) => (\n    <Route\n    {...rest}\n    render={(props) => \n        (\n            authenticated === true ? <Component {...props} /> : <Redirect to='/' />\n        ) (\n            console.log(props)\n        )\n    }\n    />\n);\n\nconst mapStateToProps = (state) => ({\n    authenticated: state.admin.authenticated\n});\n\nPrivateAdminRoute.prototype = {\n    admin: PropTypes.object\n}\n\nexport default connect(mapStateToProps)(PrivateAdminRoute);"]},"metadata":{},"sourceType":"module"}