{"ast":null,"code":"var _jsxFileName = \"/home/mikebladez/Documents/cm-tracker/CM-Tracker-FE/src/util/AuthRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst AuthRoute = ({\n  component: Component,\n  authenticatedUser,\n  ...rest\n}) => React.createElement(Route, Object.assign({}, rest, {\n  render: props => authenticatedUser === true ? React.createElement(Component, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  })) : React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n})); // const mapStateToProps = (state) => ({\n//     authenticated: state.user.authenticated\n// });\n// AuthRoute.prototype = {\n//     user: PropTypes.object\n// }\n// export default connect(mapStateToProps)(AuthRoute);\n\n\nAuthRoute.propTypes = {\n  authenticatedUser: PropTypes.bool.isRequired,\n  authenticatedAdmin: PropTypes.bool.isRequired,\n  logoutAdmin: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  authenticatedUser: state.user.authenticated,\n  authenticatedAdmin: state.admin.authenticated\n});\n\nexport default connect(mapStateToProps)(AuthRoute);","map":{"version":3,"sources":["/home/mikebladez/Documents/cm-tracker/CM-Tracker-FE/src/util/AuthRoute.js"],"names":["React","Route","Redirect","connect","PropTypes","AuthRoute","component","Component","authenticatedUser","rest","props","propTypes","bool","isRequired","authenticatedAdmin","logoutAdmin","func","mapStateToProps","state","user","authenticated","admin"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAGC,SAAb;AAAwBC,EAAAA,iBAAxB;AAA2C,KAAGC;AAA9C,CAAD,KACd,oBAAC,KAAD,oBACIA,IADJ;AAEA,EAAA,MAAM,EAAGC,KAAD,IACJF,iBAAiB,KAAK,IAAtB,GAA6B,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA7B,GAAwD,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAH5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADJ,C,CASA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;AAEAL,SAAS,CAACM,SAAV,GAAsB;AAClBH,EAAAA,iBAAiB,EAAEJ,SAAS,CAACQ,IAAV,CAAeC,UADhB;AAElBC,EAAAA,kBAAkB,EAAEV,SAAS,CAACQ,IAAV,CAAeC,UAFjB;AAGlBE,EAAAA,WAAW,EAAEX,SAAS,CAACY,IAAV,CAAeH;AAHV,CAAtB;;AAMA,MAAMI,eAAe,GAAIC,KAAD,KAAY;AAChCV,EAAAA,iBAAiB,EAAEU,KAAK,CAACC,IAAN,CAAWC,aADE;AAEhCN,EAAAA,kBAAkB,EAAEI,KAAK,CAACG,KAAN,CAAYD;AAFA,CAAZ,CAAxB;;AAKA,eAAejB,OAAO,CAACc,eAAD,CAAP,CAAyBZ,SAAzB,CAAf","sourcesContent":["import React from 'react'\nimport {Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst AuthRoute = ({component : Component, authenticatedUser, ...rest}) => (\n    <Route\n    {...rest}\n    render={(props) => \n        authenticatedUser === true ? <Component {...props} /> : <Redirect to='/' />\n    }\n    />\n);\n\n// const mapStateToProps = (state) => ({\n//     authenticated: state.user.authenticated\n// });\n\n// AuthRoute.prototype = {\n//     user: PropTypes.object\n// }\n\n// export default connect(mapStateToProps)(AuthRoute);\n\nAuthRoute.propTypes = {\n    authenticatedUser: PropTypes.bool.isRequired,\n    authenticatedAdmin: PropTypes.bool.isRequired,\n    logoutAdmin: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    authenticatedUser: state.user.authenticated,\n    authenticatedAdmin: state.admin.authenticated\n})\n\nexport default connect(mapStateToProps)(AuthRoute);"]},"metadata":{},"sourceType":"module"}