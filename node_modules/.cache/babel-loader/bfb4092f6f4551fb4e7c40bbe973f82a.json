{"ast":null,"code":"var _jsxFileName = \"/Users/mrfabian/Documents/cm-tracker-project/CM-Tracker-FE/src/components/profile/EditDetails.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles'; //redux studd\n\nimport { connect } from 'react-redux';\nimport { editUserDetails } from '../../redux/actions/userActions'; //Mui stuff\n// import { Tooltip } from '@material-ui/core';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport MyButton from '../../util/MyButton'; // import DialogContentText from '@material-ui/core/DialogContentText';\n\nimport DialogTitle from '@material-ui/core/DialogTitle'; // import IconButton from '@material-ui/core/IconButton';\n//Icons\n\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst styles = theme => ({\n  // ...theme\n  button: {\n    float: 'right'\n  }\n});\n\nclass EditDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      bio: '',\n      website: '',\n      loacation: '',\n      open: false\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n      this.mapUserDetailsToState(this.props.credentials);\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.mapUserDetailsToState = credentials => {\n      this.setState({\n        bio: credentials.bio ? credentials.bio : '',\n        website: credentials.website ? credentials.website : '',\n        location: credentials.location ? credentials.location : ''\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = () => {\n      const userDetails = {\n        bio: this.state.bio,\n        website: this.state.website,\n        location: this.state.location\n      };\n      this.props.editUserDetails(userDetails);\n      this.handleClose();\n    };\n  }\n\n  componentDidMount() {\n    const {\n      credentials\n    } = this.props;\n    this.mapUserDetailsToState(credentials);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      tip: \"Edit Details\",\n      onClick: this.handleOpen,\n      btnClassName: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(EditIcon, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Edit your Details\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      name: \"bio\",\n      type: \"text\",\n      label: \"Bio\",\n      multiline: true,\n      rows: \"3\",\n      placeholder: \"A short bio about yourself\",\n      className: classes.textField,\n      value: this.state.bio,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      name: \"website\",\n      type: \"text\",\n      label: \"Website\",\n      placeholder: \"Your personal/professional website\",\n      className: classes.textField,\n      value: this.state.website,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      name: \"location\",\n      type: \"text\",\n      label: \"Location\",\n      placeholder: \"Tell us where are you located\",\n      className: classes.textField,\n      value: this.state.location,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.handleSubmit,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Save\"))));\n  }\n\n}\n\nEditDetails.propTypes = {\n  editUserDetails: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  credentials: state.user.credentials\n});\n\nexport default connect(mapStateToProps, {\n  editUserDetails\n})(withStyles(styles)(EditDetails));","map":{"version":3,"sources":["/Users/mrfabian/Documents/cm-tracker-project/CM-Tracker-FE/src/components/profile/EditDetails.js"],"names":["React","Component","Fragment","PropTypes","withStyles","connect","editUserDetails","Button","TextField","Dialog","DialogActions","DialogContent","MyButton","DialogTitle","EditIcon","styles","theme","button","float","EditDetails","state","bio","website","loacation","open","handleOpen","setState","mapUserDetailsToState","props","credentials","handleClose","location","handleChange","event","target","name","value","handleSubmit","userDetails","componentDidMount","render","classes","textField","propTypes","func","isRequired","object","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\n//redux studd\nimport { connect } from 'react-redux'\nimport { editUserDetails } from '../../redux/actions/userActions'\n\n//Mui stuff\n// import { Tooltip } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport MyButton from '../../util/MyButton'\n\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n// import IconButton from '@material-ui/core/IconButton';\n\n//Icons\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst styles = (theme) => ({\n    // ...theme\n    button: {\n        float: 'right'\n    }\n})\n\nclass EditDetails extends Component {\n    state = {\n        bio: '',\n        website: '',\n        loacation: '',\n        open: false\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true })\n        this.mapUserDetailsToState(this.props.credentials)\n    }\n\n    handleClose = () => {\n        this.setState({ open: false })\n    }\n\n    componentDidMount(){\n        const { credentials } = this.props;\n        this.mapUserDetailsToState(credentials);\n    }\n\n    mapUserDetailsToState = (credentials) => {\n        this.setState({\n            bio: credentials.bio ? credentials.bio : '',\n            website: credentials.website ? credentials.website : '',\n            location: credentials.location ? credentials.location : ''\n        });\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit = () => {\n        const userDetails = {\n            bio: this.state.bio,\n            website: this.state.website,\n            location: this.state.location\n        };\n        this.props.editUserDetails(userDetails);\n        this.handleClose();\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Fragment>\n\n                <MyButton tip=\"Edit Details\" onClick={this.handleOpen} btnClassName={classes.button}>\n                            <EditIcon color=\"primary\" />\n                </MyButton>\n\n                <Dialog\n                open={this.state.open}\n                onClose={this.handleClose}\n                fullWidth\n                maxWidth=\"sm\">\n                    <DialogTitle>Edit your Details</DialogTitle>\n                    <DialogContent>\n                        <form>\n                            <TextField\n                                name='bio'\n                                type=\"text\"\n                                label=\"Bio\"\n                                multiline\n                                rows=\"3\"\n                                placeholder=\"A short bio about yourself\"\n                                className={classes.textField}\n                                value={this.state.bio}\n                                onChange={this.handleChange}\n                                fullWidth \n                            />\n\n                            <TextField\n                                name='website'\n                                type=\"text\"\n                                label=\"Website\"\n                                placeholder=\"Your personal/professional website\"\n                                className={classes.textField}\n                                value={this.state.website}\n                                onChange={this.handleChange}\n                                fullWidth \n                            />\n\n                            <TextField\n                                name='location'\n                                type=\"text\"\n                                label=\"Location\"\n                                placeholder=\"Tell us where are you located\"\n                                className={classes.textField}\n                                value={this.state.location}\n                                onChange={this.handleChange}\n                                fullWidth \n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleSubmit} color=\"primary\">\n                            Save\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Fragment>\n        )\n    }\n}\n\nEditDetails.propTypes = {\n    editUserDetails: PropTypes.func.isRequired,\n    classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    credentials: state.user.credentials\n});\n\nexport default connect(mapStateToProps, { editUserDetails })(withStyles(styles)(EditDetails));\n"]},"metadata":{},"sourceType":"module"}