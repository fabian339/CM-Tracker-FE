{"ast":null,"code":"var _jsxFileName = \"/Users/mrfabian/Documents/cm-tracker-project/CM-Tracker-FE/src/util/authRoutes/PrivateAdminRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst PrivateAdminRoute = ({\n  component: Component,\n  authenticatedAdmin,\n  ...rest\n}) => React.createElement(Route, Object.assign({}, rest, {\n  render: props => authenticatedAdmin === true ? React.createElement(Component, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  })) : React.createElement(Redirect, {\n    to: \"/UNAUTHORIZED\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }) // authenticated === true ? <Component {...props} /> : <unauthPage />\n  ,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}));\n\nconst mapStateToProps = state => ({\n  authenticatedAdmin: state.user.authenticatedAdmin\n});\n\nPrivateAdminRoute.prototype = {\n  admin: PropTypes.object\n};\nexport default connect(mapStateToProps)(PrivateAdminRoute);","map":{"version":3,"sources":["/Users/mrfabian/Documents/cm-tracker-project/CM-Tracker-FE/src/util/authRoutes/PrivateAdminRoute.js"],"names":["React","Route","Redirect","connect","PropTypes","PrivateAdminRoute","component","Component","authenticatedAdmin","rest","props","mapStateToProps","state","user","prototype","admin","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AACA,MAAMC,iBAAiB,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAGC,SAAb;AAAwBC,EAAAA,kBAAxB;AAA4C,KAAGC;AAA/C,CAAD,KACtB,oBAAC,KAAD,oBACIA,IADJ;AAEA,EAAA,MAAM,EAAGC,KAAD,IACJF,kBAAkB,KAAK,IAAvB,GAA8B,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA9B,GAAyD,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADvD,CAEF;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADJ;;AAUA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCJ,EAAAA,kBAAkB,EAAEI,KAAK,CAACC,IAAN,CAAWL;AADC,CAAZ,CAAxB;;AAIAH,iBAAiB,CAACS,SAAlB,GAA8B;AAC1BC,EAAAA,KAAK,EAAEX,SAAS,CAACY;AADS,CAA9B;AAIA,eAAeb,OAAO,CAACQ,eAAD,CAAP,CAAyBN,iBAAzB,CAAf","sourcesContent":["import React from 'react'\nimport {Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nconst PrivateAdminRoute = ({component : Component, authenticatedAdmin, ...rest}) => (\n    <Route\n    {...rest}\n    render={(props) => \n        authenticatedAdmin === true ? <Component {...props} /> : <Redirect to='/UNAUTHORIZED' />\n        // authenticated === true ? <Component {...props} /> : <unauthPage />\n    }\n    />\n);\n\nconst mapStateToProps = (state) => ({\n    authenticatedAdmin: state.user.authenticatedAdmin\n});\n\nPrivateAdminRoute.prototype = {\n    admin: PropTypes.object\n}\n\nexport default connect(mapStateToProps)(PrivateAdminRoute);\n"]},"metadata":{},"sourceType":"module"}