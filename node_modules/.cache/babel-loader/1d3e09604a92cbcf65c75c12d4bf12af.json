{"ast":null,"code":"import { SET_ADMIN, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, SET_UNAUTHENTICATED, LOADING_ADMIN, MARCK_NOTIFICATIONS_READ } from '../types';\nimport { getSecrets } from './dataActions';\nimport axios from 'axios'; // export const loginUser = (userData, history) => (dispatch) => {\n//     dispatch({ type: LOADING_UI });\n//     axios.post('/login', userData)\n//     .then((res) => {\n//         setAuthorizationHeader(res.data.token);\n//         dispatch(getUserData());\n//         dispatch({ type: CLEAR_ERRORS});\n//         history.push('/');\n//     })\n//     .catch(err => {\n//       dispatch({\n//           type: SET_ERRORS,\n//           payload: err.response.data\n//       })\n//     });\n// }\n\nexport const adminRegistration = (newAdminData, history) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/registerAdmin', {}).then(res => {\n    console.log(\"CALLEDD\");\n    setAuthorizationHeader(res.data.token);\n    dispatch(getAdminData());\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    history.push('/org-register');\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const organizationAction = (newUserData, history) => dispatch => {};\nexport const logoutAdminUser = () => dispatch => {\n  localStorage.removeItem('FBIdToken');\n  delete axios.defaults.headers.common['Authorization'];\n  dispatch({\n    type: SET_UNAUTHENTICATED\n  });\n};\nexport const getAdminData = () => dispatch => {\n  dispatch({\n    type: LOADING_ADMIN\n  });\n  axios.get('/admin').then(res => {\n    dispatch({\n      type: SET_ADMIN,\n      payload: res.data\n    }); // console.log(\"PayloadData-->\", res.data)\n  }).catch(err => {\n    console.log(err);\n  });\n}; // export const uploadImage = (formData) => (dispatch) => {\n//     // dispatch( { type: ON_IMAGE_CHANGE });\n//     dispatch({ type: LOADING_USER });\n//     axios.post('/user/image', formData)\n//     .then(() => {\n//         dispatch(getUserData());\n//         //refetch secrets from serve after 2 seconds to avoid incorrect data\n//         setTimeout(() => {dispatch(getSecrets(true))}, 2500);\n//     })\n//     .catch(err => console.log(err));\n// }\n// export const editUserDetails = (userDetails) => (dispatch) => {\n//     dispatch({ type: LOADING_USER});\n//     axios.post('/user', userDetails)\n//     .then(() => {\n//         dispatch(getUserData());\n//     })\n//     .catch(err => console.log(err));\n// }\n// export const markNotificationsRead = (notificationIds) => (dispatch) => {\n//     axios.post('/notifications', notificationIds)\n//     .then(res => {\n//         dispatch({ type: MARCK_NOTIFICATIONS_READ })\n//     })\n//     .catch(err => console.log(err));\n// }\n\nconst setAuthorizationHeader = token => {\n  const FBIdToken = `Bearer ${token}`;\n  localStorage.setItem('FBIdToken', FBIdToken);\n  axios.defaults.headers.common['Authorization'] = FBIdToken;\n};","map":{"version":3,"sources":["/home/mikebladez/Documents/cm-tracker/CM-Tracker-FE/src/redux/actions/adminActions.js"],"names":["SET_ADMIN","SET_ERRORS","CLEAR_ERRORS","LOADING_UI","SET_UNAUTHENTICATED","LOADING_ADMIN","MARCK_NOTIFICATIONS_READ","getSecrets","axios","adminRegistration","newAdminData","history","dispatch","type","post","then","res","console","log","setAuthorizationHeader","data","token","getAdminData","push","catch","err","payload","response","organizationAction","newUserData","logoutAdminUser","localStorage","removeItem","defaults","headers","common","get","FBIdToken","setItem"],"mappings":"AAAA,SACIA,SADJ,EAEIC,UAFJ,EAGIC,YAHJ,EAIIC,UAJJ,EAKIC,mBALJ,EAMIC,aANJ,EAOIC,wBAPJ,QAQW,UARX;AAUI,SAAQC,UAAR,QAAyB,eAAzB;AAEJ,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAGA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA4BC,QAAD,IAAc;AAEtEA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEV;AAAR,GAAD,CAAR;AACAK,EAAAA,KAAK,CAACM,IAAN,CAAW,gBAAX,EAA6B,EAA7B,EACCC,IADD,CACOC,GAAD,IAAS;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAEAC,IAAAA,sBAAsB,CAACH,GAAG,CAACI,IAAJ,CAASC,KAAV,CAAtB;AACAT,IAAAA,QAAQ,CAACU,YAAY,EAAb,CAAR;AACAV,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEX;AAAR,KAAD,CAAR;AACAS,IAAAA,OAAO,CAACY,IAAR,CAAa,eAAb;AACH,GARD,EASCC,KATD,CASOC,GAAG,IAAI;AACZb,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEZ,UADD;AAELyB,MAAAA,OAAO,EAAED,GAAG,CAACE,QAAJ,CAAaP;AAFjB,KAAD,CAAR;AAKD,GAfD;AAgBH,CAnBM;AAqBP,OAAO,MAAMQ,kBAAkB,GAAG,CAACC,WAAD,EAAclB,OAAd,KAA2BC,QAAD,IAAc,CACzE,CADM;AAKP,OAAO,MAAMkB,eAAe,GAAG,MAAOlB,QAAD,IAAc;AAC/CmB,EAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACA,SAAOxB,KAAK,CAACyB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,CAAP;AACAvB,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAET;AAAR,GAAD,CAAR;AACH,CAJM;AAQP,OAAO,MAAMkB,YAAY,GAAG,MAAOV,QAAD,IAAc;AAC5CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAER;AAAR,GAAD,CAAR;AACAG,EAAAA,KAAK,CAAC4B,GAAN,CAAU,QAAV,EACCrB,IADD,CACOC,GAAD,IAAS;AACXJ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEb,SADD;AAEL0B,MAAAA,OAAO,EAAEV,GAAG,CAACI;AAFR,KAAD,CAAR,CADW,CAKX;AACH,GAPD,EAQCI,KARD,CAQOC,GAAG,IAAI;AACVR,IAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACH,GAVD;AAWH,CAbM,C,CAeP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMN,sBAAsB,GAAIE,KAAD,IAAW;AACtC,QAAMgB,SAAS,GAAI,UAAShB,KAAM,EAAlC;AACAU,EAAAA,YAAY,CAACO,OAAb,CAAqB,WAArB,EAAkCD,SAAlC;AACA7B,EAAAA,KAAK,CAACyB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDE,SAAjD;AACH,CAJD","sourcesContent":["import { \n    SET_ADMIN, \n    SET_ERRORS, \n    CLEAR_ERRORS, \n    LOADING_UI, \n    SET_UNAUTHENTICATED, \n    LOADING_ADMIN, \n    MARCK_NOTIFICATIONS_READ,\n    } from '../types';\n\n    import {getSecrets} from './dataActions'\n\nimport axios from 'axios';\n\n// export const loginUser = (userData, history) => (dispatch) => {\n//     dispatch({ type: LOADING_UI });\n//     axios.post('/login', userData)\n//     .then((res) => {\n//         setAuthorizationHeader(res.data.token);\n//         dispatch(getUserData());\n//         dispatch({ type: CLEAR_ERRORS});\n//         history.push('/');\n//     })\n//     .catch(err => {\n//       dispatch({\n//           type: SET_ERRORS,\n//           payload: err.response.data\n//       })\n\n//     });\n// }\n\n\nexport const adminRegistration = (newAdminData, history) => (dispatch) => {\n\n    dispatch({ type: LOADING_UI });\n    axios.post('/registerAdmin', {})\n    .then((res) => {\n        console.log(\"CALLEDD\")\n\n        setAuthorizationHeader(res.data.token);\n        dispatch(getAdminData());\n        dispatch({ type: CLEAR_ERRORS});\n        history.push('/org-register');\n    })\n    .catch(err => {\n      dispatch({\n          type: SET_ERRORS,\n          payload: err.response.data\n      })\n\n    });\n}\n\nexport const organizationAction = (newUserData, history) => (dispatch) => {\n}\n\n\n\nexport const logoutAdminUser = () => (dispatch) => {\n    localStorage.removeItem('FBIdToken');\n    delete axios.defaults.headers.common['Authorization'];\n    dispatch({ type: SET_UNAUTHENTICATED });\n}\n\n\n\nexport const getAdminData = () => (dispatch) => {\n    dispatch({ type: LOADING_ADMIN });\n    axios.get('/admin')\n    .then((res) => {\n        dispatch({\n            type: SET_ADMIN,\n            payload: res.data\n        })\n        // console.log(\"PayloadData-->\", res.data)\n    })\n    .catch(err => {\n        console.log(err);\n    })\n}\n\n// export const uploadImage = (formData) => (dispatch) => {\n//     // dispatch( { type: ON_IMAGE_CHANGE });\n//     dispatch({ type: LOADING_USER });\n//     axios.post('/user/image', formData)\n//     .then(() => {\n//         dispatch(getUserData());\n//         //refetch secrets from serve after 2 seconds to avoid incorrect data\n//         setTimeout(() => {dispatch(getSecrets(true))}, 2500);\n//     })\n//     .catch(err => console.log(err));\n// }\n\n\n// export const editUserDetails = (userDetails) => (dispatch) => {\n//     dispatch({ type: LOADING_USER});\n\n//     axios.post('/user', userDetails)\n//     .then(() => {\n//         dispatch(getUserData());\n//     })\n//     .catch(err => console.log(err));\n// }\n\n\n// export const markNotificationsRead = (notificationIds) => (dispatch) => {\n//     axios.post('/notifications', notificationIds)\n//     .then(res => {\n//         dispatch({ type: MARCK_NOTIFICATIONS_READ })\n//     })\n//     .catch(err => console.log(err));\n// }\n\n\nconst setAuthorizationHeader = (token) => {\n    const FBIdToken = `Bearer ${token}`;\n    localStorage.setItem('FBIdToken', FBIdToken);\n    axios.defaults.headers.common['Authorization'] = FBIdToken;\n}"]},"metadata":{},"sourceType":"module"}