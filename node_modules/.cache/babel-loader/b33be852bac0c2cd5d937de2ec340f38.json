{"ast":null,"code":"import { SET_ADMIN, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, SET_AUTHENTICATED_ADMIN, SET_UNAUTHENTICATED_ADMIN, SET_AUTHENTICATED_USER, LOADING_ADMIN, STOP_LOADING_UI, SET_ORGANIZATION, MARCK_NOTIFICATIONS_READ, ADD_ORGANIZATION, SET_ORGANIZATIONS, LOADING_DATA } from '../types';\nimport { getUserData, logoutUser } from './userActions';\nimport axios from 'axios';\nexport const loginFunc = (data, history) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/login', data).then(res => {\n    setAuthorizationHeader(res.data.token, res.data.accountType);\n\n    if (res.data.accountType === \"admin\") {\n      console.log(\"Data Back\", res.data.fullname, \"History\", history);\n      dispatch(getAdminData());\n      let pathName = `/admin/${res.data.fullname}/modules`;\n      dispatch({\n        type: SET_AUTHENTICATED_ADMIN,\n        payload: res.data.fullname\n      });\n      dispatch({\n        type: CLEAR_ERRORS\n      });\n      history.push(pathName);\n    } else {\n      dispatch(getUserData());\n      dispatch({\n        type: SET_AUTHENTICATED_ADMIN,\n        payload: res.data.fullame\n      });\n      dispatch({\n        type: CLEAR_ERRORS\n      });\n      history.push(`/user/${res.data.fullname}/page`);\n    }\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const adminRegistration = (newAdminData, history, newPath) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/registerAdmin', newAdminData).then(res => {\n    setAuthorizationHeader(res.data.token, 'admin');\n    dispatch(getAdminData());\n    dispatch({\n      type: SET_AUTHENTICATED_ADMIN\n    });\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    history.push(newPath);\n  }).catch(err => {\n    console.log(err);\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const registerOrg = (newOrgData, history, fullname) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/orgRegister', newOrgData).then(res => {\n    console.log(\"CALLED\");\n    dispatch({\n      type: ADD_ORGANIZATION,\n      payload: res.data\n    });\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    dispatch(mergeAdminWithOrg(fullname, res.data.orgId));\n    history.push(`/merge/admin/${fullname}/organization/${res.data.orgId}`);\n  }).catch(err => {\n    console.log(err);\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    }); //   console.log(err.response)\n  });\n}; //get organization with name\n\nexport const getOrgWithName = (orgName, history, fullname) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.get(`/organization/${orgName}`).then(res => {\n    console.log(\"CALLED\");\n    dispatch({\n      type: SET_ORGANIZATION,\n      payload: res.data\n    });\n    dispatch(mergeAdminWithOrg(fullname, res.data.orgId));\n    history.push(`/merge/admin/${fullname}/organization/${res.data.orgId}`);\n  }).catch(err => {\n    console.log(err);\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    }); //   console.log(err.response)\n  });\n}; //get all organizations\n\nexport const getOrganizations = () => dispatch => {\n  // console.log(\"BEIN CALLED\");\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get('/organizations').then(res => {\n    dispatch({\n      type: SET_ORGANIZATIONS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: SET_ORGANIZATIONS,\n      payload: []\n    });\n  });\n};\nexport const mergeAdminWithOrg = (fullname, orgId) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.put(`/merge/admin/${fullname}/organization/${orgId}`).then(res => {\n    console.log(res);\n    dispatch(getAdminData()); // dispatch({ type: CLEAR_ERRORS});\n  }).catch(err => {\n    console.log(err);\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; // export const getOrgData = (orgId) => (dispatch) => {\n//     dispatch({ type: LOADING_UI });\n//     axios.get(`/organization/${orgId}`)\n//     .then((res) => {\n//         dispatch({\n//             type: SET_ORGANIZATION,\n//             payload: res.data\n//         });\n//         dispatch({ type: STOP_LOADING_UI })\n//     })\n//     .catch(err =>  console.log(err) );\n// }\n\nexport const logoutAdmin = () => dispatch => {\n  if (localStorage.accType === \"admin\") {\n    localStorage.removeItem('FBIdToken');\n    delete axios.defaults.headers.common['Authorization'];\n    dispatch({\n      type: SET_UNAUTHENTICATED_ADMIN\n    });\n  } else {\n    dispatch(logoutUser());\n  }\n\n  localStorage.removeItem('accType');\n};\nexport const getAdminData = () => dispatch => {\n  dispatch({\n    type: LOADING_ADMIN\n  });\n  console.log(\"Calledd\");\n  axios.get('/admin').then(res => {\n    dispatch({\n      type: SET_ADMIN,\n      payload: res.data\n    }); // console.log(\"PayloadData-->\", res.data)\n  }).catch(err => {\n    console.log(err);\n  });\n}; // export const uploadImage = (formData) => (dispatch) => {\n//     // dispatch( { type: ON_IMAGE_CHANGE });\n//     dispatch({ type: LOADING_USER });\n//     axios.post('/user/image', formData)\n//     .then(() => {\n//         dispatch(getUserData());\n//         //refetch secrets from serve after 2 seconds to avoid incorrect data\n//         setTimeout(() => {dispatch(getSecrets(true))}, 2500);\n//     })\n//     .catch(err => console.log(err));\n// }\n// export const editUserDetails = (userDetails) => (dispatch) => {\n//     dispatch({ type: LOADING_USER});\n//     axios.post('/user', userDetails)\n//     .then(() => {\n//         dispatch(getUserData());\n//     })\n//     .catch(err => console.log(err));\n// }\n// export const markNotificationsRead = (notificationIds) => (dispatch) => {\n//     axios.post('/notifications', notificationIds)\n//     .then(res => {\n//         dispatch({ type: MARCK_NOTIFICATIONS_READ })\n//     })\n//     .catch(err => console.log(err));\n// }\n\nconst setAuthorizationHeader = (token, accType) => {\n  const FBIdToken = `Bearer ${token}`;\n  localStorage.setItem('FBIdToken', FBIdToken);\n  localStorage.setItem('accType', accType);\n  axios.defaults.headers.common['Authorization'] = FBIdToken;\n};","map":{"version":3,"sources":["/home/mikebladez/Documents/cm-tracker/CM-Tracker-FE/src/redux/actions/adminActions.js"],"names":["SET_ADMIN","SET_ERRORS","CLEAR_ERRORS","LOADING_UI","SET_AUTHENTICATED_ADMIN","SET_UNAUTHENTICATED_ADMIN","SET_AUTHENTICATED_USER","LOADING_ADMIN","STOP_LOADING_UI","SET_ORGANIZATION","MARCK_NOTIFICATIONS_READ","ADD_ORGANIZATION","SET_ORGANIZATIONS","LOADING_DATA","getUserData","logoutUser","axios","loginFunc","data","history","dispatch","type","post","then","res","setAuthorizationHeader","token","accountType","console","log","fullname","getAdminData","pathName","payload","push","fullame","catch","err","response","adminRegistration","newAdminData","newPath","registerOrg","newOrgData","mergeAdminWithOrg","orgId","getOrgWithName","orgName","get","getOrganizations","put","logoutAdmin","localStorage","accType","removeItem","defaults","headers","common","FBIdToken","setItem"],"mappings":"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","sourcesContent":["import { \n    SET_ADMIN, \n    SET_ERRORS, \n    CLEAR_ERRORS, \n    LOADING_UI, \n    SET_AUTHENTICATED_ADMIN,\n    SET_UNAUTHENTICATED_ADMIN, \n    SET_AUTHENTICATED_USER,\n    LOADING_ADMIN,\n    STOP_LOADING_UI,\n    SET_ORGANIZATION, \n    MARCK_NOTIFICATIONS_READ,\n    ADD_ORGANIZATION,\n    SET_ORGANIZATIONS,\n    LOADING_DATA\n    \n    } from '../types';\n\n    import {getUserData, logoutUser} from './userActions'\n\nimport axios from 'axios';\n\nexport const loginFunc = (data, history) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    axios.post('/login', data)\n    .then((res) => {\n        setAuthorizationHeader(res.data.token, res.data.accountType);\n        if(res.data.accountType === \"admin\"){\n            console.log(\"Data Back\", res.data.fullname, \"History\", history);\n            dispatch(getAdminData());\n            let pathName = `/admin/${res.data.fullname}/modules`\n            dispatch({\n                type: SET_AUTHENTICATED_ADMIN,\n                payload: res.data.fullname\n            });\n            dispatch({ type: CLEAR_ERRORS});\n            history.push(pathName);\n        } else {\n            dispatch(getUserData());\n            dispatch({\n                type: SET_AUTHENTICATED_ADMIN,\n                payload: res.data.fullame\n            });\n            dispatch({ type: CLEAR_ERRORS});\n            history.push(`/user/${res.data.fullname}/page`);\n        }\n    })\n    .catch(err => {\n      dispatch({\n          type: SET_ERRORS,\n          payload: err.response.data\n      })\n\n    });\n}\n\n\nexport const adminRegistration = (newAdminData, history, newPath) => (dispatch) => {\n\n    dispatch({ type: LOADING_UI });\n    axios.post('/registerAdmin', newAdminData)\n    .then((res) => {\n        setAuthorizationHeader(res.data.token, 'admin');\n        dispatch(getAdminData());\n        dispatch({type: SET_AUTHENTICATED_ADMIN});\n        dispatch({ type: CLEAR_ERRORS});\n        history.push(newPath);\n    })\n    .catch(err => {\n        console.log(err)\n      dispatch({\n          type: SET_ERRORS,\n          payload: err.response.data\n      })\n\n    });\n}\n\nexport const registerOrg = (newOrgData, history, fullname) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    axios.post('/orgRegister', newOrgData)\n    .then((res) => {\n        console.log(\"CALLED\")\n        dispatch({\n            type: ADD_ORGANIZATION,\n            payload: res.data\n        });\n        dispatch({ type: CLEAR_ERRORS});\n        dispatch(mergeAdminWithOrg(fullname, res.data.orgId));\n        history.push(`/merge/admin/${fullname}/organization/${res.data.orgId}`);\n    })\n    .catch(err => {\n        console.log(err)\n      dispatch({\n          type: SET_ERRORS,\n          payload: err.response.data\n      })\n    //   console.log(err.response)\n    });\n}\n\n//get organization with name\nexport const getOrgWithName = (orgName, history, fullname) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    axios.get(`/organization/${orgName}`)\n    .then((res) => {\n        console.log(\"CALLED\")\n        dispatch({\n            type: SET_ORGANIZATION,\n            payload: res.data\n        });\n        dispatch(mergeAdminWithOrg(fullname, res.data.orgId));\n        history.push(`/merge/admin/${fullname}/organization/${res.data.orgId}`);\n    })\n    .catch(err => {\n        console.log(err)\n      dispatch({\n          type: SET_ERRORS,\n          payload: err.response.data\n      })\n    //   console.log(err.response)\n    });\n}\n\n\n//get all organizations\nexport const getOrganizations = () => (dispatch) => {\n        // console.log(\"BEIN CALLED\");\n        dispatch( { type: LOADING_DATA });\n        axios.get('/organizations')\n        .then((res) => {\n            dispatch({\n                type: SET_ORGANIZATIONS,\n                payload: res.data\n            });\n        })\n        .catch(err => {\n            dispatch({\n                type: SET_ORGANIZATIONS,\n                payload: []\n            });\n        });\n    }\n\n\nexport const mergeAdminWithOrg = (fullname, orgId) => dispatch => {\n    dispatch({ type: LOADING_UI });\n    axios.put(`/merge/admin/${fullname}/organization/${orgId}`)\n    .then(res => {\n        console.log(res)\n        dispatch(getAdminData());\n        // dispatch({ type: CLEAR_ERRORS});\n    })\n    .catch(err => {\n        console.log(err)\n      dispatch({\n          type: SET_ERRORS,\n          payload: err.response.data\n      })\n    })\n}\n// export const getOrgData = (orgId) => (dispatch) => {\n//     dispatch({ type: LOADING_UI });\n//     axios.get(`/organization/${orgId}`)\n//     .then((res) => {\n//         dispatch({\n//             type: SET_ORGANIZATION,\n//             payload: res.data\n//         });\n//         dispatch({ type: STOP_LOADING_UI })\n//     })\n//     .catch(err =>  console.log(err) );\n// }\n\n\n\nexport const logoutAdmin = () => (dispatch) => {\n    if (localStorage.accType === \"admin\"){\n        localStorage.removeItem('FBIdToken');\n        delete axios.defaults.headers.common['Authorization'];\n        dispatch({ type: SET_UNAUTHENTICATED_ADMIN });\n    } else {\n        dispatch(logoutUser());\n    }\n    localStorage.removeItem('accType');\n}\n\n\n\nexport const getAdminData = () => (dispatch) => {\n    dispatch({ type: LOADING_ADMIN });\n            console.log(\"Calledd\")\n    axios.get('/admin')\n    .then((res) => {\n        dispatch({\n            type: SET_ADMIN,\n            payload: res.data\n        })\n        // console.log(\"PayloadData-->\", res.data)\n    })\n    .catch(err => {\n        console.log(err);\n    })\n}\n\n\n// export const uploadImage = (formData) => (dispatch) => {\n//     // dispatch( { type: ON_IMAGE_CHANGE });\n//     dispatch({ type: LOADING_USER });\n//     axios.post('/user/image', formData)\n//     .then(() => {\n//         dispatch(getUserData());\n//         //refetch secrets from serve after 2 seconds to avoid incorrect data\n//         setTimeout(() => {dispatch(getSecrets(true))}, 2500);\n//     })\n//     .catch(err => console.log(err));\n// }\n\n\n// export const editUserDetails = (userDetails) => (dispatch) => {\n//     dispatch({ type: LOADING_USER});\n\n//     axios.post('/user', userDetails)\n//     .then(() => {\n//         dispatch(getUserData());\n//     })\n//     .catch(err => console.log(err));\n// }\n\n\n// export const markNotificationsRead = (notificationIds) => (dispatch) => {\n//     axios.post('/notifications', notificationIds)\n//     .then(res => {\n//         dispatch({ type: MARCK_NOTIFICATIONS_READ })\n//     })\n//     .catch(err => console.log(err));\n// }\n\n\nconst setAuthorizationHeader = (token, accType) => {\n    const FBIdToken = `Bearer ${token}`;\n    localStorage.setItem('FBIdToken', FBIdToken);\n    localStorage.setItem('accType', accType);\n    axios.defaults.headers.common['Authorization'] = FBIdToken;\n}"]},"metadata":{},"sourceType":"module"}