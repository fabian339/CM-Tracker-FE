{"ast":null,"code":"var _jsxFileName = \"/home/mikebladez/Documents/cm-tracker/CM-Tracker-FE/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\"; //componets\n\nimport Navbar from './components/layout/Nav';\nimport login from './components/pages/public/login';\nimport adminRegister from './components/pages/registrations/admin/adminRegister';\nimport orgRegister from './components/pages/registrations/admin/organization/orgRegister';\nimport mergingAdminWithOrg from './components/pages/registrations/admin/merging/mergingAdminWithOrg';\nimport AuthRoute from './util/AuthRoute';\nimport jwtDecode from 'jwt-decode';\nimport './App.css';\nimport registration from './components/pages/registrations/modules/registration'; //REDUX\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { SET_AUTHENTICATED_USER, SET_AUTHENTICATED_ADMIN } from './redux/types';\nimport { getAdminData, logoutAdmin } from './redux/actions/adminActions';\nimport { getUserData } from './redux/actions/userActions';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nconst token = localStorage.FBIdToken;\n\nif (token) {\n  const decodedtoken = jwtDecode(token); // console.log(decodedtoken.exp);\n\n  if (decodedtoken.exp * 1000 < Date.now()) {\n    store.dispatch(logoutAdmin());\n    window.location.href = '/login';\n  }\n} else {\n  if (localStorage.accType === \"admin\") {\n    store.dispatch({\n      type: SET_AUTHENTICATED_ADMIN\n    });\n    axios.defaults.headers.common['Authorization'] = token;\n    store.dispatch(getAdminData());\n  } else if (localStorage.accType === \"user\") {\n    store.dispatch({\n      type: SET_AUTHENTICATED_USER\n    });\n    axios.defaults.headers.common['Authorization'] = token;\n    store.dispatch(getUserData());\n  }\n}\n\nfunction App() {\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/merge/admin/:fullname/organization/:orgId\",\n    component: mergingAdminWithOrg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(AuthRoute, {\n    exact: true,\n    path: \"/admin-register\",\n    component: adminRegister,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(AuthRoute, {\n    exact: true,\n    path: \"/user/:fullname/page\",\n    component: adminRegister,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/admin/:fullname/org-register\",\n    component: orgRegister,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/registration\",\n    component: registration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    component: login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mikebladez/Documents/cm-tracker/CM-Tracker-FE/src/App.js"],"names":["React","Navbar","login","adminRegister","orgRegister","mergingAdminWithOrg","AuthRoute","jwtDecode","registration","Provider","store","SET_AUTHENTICATED_USER","SET_AUTHENTICATED_ADMIN","getAdminData","logoutAdmin","getUserData","axios","BrowserRouter","Router","Route","Switch","token","localStorage","FBIdToken","decodedtoken","exp","Date","now","dispatch","window","location","href","accType","type","defaults","headers","common","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\n\n//componets\nimport Navbar from './components/layout/Nav';\nimport login from './components/pages/public/login';\nimport adminRegister from './components/pages/registrations/admin/adminRegister';\nimport orgRegister from './components/pages/registrations/admin/organization/orgRegister';\nimport mergingAdminWithOrg from './components/pages/registrations/admin/merging/mergingAdminWithOrg';\nimport AuthRoute from  './util/AuthRoute'\n\nimport jwtDecode from 'jwt-decode';\nimport './App.css';\n\nimport registration from './components/pages/registrations/modules/registration';\n//REDUX\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { SET_AUTHENTICATED_USER, SET_AUTHENTICATED_ADMIN } from './redux/types';\nimport { getAdminData, logoutAdmin } from './redux/actions/adminActions';\nimport { getUserData } from './redux/actions/userActions';\n\nimport axios from 'axios';\n\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\n\n\nconst token = localStorage.FBIdToken;\nif(token){\n  const decodedtoken = jwtDecode(token);\n  // console.log(decodedtoken.exp);\n  if(decodedtoken.exp * 1000 < Date.now()){\n    store.dispatch(logoutAdmin());\n    window.location.href = '/login';\n  }\n} else {\n    if(localStorage.accType === \"admin\") {\n      store.dispatch({ type: SET_AUTHENTICATED_ADMIN });\n      axios.defaults.headers.common['Authorization'] = token;\n      store.dispatch(getAdminData());\n  } else if(localStorage.accType === \"user\") {\n    store.dispatch({ type: SET_AUTHENTICATED_USER });\n    axios.defaults.headers.common['Authorization'] = token;\n    store.dispatch(getUserData());\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Navbar />\n          <div className=\"container\">\n            <Switch>\n              {/* <Route exact path=\"/\" component={home} /> */}\n              {/* <AuthRoute exact path=\"/login\" component={login} /> */}\n              {/* <AuthRoute exact path=\"/signup\" component={signup} />\n              <Route exact path=\"/admin/:fullname/modules\" component={user} />*/}\n              <Route exact path=\"/merge/admin/:fullname/organization/:orgId\" component={mergingAdminWithOrg} /> \n              <AuthRoute exact path=\"/admin-register\" component={adminRegister} />\n              <AuthRoute exact path=\"/user/:fullname/page\" component={adminRegister} />\n              <Route exact path=\"/admin/:fullname/org-register\" component={orgRegister} />\n              <Route exact path=\"/registration\" component={registration} />\n              <Route exact path=\"/login\" component={login} />\n            </Switch>\n          </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}