{"ast":null,"code":"var _jsxFileName = \"/Users/mrfabian/Documents/cm-tracker-project/CM-Tracker-FE/src/util/authRoutes/PrivateAdminRoute.js\";\nimport React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nexport class PrivateAdminRoute extends Component {\n  render() {\n    const {\n      authenticated,\n      component\n    } = this.props; // console.log(\"private route\", this.props.computedMatch.params.fullname);\n\n    const {\n      fullname\n    } = this.props.computedMatch.params; // var authUrl = window.location.pathname.includes(localStorage.fullname);\n\n    let adminRoute = authenticated ? React.createElement(Route, {\n      component: component,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/UNAUTHORIZED\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n    return adminRoute;\n  }\n\n}\nPrivateAdminRoute.propTypes = {\n  authenticated: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  authenticated: state.admin.authenticated\n});\n\nexport default connect(mapStateToProps)(PrivateAdminRoute);","map":{"version":3,"sources":["/Users/mrfabian/Documents/cm-tracker-project/CM-Tracker-FE/src/util/authRoutes/PrivateAdminRoute.js"],"names":["React","Component","Route","Redirect","connect","PropTypes","PrivateAdminRoute","render","authenticated","component","props","fullname","computedMatch","params","adminRoute","propTypes","bool","isRequired","mapStateToProps","state","admin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAIA,OAAO,MAAMC,iBAAN,SAAgCL,SAAhC,CAA0C;AAE7CM,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,QAA8B,KAAKC,KAAzC,CADK,CAEL;;AACA,UAAM;AAACC,MAAAA;AAAD,QAAa,KAAKD,KAAL,CAAWE,aAAX,CAAyBC,MAA5C,CAHK,CAIL;;AAGA,QAAIC,UAAU,GAAIN,aAAD,GACb,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa,GAGb,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ;AAMA,WAAQK,UAAR;AACH;;AAhB4C;AAmBjDR,iBAAiB,CAACS,SAAlB,GAA8B;AAC1BP,EAAAA,aAAa,EAAEH,SAAS,CAACW,IAAV,CAAeC;AADJ,CAA9B;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCX,EAAAA,aAAa,EAAEW,KAAK,CAACC,KAAN,CAAYZ;AADK,CAAZ,CAAxB;;AAKA,eAAeJ,OAAO,CAACc,eAAD,CAAP,CAAyBZ,iBAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n\n\nexport class PrivateAdminRoute extends Component {\n    \n    render() {\n        const { authenticated, component} = this.props;\n        // console.log(\"private route\", this.props.computedMatch.params.fullname);\n        const {fullname} = this.props.computedMatch.params;\n        // var authUrl = window.location.pathname.includes(localStorage.fullname);\n\n\n        let adminRoute = (authenticated) ? (\n            <Route component={component} />\n        ) : (\n            <Redirect to='/UNAUTHORIZED' />\n        )\n\n        return (adminRoute)\n    }\n}\n\nPrivateAdminRoute.propTypes = {\n    authenticated: PropTypes.bool.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n    authenticated: state.admin.authenticated,\n});\n\n\nexport default connect(mapStateToProps)(PrivateAdminRoute);"]},"metadata":{},"sourceType":"module"}