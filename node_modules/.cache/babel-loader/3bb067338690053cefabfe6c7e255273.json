{"ast":null,"code":"import { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, SET_UNAUTHENTICATED, LOADING_USER, MARCK_NOTIFICATIONS_READ } from '../types';\nimport { getSecrets } from './dataActions';\nimport axios from 'axios'; // export const loginUser = (userData, history) => (dispatch) => {\n//     dispatch({ type: LOADING_UI });\n//     axios.post('/login', userData)\n//     .then((res) => {\n//         setAuthorizationHeader(res.data.token);\n//         dispatch(getUserData());\n//         dispatch({ type: CLEAR_ERRORS});\n//         history.push('/');\n//     })\n//     .catch(err => {\n//       dispatch({\n//           type: SET_ERRORS,\n//           payload: err.response.data\n//       })\n//     });\n// }\n\nexport const adminRegistration = (newUserData, history) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  }); // axios.post('/signup', newUserData)\n  // .then((res) => {\n  //     setAuthorizationHeader(res.data.token);\n  //     dispatch(getUserData());\n  //     dispatch({ type: CLEAR_ERRORS});\n  //     history.push('/');\n  // })\n  // .catch(err => {\n  //   dispatch({\n  //       type: SET_ERRORS,\n  //       payload: err.response.data\n  //   })\n  // });\n}; // export const logoutUser = () => (dispatch) => {\n//     localStorage.removeItem('FBIdToken');\n//     delete axios.defaults.headers.common['Authorization'];\n//     dispatch({ type: SET_UNAUTHENTICATED });\n// }\n// export const getUserData = () => (dispatch) => {\n//     dispatch({ type: LOADING_USER });\n//     axios.get('/user')\n//     .then((res) => {\n//         dispatch({\n//             type: SET_USER,\n//             payload: res.data\n//         })\n//         // console.log(\"PayloadData-->\", res.data)\n//     })\n//     .catch(err => {\n//         console.log(err);\n//     })\n// }\n// export const uploadImage = (formData) => (dispatch) => {\n//     // dispatch( { type: ON_IMAGE_CHANGE });\n//     dispatch({ type: LOADING_USER });\n//     axios.post('/user/image', formData)\n//     .then(() => {\n//         dispatch(getUserData());\n//         //refetch secrets from serve after 2 seconds to avoid incorrect data\n//         setTimeout(() => {dispatch(getSecrets(true))}, 2500);\n//     })\n//     .catch(err => console.log(err));\n// }\n// export const editUserDetails = (userDetails) => (dispatch) => {\n//     dispatch({ type: LOADING_USER});\n//     axios.post('/user', userDetails)\n//     .then(() => {\n//         dispatch(getUserData());\n//     })\n//     .catch(err => console.log(err));\n// }\n// export const markNotificationsRead = (notificationIds) => (dispatch) => {\n//     axios.post('/notifications', notificationIds)\n//     .then(res => {\n//         dispatch({ type: MARCK_NOTIFICATIONS_READ })\n//     })\n//     .catch(err => console.log(err));\n// }\n// const setAuthorizationHeader = (token) => {\n//     const FBIdToken = `Bearer ${token}`;\n//     localStorage.setItem('FBIdToken', FBIdToken);\n//     axios.defaults.headers.common['Authorization'] = FBIdToken;\n// }","map":{"version":3,"sources":["/home/mikebladez/Documents/cm-tracker/CM-Tracker-FE/src/redux/actions/adminActions.js"],"names":["SET_USER","SET_ERRORS","CLEAR_ERRORS","LOADING_UI","SET_UNAUTHENTICATED","LOADING_USER","MARCK_NOTIFICATIONS_READ","getSecrets","axios","adminRegistration","newUserData","history","dispatch","type"],"mappings":"AAAA,SACIA,QADJ,EAEIC,UAFJ,EAGIC,YAHJ,EAIIC,UAJJ,EAKIC,mBALJ,EAMIC,YANJ,EAOIC,wBAPJ,QAQW,UARX;AAUI,SAAQC,UAAR,QAAyB,eAAzB;AAEJ,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAGA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,WAAD,EAAcC,OAAd,KAA2BC,QAAD,IAAc;AACrEA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEV;AAAR,GAAD,CAAR,CADqE,CAErE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACH,CAhBM,C,CAoBP;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA","sourcesContent":["import { \n    SET_USER, \n    SET_ERRORS, \n    CLEAR_ERRORS, \n    LOADING_UI, \n    SET_UNAUTHENTICATED, \n    LOADING_USER, \n    MARCK_NOTIFICATIONS_READ,\n    } from '../types';\n\n    import {getSecrets} from './dataActions'\n\nimport axios from 'axios';\n\n// export const loginUser = (userData, history) => (dispatch) => {\n//     dispatch({ type: LOADING_UI });\n//     axios.post('/login', userData)\n//     .then((res) => {\n//         setAuthorizationHeader(res.data.token);\n//         dispatch(getUserData());\n//         dispatch({ type: CLEAR_ERRORS});\n//         history.push('/');\n//     })\n//     .catch(err => {\n//       dispatch({\n//           type: SET_ERRORS,\n//           payload: err.response.data\n//       })\n\n//     });\n// }\n\n\nexport const adminRegistration = (newUserData, history) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    // axios.post('/signup', newUserData)\n    // .then((res) => {\n    //     setAuthorizationHeader(res.data.token);\n    //     dispatch(getUserData());\n    //     dispatch({ type: CLEAR_ERRORS});\n    //     history.push('/');\n    // })\n    // .catch(err => {\n    //   dispatch({\n    //       type: SET_ERRORS,\n    //       payload: err.response.data\n    //   })\n\n    // });\n}\n\n\n\n// export const logoutUser = () => (dispatch) => {\n//     localStorage.removeItem('FBIdToken');\n//     delete axios.defaults.headers.common['Authorization'];\n//     dispatch({ type: SET_UNAUTHENTICATED });\n// }\n\n\n\n// export const getUserData = () => (dispatch) => {\n//     dispatch({ type: LOADING_USER });\n//     axios.get('/user')\n//     .then((res) => {\n//         dispatch({\n//             type: SET_USER,\n//             payload: res.data\n//         })\n//         // console.log(\"PayloadData-->\", res.data)\n//     })\n//     .catch(err => {\n//         console.log(err);\n//     })\n// }\n\n// export const uploadImage = (formData) => (dispatch) => {\n//     // dispatch( { type: ON_IMAGE_CHANGE });\n//     dispatch({ type: LOADING_USER });\n//     axios.post('/user/image', formData)\n//     .then(() => {\n//         dispatch(getUserData());\n//         //refetch secrets from serve after 2 seconds to avoid incorrect data\n//         setTimeout(() => {dispatch(getSecrets(true))}, 2500);\n//     })\n//     .catch(err => console.log(err));\n// }\n\n\n// export const editUserDetails = (userDetails) => (dispatch) => {\n//     dispatch({ type: LOADING_USER});\n\n//     axios.post('/user', userDetails)\n//     .then(() => {\n//         dispatch(getUserData());\n//     })\n//     .catch(err => console.log(err));\n// }\n\n\n// export const markNotificationsRead = (notificationIds) => (dispatch) => {\n//     axios.post('/notifications', notificationIds)\n//     .then(res => {\n//         dispatch({ type: MARCK_NOTIFICATIONS_READ })\n//     })\n//     .catch(err => console.log(err));\n// }\n\n\n// const setAuthorizationHeader = (token) => {\n//     const FBIdToken = `Bearer ${token}`;\n//     localStorage.setItem('FBIdToken', FBIdToken);\n//     axios.defaults.headers.common['Authorization'] = FBIdToken;\n// }"]},"metadata":{},"sourceType":"module"}