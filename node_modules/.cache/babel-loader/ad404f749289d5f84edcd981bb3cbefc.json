{"ast":null,"code":"var _jsxFileName = \"/home/mikebladez/Documents/cm-tracker/CM-Tracker-FE/src/util/authRoutes/PrivateAdminRoute.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nexport class PrivateAdminRoute extends Component {\n  constructor() {\n    super();\n    this.state = {\n      fullname: '',\n      pathName: ''\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps) {\n      console.log(\"Next props\", nextProps);\n      this.setState({\n        fullname: nextProps.adminFullname,\n        pathName: nextProps.computedMatch.params.fullname\n      });\n    }\n  }\n\n  render() {\n    const {\n      authenticated,\n      component,\n      adminFullname,\n      computedMatch: {\n        params: {\n          fullname\n        }\n      }\n    } = this.props; //fix authentication with fullname && id\n\n    let adminAuthentication = this.state.fullname === this.state.pathName;\n    console.log(\"This is trueee\", this.state.fullname, this.state.pathName); // console.log(\"provate route\", fullname, props);\n\n    let adminRoute = adminAuthentication ? React.createElement(Route, {\n      component: component,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    });\n    return adminRoute;\n  }\n\n}\nPrivateAdminRoute.propTypes = {\n  authenticated: PropTypes.bool.isRequired,\n  adminFullname: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  authenticated: state.admin.authenticated,\n  adminFullname: state.admin.fullname\n});\n\nexport default connect(mapStateToProps)(PrivateAdminRoute);","map":{"version":3,"sources":["/home/mikebladez/Documents/cm-tracker/CM-Tracker-FE/src/util/authRoutes/PrivateAdminRoute.js"],"names":["React","Component","Fragment","Route","Redirect","connect","PropTypes","PrivateAdminRoute","constructor","state","fullname","pathName","UNSAFE_componentWillReceiveProps","nextProps","console","log","setState","adminFullname","computedMatch","params","render","authenticated","component","props","adminAuthentication","adminRoute","propTypes","bool","isRequired","string","mapStateToProps","admin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAIA,OAAO,MAAMC,iBAAN,SAAgCN,SAAhC,CAA0C;AAC7CO,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,QAAQ,EAAC;AAFA,KAAb;AAIH;;AAEDC,EAAAA,gCAAgC,CAACC,SAAD,EAAW;AACvC,QAAGA,SAAH,EAAc;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBF,SAAzB;AACA,WAAKG,QAAL,CAAc;AACVN,QAAAA,QAAQ,EAAEG,SAAS,CAACI,aADV;AAEVN,QAAAA,QAAQ,EAAEE,SAAS,CAACK,aAAV,CAAwBC,MAAxB,CAA+BT;AAF/B,OAAd;AAIH;AACJ;;AAEDU,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA,SAAjB;AAA4BL,MAAAA,aAA5B;AAA2CC,MAAAA,aAAa,EAAE;AAACC,QAAAA,MAAM,EAAG;AAAET,UAAAA;AAAF;AAAV;AAA1D,QAAsF,KAAKa,KAAjG,CADK,CAEL;;AACA,QAAIC,mBAAmB,GAAI,KAAKf,KAAL,CAAWC,QAAX,KAAwB,KAAKD,KAAL,CAAWE,QAA9D;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6B,KAAKN,KAAL,CAAWC,QAAxC,EAAkD,KAAKD,KAAL,CAAWE,QAA7D,EAJK,CAKL;;AAEA,QAAIc,UAAU,GAAID,mBAAD,GACb,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEF,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa,GAGb,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ;AAMA,WAAQG,UAAR;AACH;;AAjC4C;AAoCjDlB,iBAAiB,CAACmB,SAAlB,GAA8B;AAC1BL,EAAAA,aAAa,EAAEf,SAAS,CAACqB,IAAV,CAAeC,UADJ;AAE1BX,EAAAA,aAAa,EAAEX,SAAS,CAACuB,MAAV,CAAiBD;AAFN,CAA9B;;AAMA,MAAME,eAAe,GAAIrB,KAAD,KAAY;AAChCsB,EAAAA,KAAK,EAAEtB,KAAK,CAACsB,KADmB;AAEhCV,EAAAA,aAAa,EAAEZ,KAAK,CAACsB,KAAN,CAAYV,aAFK;AAGhCJ,EAAAA,aAAa,EAAER,KAAK,CAACsB,KAAN,CAAYrB;AAHK,CAAZ,CAAxB;;AAQA,eAAeL,OAAO,CAACyB,eAAD,CAAP,CAAyBvB,iBAAzB,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport {Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n\n\nexport class PrivateAdminRoute extends Component {\n    constructor(){\n        super();\n        this.state = {\n            fullname: '',\n            pathName:''\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps){\n        if(nextProps) {\n            console.log(\"Next props\",nextProps)\n            this.setState({ \n                fullname: nextProps.adminFullname,\n                pathName: nextProps.computedMatch.params.fullname\n            })\n        }\n    }\n\n    render() {\n        const { authenticated, component, adminFullname, computedMatch :{params : { fullname }} } = this.props;\n        //fix authentication with fullname && id\n        let adminAuthentication = (this.state.fullname === this.state.pathName);\n        console.log(\"This is trueee\",this.state.fullname, this.state.pathName)\n        // console.log(\"provate route\", fullname, props);\n\n        let adminRoute = (adminAuthentication) ? (\n            <Route component={component} />\n        ) : (\n            <Redirect to='/' />\n        )\n\n        return (adminRoute)\n    }\n}\n\nPrivateAdminRoute.propTypes = {\n    authenticated: PropTypes.bool.isRequired,\n    adminFullname: PropTypes.string.isRequired\n}\n\n\nconst mapStateToProps = (state) => ({\n    admin: state.admin,\n    authenticated: state.admin.authenticated,\n    adminFullname: state.admin.fullname\n\n});\n\n\nexport default connect(mapStateToProps)(PrivateAdminRoute);"]},"metadata":{},"sourceType":"module"}