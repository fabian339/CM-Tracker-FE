{"ast":null,"code":"var _jsxFileName = \"/Users/mrfabian/Documents/cm-tracker-project/CM-Tracker-FE/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\"; //componets\n\nimport Navbar from './components/layout/Nav';\nimport login from './components/pages/public/login';\nimport adminRegister from './components/pages/registrations/admin/adminRegister';\nimport orgRegister from './components/pages/registrations/admin/organization/orgRegister';\nimport loadingAdminPage from './components/pages/adminPages/LoadingPageAdmin/loadingAdminPage';\nimport adminModules from './components/pages/adminPages/adminModules/adminModules';\nimport PrivateAdminRoute from './util/authRoutes/PrivateAdminRoute';\nimport PrivateUserRoute from './util/authRoutes/PrivateUserRoute';\nimport unauthPage from './components/pages/public/unauthPage';\nimport jwtDecode from 'jwt-decode';\nimport './App.css';\nimport registration from './components/pages/registrations/registerOptions/registration'; //REDUX\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { SET_AUTHENTICATED_USER, SET_AUTHENTICATED_ADMIN, SET_ERRORS } from './redux/types';\nimport { getAdminData, logoutAdmin } from './redux/actions/adminActions';\nimport { getUserData } from './redux/actions/userActions';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nconst token = localStorage.FBIdToken;\n\nif (token) {\n  const decodedtoken = jwtDecode(token); // console.log(decodedtoken.exp);\n\n  if (decodedtoken.exp * 1000 < Date.now()) {\n    store.dispatch(logoutAdmin());\n    window.location.href = '/login';\n  } else {\n    if (localStorage.accType === \"admin\") {\n      console.log(\"settiong headers\", window);\n      store.dispatch({\n        type: SET_AUTHENTICATED_ADMIN\n      }); // axios.defaults.headers.common['Authorization'] = token;\n      // store.dispatch(getAdminData(localStorage.fullname));\n    } else if (localStorage.accType === \"user\") {\n      store.dispatch({\n        type: SET_AUTHENTICATED_USER\n      });\n      axios.defaults.headers.common['Authorization'] = token;\n      store.dispatch(getUserData());\n    }\n  }\n}\n\nconsole.log(\"Called\", \"getAdminData\");\n\nfunction App() {\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(PrivateAdminRoute, {\n    exact: true,\n    path: \"/merge/admin/:fullname/organization/:orgId\",\n    component: loadingAdminPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(PrivateAdminRoute, {\n    exact: true,\n    path: \"/admin/:fullname/modules\",\n    component: adminModules,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(PrivateAdminRoute, {\n    exact: true,\n    path: \"/admin/:fullname/org-register\",\n    component: orgRegister,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/admin-register\",\n    component: adminRegister,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/registration\",\n    component: registration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    component: login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/UNAUTHORIZED\",\n    component: unauthPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mrfabian/Documents/cm-tracker-project/CM-Tracker-FE/src/App.js"],"names":["React","Navbar","login","adminRegister","orgRegister","loadingAdminPage","adminModules","PrivateAdminRoute","PrivateUserRoute","unauthPage","jwtDecode","registration","Provider","store","SET_AUTHENTICATED_USER","SET_AUTHENTICATED_ADMIN","SET_ERRORS","getAdminData","logoutAdmin","getUserData","axios","BrowserRouter","Router","Route","Switch","Redirect","token","localStorage","FBIdToken","decodedtoken","exp","Date","now","dispatch","window","location","href","accType","console","log","type","defaults","headers","common","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;+BAGA;;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,aAAP,MAA0B,sDAA1B;AACA,OAAOC,WAAP,MAAwB,iEAAxB;AACA,OAAOC,gBAAP,MAA6B,iEAA7B;AACA,OAAOC,YAAP,MAAyB,yDAAzB;AACA,OAAOC,iBAAP,MAA+B,qCAA/B;AACA,OAAOC,gBAAP,MAA8B,oCAA9B;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AAGA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,WAAP;AAEA,OAAOC,YAAP,MAAyB,+DAAzB,C,CACA;;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,sBAAT,EAAiCC,uBAAjC,EAA0DC,UAA1D,QAA4E,eAA5E;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,8BAA1C;AACA,SAASC,WAAT,QAA4B,6BAA5B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,KAAjC,EAAwCC,MAAxC,EAAgDC,QAAhD,QAA+D,kBAA/D;AAGA,MAAMC,KAAK,GAAGC,YAAY,CAACC,SAA3B;;AAEA,IAAGF,KAAH,EAAS;AACP,QAAMG,YAAY,GAAGnB,SAAS,CAACgB,KAAD,CAA9B,CADO,CAEP;;AACA,MAAGG,YAAY,CAACC,GAAb,GAAmB,IAAnB,GAA0BC,IAAI,CAACC,GAAL,EAA7B,EAAwC;AACtCnB,IAAAA,KAAK,CAACoB,QAAN,CAAef,WAAW,EAA1B;AACAgB,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACD,GAHD,MAGO;AACH,QAAGT,YAAY,CAACU,OAAb,KAAyB,OAA5B,EAAqC;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCL,MAAhC;AACArB,MAAAA,KAAK,CAACoB,QAAN,CAAe;AAAEO,QAAAA,IAAI,EAAEzB;AAAR,OAAf,EAFmC,CAGnC;AACA;AACD,KALD,MAKO,IAAGY,YAAY,CAACU,OAAb,KAAyB,MAA5B,EAAoC;AAC3CxB,MAAAA,KAAK,CAACoB,QAAN,CAAe;AAAEO,QAAAA,IAAI,EAAE1B;AAAR,OAAf;AACAM,MAAAA,KAAK,CAACqB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDjB,KAAjD;AACAb,MAAAA,KAAK,CAACoB,QAAN,CAAed,WAAW,EAA1B;AACD;AACF;AACF;;AAEWmB,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,cAAtB;;AAEZ,SAASK,GAAT,GAAe;AACb,SAEE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE/B,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AAAmB,IAAA,KAAK,MAAxB;AAAyB,IAAA,IAAI,EAAC,4CAA9B;AAA2E,IAAA,SAAS,EAAER,gBAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,iBAAD;AAAmB,IAAA,KAAK,MAAxB;AAAyB,IAAA,IAAI,EAAC,0BAA9B;AAAyD,IAAA,SAAS,EAAEC,YAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAIE,oBAAC,iBAAD;AAAmB,IAAA,KAAK,MAAxB;AAAyB,IAAA,IAAI,EAAC,+BAA9B;AAA8D,IAAA,SAAS,EAAEF,WAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,iBAAlB;AAAoC,IAAA,SAAS,EAAED,aAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,eAAlB;AAAkC,IAAA,SAAS,EAAEQ,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,SAAS,EAAET,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,eAAlB;AAAkC,IAAA,SAAS,EAAEO,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,CAFJ,CADF,CAFF;AAoBD;;AAED,eAAemC,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\n\n//componets\nimport Navbar from './components/layout/Nav';\nimport login from './components/pages/public/login';\nimport adminRegister from './components/pages/registrations/admin/adminRegister';\nimport orgRegister from './components/pages/registrations/admin/organization/orgRegister';\nimport loadingAdminPage from './components/pages/adminPages/LoadingPageAdmin/loadingAdminPage';\nimport adminModules from './components/pages/adminPages/adminModules/adminModules';\nimport PrivateAdminRoute from  './util/authRoutes/PrivateAdminRoute';\nimport PrivateUserRoute from  './util/authRoutes/PrivateUserRoute';\nimport unauthPage from './components/pages/public/unauthPage'\n\n\nimport jwtDecode from 'jwt-decode';\nimport './App.css';\n\nimport registration from './components/pages/registrations/registerOptions/registration';\n//REDUX\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { SET_AUTHENTICATED_USER, SET_AUTHENTICATED_ADMIN, SET_ERRORS } from './redux/types';\nimport { getAdminData, logoutAdmin } from './redux/actions/adminActions';\nimport { getUserData } from './redux/actions/userActions';\n\nimport axios from 'axios';\n\nimport {BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom'\n\n\nconst token = localStorage.FBIdToken;\n\nif(token){\n  const decodedtoken = jwtDecode(token);\n  // console.log(decodedtoken.exp);\n  if(decodedtoken.exp * 1000 < Date.now()){\n    store.dispatch(logoutAdmin());\n    window.location.href = '/login';\n  } else {\n      if(localStorage.accType === \"admin\") {\n        console.log(\"settiong headers\", window);\n        store.dispatch({ type: SET_AUTHENTICATED_ADMIN });\n        // axios.defaults.headers.common['Authorization'] = token;\n        // store.dispatch(getAdminData(localStorage.fullname));\n      } else if(localStorage.accType === \"user\") {\n      store.dispatch({ type: SET_AUTHENTICATED_USER });\n      axios.defaults.headers.common['Authorization'] = token;\n      store.dispatch(getUserData());\n    }\n  }\n}\n\n            console.log(\"Called\", \"getAdminData\")\n\nfunction App() {\n  return (\n    \n    <Provider store={store}>\n      <Router>\n        <Navbar />\n          <div className=\"container\">\n            <Switch>\n              <PrivateAdminRoute exact path=\"/merge/admin/:fullname/organization/:orgId\" component={loadingAdminPage} /> \n              <PrivateAdminRoute exact path=\"/admin/:fullname/modules\" component={adminModules} />\n              {/* <PrivateUserRoute exact path=\"/user/:fullname/page\" component={adminModules} /> */}\n              <PrivateAdminRoute exact path=\"/admin/:fullname/org-register\" component={orgRegister} />\n              <Route exact path=\"/admin-register\" component={adminRegister} />\n              <Route exact path=\"/registration\" component={registration} />\n              <Route exact path=\"/login\" component={login} />\n              <Route exact path=\"/UNAUTHORIZED\" component={unauthPage} />\n            </Switch>\n          </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}