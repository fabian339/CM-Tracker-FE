{"ast":null,"code":"import { SET_ADMIN, SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, SET_AUTHENTICATED_ADMIN, SET_UNAUTHENTICATED_ADMIN, SET_AUTHENTICATED_USER, SET_UNAUTHENTICATED_USER, LOADING_ADMIN, LOADING_USER, STOP_LOADING_UI, SET_ORGANIZATION, MARCK_NOTIFICATIONS_READ, ADD_ORGANIZATION, SET_ORGANIZATIONS, LOADING_DATA } from '../types';\nimport axios from 'axios';\nexport const loginFunc = (data, history) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/login', data).then(res => {\n    // console.log(res.data)\n    setAuthorizationHeader(res.data.token, res.data.role, res.data.fullname);\n\n    if (res.data.role === \"admin\") {\n      dispatch(getAdminData(res.data.fullname));\n      dispatch({\n        type: SET_AUTHENTICATED_ADMIN\n      });\n      dispatch({\n        type: CLEAR_ERRORS\n      });\n      history.push(`/admin/${res.data.fullname}/modules`);\n    } else if (res.data.role === \"regular-user\") {\n      dispatch(getUserData(res.data.fullname));\n      dispatch({\n        type: SET_AUTHENTICATED_USER\n      });\n      dispatch({\n        type: CLEAR_ERRORS\n      });\n      history.push(`/user/${res.data.fullname}/profile`);\n    }\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const getAdminData = fullname => dispatch => {\n  dispatch({\n    type: LOADING_ADMIN\n  });\n  axios.get(`/admin/${fullname}`).then(res => {\n    console.log(\"getting data\", res.data);\n    dispatch({\n      type: SET_ADMIN,\n      payload: res.data\n    });\n\n    if (res.data.organization) {\n      dispatch(getOrganization(res.data.fullname, res.data.organization));\n    } // console.log(\"PayloadData-->\", res.data.information.organization.orgName)\n\n  }).catch(err => {\n    console.log(err.response.data);\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const getUserData = fullname => dispatch => {\n  dispatch({\n    type: LOADING_USER\n  });\n  axios.get(`/user/${fullname}`).then(res => {\n    console.log(\"getting data\", res.data);\n    dispatch({\n      type: SET_USER,\n      payload: res.data\n    }); // if(res.data.organization){\n    //     dispatch(getOrganization(res.data.fullname, res.data.organization));\n    // }\n    // // console.log(\"PayloadData-->\", res.data.information.organization.orgName)\n  }).catch(err => {\n    console.log(err.response.data);\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const getOrganization = (fullname, orgName) => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get(`/admin/${fullname}/organization/${orgName}`).then(res => {\n    console.log(\"getting Organization data\", res.data);\n    dispatch({\n      type: SET_ORGANIZATION,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(err.response.data);\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const userRegistration = (newUserData, history) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/registerUser', newUserData).then(res => {\n    setAuthorizationHeader(res.data.token, res.data.role, res.data.fullname); // console.log(\"Calleddddd\", res.data)\n    // dispatch(getAdminData(res.data.fullname));\n    // dispatch({type: SET_AUTHENTICATED_ADMIN});\n    // dispatch({ type: CLEAR_ERRORS});\n\n    if (res.data.role === \"admin\") {\n      dispatch(getAdminData(res.data.fullname));\n      dispatch({\n        type: SET_AUTHENTICATED_ADMIN\n      });\n      dispatch({\n        type: CLEAR_ERRORS\n      });\n      history.push(`/admin/${res.data.fullname}/org-register`);\n    } else if (res.data.role === \"regular-user\") {\n      dispatch(getUserData(res.data.fullname));\n      dispatch({\n        type: SET_AUTHENTICATED_USER\n      });\n      dispatch({\n        type: CLEAR_ERRORS\n      });\n      history.push(`/user/${res.data.fullname}/profile`);\n    } // dispatch({\n    //     type: SET_AUTHENTICATED_PATHNAMES,\n    //     payload: newPath\n    // })\n    // history.push(newPath);\n\n  }).catch(err => {\n    console.log(err);\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const registerOrg = (newOrgData, history, fullname) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post(`/admin/${fullname}/orgRegister`, newOrgData).then(res => {\n    console.log(\"CALLED\");\n    dispatch({\n      type: ADD_ORGANIZATION,\n      payload: res.data\n    });\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    dispatch(mergeAdminWithOrg(fullname, res.data.orgId));\n    let pathName = `/merge/admin/${fullname}/organization/${res.data.orgId}`; // dispatch({\n    //     type: SET_AUTHENTICATED_PATHNAMES,\n    //     payload: pathName\n    // })\n\n    history.push(pathName);\n  }).catch(err => {\n    console.log(err);\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    }); //   console.log(err.response)\n  });\n}; //get organization with name\n\nexport const getOrgToMerge = (orgName, history, fullname) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.get(`/admin/${fullname}/organization/${orgName}`).then(res => {\n    console.log(\"CALLED\");\n    dispatch({\n      type: SET_ORGANIZATION,\n      payload: res.data\n    });\n    dispatch(mergeAdminWithOrg(fullname, res.data.orgId));\n    history.push(`/merge/admin/${fullname}/organization/${res.data.orgId}`);\n  }).catch(err => {\n    console.log(err);\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    }); //   console.log(err.response)\n  });\n}; //get all organizations\n\nexport const getOrganizations = fullname => dispatch => {\n  console.log(\"BEIN CALLED\", fullname);\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get(`/admin/${fullname}/organizations`).then(res => {\n    dispatch({\n      type: SET_ORGANIZATIONS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: SET_ORGANIZATIONS,\n      payload: []\n    });\n  });\n};\nexport const mergeAdminWithOrg = (fullname, orgId) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  console.log(\"Called\", \"getAdminData\");\n  axios.put(`/merge/admin/${fullname}/organization/${orgId}`).then(res => {\n    console.log(res);\n    dispatch(getAdminData(fullname)); // dispatch({ type: CLEAR_ERRORS});\n  }).catch(err => {\n    console.log(err);\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; // export const getOrgData = (orgId) => (dispatch) => {\n//     dispatch({ type: LOADING_UI });\n//     axios.get(`/organization/${orgId}`)\n//     .then((res) => {\n//         dispatch({\n//             type: SET_ORGANIZATION,\n//             payload: res.data\n//         });\n//         dispatch({ type: STOP_LOADING_UI })\n//     })\n//     .catch(err =>  console.log(err) );\n// }\n\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem('FBIdToken');\n  localStorage.removeItem('fullname');\n\n  if (localStorage.role === \"admin\") {\n    dispatch({\n      type: SET_UNAUTHENTICATED_ADMIN\n    });\n  } else if (localStorage.role === \"regular-user\") {\n    dispatch({\n      type: SET_UNAUTHENTICATED_USER\n    });\n  }\n\n  delete axios.defaults.headers.common['Authorization'];\n  localStorage.removeItem('role');\n}; // export const uploadImage = (formData) => (dispatch) => {\n//     // dispatch( { type: ON_IMAGE_CHANGE });\n//     dispatch({ type: LOADING_USER });\n//     axios.post('/user/image', formData)\n//     .then(() => {\n//         dispatch(getUserData());\n//         //refetch secrets from serve after 2 seconds to avoid incorrect data\n//         setTimeout(() => {dispatch(getSecrets(true))}, 2500);\n//     })\n//     .catch(err => console.log(err));\n// }\n// export const editUserDetails = (userDetails) => (dispatch) => {\n//     dispatch({ type: LOADING_USER});\n//     axios.post('/user', userDetails)\n//     .then(() => {\n//         dispatch(getUserData());\n//     })\n//     .catch(err => console.log(err));\n// }\n// export const markNotificationsRead = (notificationIds) => (dispatch) => {\n//     axios.post('/notifications', notificationIds)\n//     .then(res => {\n//         dispatch({ type: MARCK_NOTIFICATIONS_READ })\n//     })\n//     .catch(err => console.log(err));\n// }\n\nconst setAuthorizationHeader = (token, role, fullname) => {\n  const FBIdToken = `Bearer ${token}`;\n  localStorage.setItem('FBIdToken', FBIdToken);\n  localStorage.setItem('role', role);\n  localStorage.setItem('fullname', fullname);\n  axios.defaults.headers.common['Authorization'] = FBIdToken;\n};","map":{"version":3,"sources":["/Users/mrfabian/Documents/cm-tracker-project/CM-Tracker-FE/src/redux/actions/userActions.js"],"names":["SET_ADMIN","SET_USER","SET_ERRORS","CLEAR_ERRORS","LOADING_UI","SET_AUTHENTICATED_ADMIN","SET_UNAUTHENTICATED_ADMIN","SET_AUTHENTICATED_USER","SET_UNAUTHENTICATED_USER","LOADING_ADMIN","LOADING_USER","STOP_LOADING_UI","SET_ORGANIZATION","MARCK_NOTIFICATIONS_READ","ADD_ORGANIZATION","SET_ORGANIZATIONS","LOADING_DATA","axios","loginFunc","data","history","dispatch","type","post","then","res","setAuthorizationHeader","token","role","fullname","getAdminData","push","getUserData","catch","err","payload","response","get","console","log","organization","getOrganization","orgName","userRegistration","newUserData","registerOrg","newOrgData","mergeAdminWithOrg","orgId","pathName","getOrgToMerge","getOrganizations","put","logoutUser","localStorage","removeItem","defaults","headers","common","FBIdToken","setItem"],"mappings":"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","sourcesContent":["import { \n    SET_ADMIN, \n    SET_USER,\n    SET_ERRORS, \n    CLEAR_ERRORS, \n    LOADING_UI, \n    SET_AUTHENTICATED_ADMIN,\n    SET_UNAUTHENTICATED_ADMIN, \n    SET_AUTHENTICATED_USER,\n    SET_UNAUTHENTICATED_USER, \n    LOADING_ADMIN,\n    LOADING_USER,\n    STOP_LOADING_UI,\n    SET_ORGANIZATION, \n    MARCK_NOTIFICATIONS_READ,\n    ADD_ORGANIZATION,\n    SET_ORGANIZATIONS,\n    LOADING_DATA,    \n    } from '../types';\n\nimport axios from 'axios';\n\nexport const loginFunc = (data, history) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    axios.post('/login', data)\n    .then((res) => {\n        // console.log(res.data)\n        setAuthorizationHeader(res.data.token, res.data.role, res.data.fullname);\n        if(res.data.role === \"admin\"){\n            dispatch(getAdminData(res.data.fullname));\n            dispatch({type: SET_AUTHENTICATED_ADMIN});\n            dispatch({ type: CLEAR_ERRORS});\n            history.push(`/admin/${res.data.fullname}/modules`);\n        }\n        else if(res.data.role === \"regular-user\"){\n            dispatch(getUserData(res.data.fullname));\n            dispatch({type: SET_AUTHENTICATED_USER});\n            dispatch({ type: CLEAR_ERRORS});\n            history.push(`/user/${res.data.fullname}/profile`);\n        }\n    })\n    .catch(err => {\n      dispatch({\n          type: SET_ERRORS,\n          payload: err.response.data\n      })\n    });\n}\n\nexport const getAdminData = (fullname) => (dispatch) => {\n    dispatch({ type: LOADING_ADMIN });\n    axios.get(`/admin/${fullname}`)\n    .then((res) => {\n        console.log(\"getting data\", res.data)\n        dispatch({\n            type: SET_ADMIN,\n            payload: res.data\n        })\n        if(res.data.organization){\n            dispatch(getOrganization(res.data.fullname, res.data.organization));\n        }\n        // console.log(\"PayloadData-->\", res.data.information.organization.orgName)\n    })\n    .catch(err => {\n        console.log(err.response.data)\n        dispatch({\n            type: SET_ERRORS,\n            payload: err.response.data\n        })\n    })\n}\n\nexport const getUserData = (fullname) => (dispatch) => {\n    dispatch({ type: LOADING_USER });\n    axios.get(`/user/${fullname}`)\n    .then((res) => {\n        console.log(\"getting data\", res.data)\n        dispatch({\n            type: SET_USER,\n            payload: res.data\n        })\n        // if(res.data.organization){\n        //     dispatch(getOrganization(res.data.fullname, res.data.organization));\n        // }\n        // // console.log(\"PayloadData-->\", res.data.information.organization.orgName)\n    })\n    .catch(err => {\n        console.log(err.response.data)\n        dispatch({\n            type: SET_ERRORS,\n            payload: err.response.data\n        })\n    })\n}\n\nexport const getOrganization = (fullname, orgName) => (dispatch) => {\n    dispatch( { type: LOADING_DATA });\n\n    axios.get(`/admin/${fullname}/organization/${orgName}`)\n    .then((res) => {\n        console.log(\"getting Organization data\", res.data)\n        dispatch({\n            type: SET_ORGANIZATION,\n            payload: res.data\n        })\n    })\n    .catch(err => {\n        console.log(err.response.data)\n        dispatch({\n            type: SET_ERRORS,\n            payload: err.response.data\n        })\n    })\n}\n\nexport const userRegistration = (newUserData, history) => (dispatch) => {\n\n    dispatch({ type: LOADING_UI });\n    axios.post('/registerUser', newUserData)\n    .then((res) => {\n        setAuthorizationHeader(res.data.token, res.data.role, res.data.fullname);\n        // console.log(\"Calleddddd\", res.data)\n\n        // dispatch(getAdminData(res.data.fullname));\n        // dispatch({type: SET_AUTHENTICATED_ADMIN});\n        // dispatch({ type: CLEAR_ERRORS});\n        if(res.data.role === \"admin\"){\n            dispatch(getAdminData(res.data.fullname));\n            dispatch({type: SET_AUTHENTICATED_ADMIN});\n            dispatch({ type: CLEAR_ERRORS});\n            history.push(`/admin/${res.data.fullname}/org-register`);\n        }\n        else if(res.data.role === \"regular-user\"){\n            dispatch(getUserData(res.data.fullname));\n            dispatch({type: SET_AUTHENTICATED_USER});\n            dispatch({ type: CLEAR_ERRORS});\n            history.push(`/user/${res.data.fullname}/profile`);\n        }\n        // dispatch({\n        //     type: SET_AUTHENTICATED_PATHNAMES,\n        //     payload: newPath\n        // })\n        // history.push(newPath);\n    })\n    .catch(err => {\n        console.log(err)\n      dispatch({\n          type: SET_ERRORS,\n          payload: err.response.data\n      })\n\n    });\n}\n\nexport const registerOrg = (newOrgData, history, fullname) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    axios.post(`/admin/${fullname}/orgRegister`, newOrgData)\n    .then((res) => {\n        console.log(\"CALLED\")\n        dispatch({\n            type: ADD_ORGANIZATION,\n            payload: res.data\n        });\n        dispatch({ type: CLEAR_ERRORS});\n        dispatch(mergeAdminWithOrg(fullname, res.data.orgId));\n        let pathName = `/merge/admin/${fullname}/organization/${res.data.orgId}`;\n        // dispatch({\n        //     type: SET_AUTHENTICATED_PATHNAMES,\n        //     payload: pathName\n        // })\n        history.push(pathName);\n    })\n    .catch(err => {\n        console.log(err)\n      dispatch({\n          type: SET_ERRORS,\n          payload: err.response.data\n      })\n    //   console.log(err.response)\n    });\n}\n\n//get organization with name\nexport const getOrgToMerge = (orgName, history, fullname) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    axios.get(`/admin/${fullname}/organization/${orgName}`)\n    .then((res) => {\n        console.log(\"CALLED\")\n        dispatch({\n            type: SET_ORGANIZATION,\n            payload: res.data\n        });\n        dispatch(mergeAdminWithOrg(fullname, res.data.orgId));\n        history.push(`/merge/admin/${fullname}/organization/${res.data.orgId}`);\n    })\n    .catch(err => {\n        console.log(err)\n      dispatch({\n          type: SET_ERRORS,\n          payload: err.response.data\n      })\n    //   console.log(err.response)\n    });\n}\n\n//get all organizations\nexport const getOrganizations = (fullname) => (dispatch) => {\n        console.log(\"BEIN CALLED\", fullname);\n        dispatch( { type: LOADING_DATA });\n        axios.get(`/admin/${fullname}/organizations`)\n        .then((res) => {\n            dispatch({\n                type: SET_ORGANIZATIONS,\n                payload: res.data\n            });\n        })\n        .catch(err => {\n            dispatch({\n                type: SET_ORGANIZATIONS,\n                payload: []\n            });\n        });\n}\n\nexport const mergeAdminWithOrg = (fullname, orgId) => dispatch => {\n    dispatch({ type: LOADING_UI });\n    console.log(\"Called\", \"getAdminData\")\n\n    axios.put(`/merge/admin/${fullname}/organization/${orgId}`)\n    .then(res => {\n        console.log(res)\n        dispatch(getAdminData(fullname));\n        // dispatch({ type: CLEAR_ERRORS});\n    })\n    .catch(err => {\n        console.log(err)\n      dispatch({\n          type: SET_ERRORS,\n          payload: err.response.data\n      })\n    })\n}\n// export const getOrgData = (orgId) => (dispatch) => {\n//     dispatch({ type: LOADING_UI });\n//     axios.get(`/organization/${orgId}`)\n//     .then((res) => {\n//         dispatch({\n//             type: SET_ORGANIZATION,\n//             payload: res.data\n//         });\n//         dispatch({ type: STOP_LOADING_UI })\n//     })\n//     .catch(err =>  console.log(err) );\n// }\n\nexport const logoutUser = () => (dispatch) => {\n    localStorage.removeItem('FBIdToken');\n    localStorage.removeItem('fullname');\n    if(localStorage.role === \"admin\"){\n        dispatch({ type: SET_UNAUTHENTICATED_ADMIN });\n    } else if (localStorage.role === \"regular-user\"){\n        dispatch({ type: SET_UNAUTHENTICATED_USER });\n    }\n    delete axios.defaults.headers.common['Authorization'];\n    localStorage.removeItem('role');\n}\n\n// export const uploadImage = (formData) => (dispatch) => {\n//     // dispatch( { type: ON_IMAGE_CHANGE });\n//     dispatch({ type: LOADING_USER });\n//     axios.post('/user/image', formData)\n//     .then(() => {\n//         dispatch(getUserData());\n//         //refetch secrets from serve after 2 seconds to avoid incorrect data\n//         setTimeout(() => {dispatch(getSecrets(true))}, 2500);\n//     })\n//     .catch(err => console.log(err));\n// }\n\n\n// export const editUserDetails = (userDetails) => (dispatch) => {\n//     dispatch({ type: LOADING_USER});\n\n//     axios.post('/user', userDetails)\n//     .then(() => {\n//         dispatch(getUserData());\n//     })\n//     .catch(err => console.log(err));\n// }\n\n\n// export const markNotificationsRead = (notificationIds) => (dispatch) => {\n//     axios.post('/notifications', notificationIds)\n//     .then(res => {\n//         dispatch({ type: MARCK_NOTIFICATIONS_READ })\n//     })\n//     .catch(err => console.log(err));\n// }\n\n\nconst setAuthorizationHeader = (token, role, fullname) => {\n    const FBIdToken = `Bearer ${token}`;\n    localStorage.setItem('FBIdToken', FBIdToken);\n    localStorage.setItem('role', role);\n    localStorage.setItem('fullname', fullname);\n    axios.defaults.headers.common['Authorization'] = FBIdToken;\n}"]},"metadata":{},"sourceType":"module"}