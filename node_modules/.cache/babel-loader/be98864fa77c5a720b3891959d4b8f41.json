{"ast":null,"code":"var _jsxFileName = \"/home/mikebladez/Documents/cm-tracker/CM-Tracker-FE/src/components/pages/registrations/admin/merging/loadingAdminPage.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'; // import AppIcon from '../images/ori_logo.png';\n\nimport Typography from '@material-ui/core/Typography';\nimport appLogo from '../../../../../images/ori_logo.png'; // import styles from '../styles';\n\nimport { Bounce, Shake, FadeIn, FadeOut, Flash } from 'react-motions'; //https://github.com/raphamorim/react-motions\n//mui studd\n\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport MuiPhoneNumber from \"material-ui-phone-number\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport PanToolIcon from '@material-ui/icons/PanTool';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CircularProgress from '@material-ui/core/CircularProgress'; //Redux stuf\n\nimport { connect } from 'react-redux';\nimport { mergeAdminWithOrg } from '../../../../../redux/actions/adminActions';\n\nconst Link = require(\"react-router-dom\").Link;\n\nconst styles = {\n  container: {\n    // backgroundColor: \"black\",\n    // width: '320px',\n    height: '320px',\n    margin: \"5% 40%\"\n  },\n  ladderLoading: {// width: \"\",\n    // height: \"500px\"\n  }\n};\n\nclass loadingAdminPage extends Component {\n  // const p =    setInterval(() => <p style={{fontSize:\"100px\"}}>Loading</p>, 1000);\n  // const classes = useStyles();\n  constructor() {\n    super();\n\n    this.addProgress = () => {\n      console.log(\"Adding\");\n      this.setState({\n        percentage: this.state.percentage + 10,\n        timer: this.state.timer + 1\n      });\n    };\n\n    this.resetPercentage = () => {\n      console.log(\"Stoping\");\n      this.setState({\n        percentage: 100,\n        start: false\n      });\n    };\n\n    this.runTimer = () => {\n      if (this.state.percentage != 100 && this.state.start) {\n        this.addProgress();\n      } else {\n        this.resetPercentage();\n      }\n    };\n\n    this.state = {\n      percentage: 0,\n      start: true,\n      timer: 1\n    };\n  } // const [completed, setCompleted] = React.useState(0);\n\n\n  render() {\n    // let timer;\n    // if(this.state.percentage <= 100){\n    //     console.log(\"Lopping\")\n    //     if(this.state.start){\n    //      timer = setInterval(()=> {\n    //             this.runTimer()\n    //         }, 1000);\n    //     }\n    //         // if (this.state.timer === 10){\n    //         //     console.log(\"cleaning\")\n    //         // }\n    //     }\n    //     if(!this.state.start){\n    //             clearInterval(timer);\n    //     }\n    // var time = 1;\n    var interval = setInterval(() => {\n      if (this.state.timer <= 10) {\n        this.runTimer(); // time++;\n      } else {\n        console.log(\"Stoppinggg Noww\");\n        clearInterval(interval);\n      }\n    }, 5000);\n    console.log(this.state.percentage, this.state.timer);\n    return React.createElement(\"div\", {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      variant: \"static\",\n      value: this.state.percentage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default loadingAdminPage;","map":{"version":3,"sources":["/home/mikebladez/Documents/cm-tracker/CM-Tracker-FE/src/components/pages/registrations/admin/merging/loadingAdminPage.js"],"names":["React","Component","PropTypes","Typography","appLogo","Bounce","Shake","FadeIn","FadeOut","Flash","Grid","TextField","Button","MuiPhoneNumber","Select","MenuItem","FormControl","PanToolIcon","Radio","RadioGroup","FormControlLabel","Switch","InputLabel","EmojiEmotionsIcon","LinearProgress","CircularProgress","connect","mergeAdminWithOrg","Link","require","styles","container","height","margin","ladderLoading","loadingAdminPage","constructor","addProgress","console","log","setState","percentage","state","timer","resetPercentage","start","runTimer","render","interval","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import AppIcon from '../images/ori_logo.png';\nimport Typography from '@material-ui/core/Typography';\nimport appLogo from '../../../../../images/ori_logo.png';\n// import styles from '../styles';\nimport { Bounce, Shake, FadeIn, FadeOut, Flash } from 'react-motions' //https://github.com/raphamorim/react-motions\n\n\n//mui studd\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport MuiPhoneNumber from \"material-ui-phone-number\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport PanToolIcon from '@material-ui/icons/PanTool';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n//Redux stuf\nimport { connect } from 'react-redux';\nimport { mergeAdminWithOrg } from '../../../../../redux/actions/adminActions'\n\nconst Link = require(\"react-router-dom\").Link\n\nconst styles = {\n    container: {\n        // backgroundColor: \"black\",\n        // width: '320px',\n        height: '320px',\n        margin: \"5% 40%\"\n    },\n    ladderLoading: {\n        // width: \"\",\n        // height: \"500px\"\n    }\n}\n\n\nclass loadingAdminPage extends Component {\n        // const p =    setInterval(() => <p style={{fontSize:\"100px\"}}>Loading</p>, 1000);\n        // const classes = useStyles();\n        constructor(){\n            super();\n            this.state = {\n                percentage: 0,\n                start: true,\n                timer: 1\n            }\n        }\n        // const [completed, setCompleted] = React.useState(0);\n      \n        addProgress  = () => {\n               console.log(\"Adding\")\n            this.setState({ percentage: this.state.percentage + 10, timer: this.state.timer + 1})\n          }\n          \n        resetPercentage = () => {\n            console.log(\"Stoping\")\n            this.setState({percentage: 100, start: false})\n        }\n\n        runTimer = () => {\n            if(this.state.percentage != 100 && this.state.start){\n                this.addProgress()\n            } else {\n                this.resetPercentage()\n            }\n        }\n\n        render() {\n            // let timer;\n            // if(this.state.percentage <= 100){\n            //     console.log(\"Lopping\")\n            //     if(this.state.start){\n            //      timer = setInterval(()=> {\n            //             this.runTimer()\n            //         }, 1000);\n            //     }\n            //         // if (this.state.timer === 10){\n            //         //     console.log(\"cleaning\")\n            //         // }\n            //     }\n            //     if(!this.state.start){\n\n            //             clearInterval(timer);\n            //     }\n\n            // var time = 1;\n\n            var interval = setInterval(() => {\n            if (this.state.timer <= 10) { \n                this.runTimer()\n                // time++;\n            } else { \n                console.log(\"Stoppinggg Noww\")\n                clearInterval(interval);\n            }\n            }, 5000);\n\n      \n            console.log(this.state.percentage, this.state.timer);\n            \n            return (\n                <div style={styles.container}>\n                    {/* <LinearProgress variant=\"determinate\" value={75} />\n                    <LinearProgress variant=\"determinate\" value={10} color=\"secondary\" /> */}\n                        <CircularProgress variant=\"static\" value={this.state.percentage} />\n\n                </div>\n                \n            )\n        }\n    \n}\n\n\nexport default loadingAdminPage\n"]},"metadata":{},"sourceType":"module"}