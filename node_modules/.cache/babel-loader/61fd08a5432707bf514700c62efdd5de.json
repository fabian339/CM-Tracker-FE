{"ast":null,"code":"var _jsxFileName = \"/home/mikebladez/Documents/cm-tracker/CM-Tracker-FE/src/util/authRoutes/PrivateAdminRoute.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nexport class PrivateAdminRoute extends Component {\n  render() {\n    const {\n      authenticated,\n      component\n    } = this.props;\n    console.log(\"private route\");\n    var authUrl = window.location.pathname.includes(localStorage.fullname);\n    let adminRoute = authenticated && authUrl ? React.createElement(Route, {\n      component: component,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/UNAUTHORIZED\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n    return adminRoute;\n  }\n\n}\nPrivateAdminRoute.propTypes = {\n  authenticated: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  authenticated: state.admin.authenticated\n});\n\nexport default connect(mapStateToProps)(PrivateAdminRoute);","map":{"version":3,"sources":["/home/mikebladez/Documents/cm-tracker/CM-Tracker-FE/src/util/authRoutes/PrivateAdminRoute.js"],"names":["React","Component","Fragment","Route","Redirect","connect","PropTypes","PrivateAdminRoute","render","authenticated","component","props","console","log","authUrl","window","location","pathname","includes","localStorage","fullname","adminRoute","propTypes","bool","isRequired","mapStateToProps","state","admin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAIA,OAAO,MAAMC,iBAAN,SAAgCN,SAAhC,CAA0C;AAC7CO,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,QAA8B,KAAKC,KAAzC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,QAAIC,OAAO,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,QAAzB,CAAkCC,YAAY,CAACC,QAA/C,CAAd;AAEA,QAAIC,UAAU,GAAIZ,aAAa,IAAIK,OAAlB,GACb,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEJ,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa,GAGb,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ;AAMA,WAAQW,UAAR;AACH;;AAb4C;AAgBjDd,iBAAiB,CAACe,SAAlB,GAA8B;AAC1Bb,EAAAA,aAAa,EAAEH,SAAS,CAACiB,IAAV,CAAeC;AADJ,CAA9B;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCjB,EAAAA,aAAa,EAAEiB,KAAK,CAACC,KAAN,CAAYlB;AADK,CAAZ,CAAxB;;AAKA,eAAeJ,OAAO,CAACoB,eAAD,CAAP,CAAyBlB,iBAAzB,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport {Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n\n\nexport class PrivateAdminRoute extends Component {\n    render() {\n        const { authenticated, component} = this.props;\n        console.log(\"private route\");\n        var authUrl = window.location.pathname.includes(localStorage.fullname);\n\n        let adminRoute = (authenticated && authUrl) ? (\n            <Route component={component} />\n        ) : (\n            <Redirect to='/UNAUTHORIZED' />\n        )\n\n        return (adminRoute)\n    }\n}\n\nPrivateAdminRoute.propTypes = {\n    authenticated: PropTypes.bool.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n    authenticated: state.admin.authenticated,\n});\n\n\nexport default connect(mapStateToProps)(PrivateAdminRoute);"]},"metadata":{},"sourceType":"module"}