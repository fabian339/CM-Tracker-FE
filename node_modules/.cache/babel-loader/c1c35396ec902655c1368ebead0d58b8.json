{"ast":null,"code":"var _jsxFileName = \"/Users/mrfabian/Documents/cm-tracker-project/CM-Tracker-FE/src/components/layout/Nav.js\";\nimport React, { Component, Fragment } from 'react'; // import Link from 'react-router-dom/Link'\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography'; // MUI stuff\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button'; //icons \n// import LocationOn from '@material-ui/icons/LocationOn'\n// import AddIcon from '@material-ui/icons/Add'\n// import HomeIcon from '@material-ui/icons/Home'\n// import Notifications from '@material-ui/icons/Notifications'\n\nconst Link = require(\"react-router-dom\").Link;\n\nconst styles = {\n  navContainer: {\n    backgroundColor: \"mediumturquoise\"\n  },\n  navButtons: {\n    fontSize: \"initial\",\n    color: \"dimgray\",\n    fontWeight: \"600\"\n  },\n  title: {\n    flexGrow: 1\n  }\n};\nexport class Nav extends Component {\n  render() {\n    const {\n      authenticatedUser,\n      authenticatedAdmin\n    } = this.props;\n    console.log(\"NAvv\", this.props);\n    return React.createElement(AppBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      style: styles.navContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      style: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: styles.navButtons,\n      color: \"inherit\",\n      component: Link,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"CM-Tracker\")), authenticatedUser ? React.createElement(Button, {\n      style: styles.navButtons,\n      color: \"inherit\",\n      component: Link,\n      to: \"/documentation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \" Documentation\") : authenticatedAdmin ? React.createElement(Button, {\n      style: styles.navButtons,\n      color: \"inherit\",\n      component: Link,\n      to: \"/documentation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \" Documentation\") : React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: styles.navButtons,\n      color: \"inherit\",\n      component: Link,\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Login\"), React.createElement(Button, {\n      style: styles.navButtons,\n      color: \"inherit\",\n      component: Link,\n      to: \"/registration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \" Register\"), React.createElement(Button, {\n      style: styles.navButtons,\n      color: \"inherit\",\n      component: Link,\n      to: \"/documentation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \" Documentation\"))));\n  }\n\n}\nNav.propTypes = {\n  authenticatedUser: PropTypes.bool.isRequired,\n  authenticatedAdmin: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  authenticatedUser: state.user.authenticated,\n  authenticatedAdmin: state.admin.authenticated\n});\n\nexport default connect(mapStateToProps)(Nav);","map":{"version":3,"sources":["/Users/mrfabian/Documents/cm-tracker-project/CM-Tracker-FE/src/components/layout/Nav.js"],"names":["React","Component","Fragment","connect","PropTypes","Typography","AppBar","Toolbar","Button","Link","require","styles","navContainer","backgroundColor","navButtons","fontSize","color","fontWeight","title","flexGrow","Nav","render","authenticatedUser","authenticatedAdmin","props","console","log","propTypes","bool","isRequired","mapStateToProps","state","user","authenticated","admin"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\n// import Link from 'react-router-dom/Link'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\n\n// MUI stuff\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n\n//icons \n// import LocationOn from '@material-ui/icons/LocationOn'\n// import AddIcon from '@material-ui/icons/Add'\n// import HomeIcon from '@material-ui/icons/Home'\n// import Notifications from '@material-ui/icons/Notifications'\n\n\nconst Link = require(\"react-router-dom\").Link\n\nconst styles = {\n    navContainer: {\n        backgroundColor: \"mediumturquoise\"\n    },\n    navButtons: {\n        fontSize: \"initial\",\n        color: \"dimgray\",\n        fontWeight: \"600\"\n    },\n    title: {\n        flexGrow: 1,\n      }\n};\n\nexport class Nav extends Component {\n    render() {\n        const { authenticatedUser, authenticatedAdmin } = this.props;\n        console.log(\"NAvv\", this.props);\n\n        return (\n            <AppBar>\n                <Toolbar style={styles.navContainer}>\n                    {/* <Fragment>\n                        <Button color=\"inherit\" component={Link} to=\"/\" >Home</Button>\n                        <Button color=\"inherit\" component={Link} to=\"/login\" >Login</Button>\n                        <Button color=\"inherit\" component={Link} to=\"signup\" >Signup</Button>\n                    </Fragment> */}\n                    <Typography variant=\"h6\" style={styles.title}>\n                        <Button style={styles.navButtons} color=\"inherit\" component={Link} to=\"/\" >CM-Tracker</Button>\n                    </Typography>\n                    { authenticatedUser ? (\n                        <Button style={styles.navButtons} color=\"inherit\" component={Link} to=\"/documentation\" > Documentation</Button>\n                    ) : (\n                        authenticatedAdmin ? (\n                            <Button style={styles.navButtons} color=\"inherit\" component={Link} to=\"/documentation\" > Documentation</Button>\n                        ) : (\n                            <Fragment >\n                                <Button style={styles.navButtons} color=\"inherit\" component={Link} to=\"/login\" >Login</Button>\n                                <Button style={styles.navButtons} color=\"inherit\" component={Link} to=\"/registration\" > Register</Button>\n                                <Button style={styles.navButtons} color=\"inherit\" component={Link} to=\"/documentation\" > Documentation</Button>\n                            </Fragment>\n                        )\n                    )\n                    \n                    }\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}\n\n\nNav.propTypes = {\n    authenticatedUser: PropTypes.bool.isRequired,\n    authenticatedAdmin: PropTypes.bool.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    authenticatedUser: state.user.authenticated,\n    authenticatedAdmin: state.admin.authenticated\n})\n\nexport default connect(mapStateToProps)(Nav);"]},"metadata":{},"sourceType":"module"}