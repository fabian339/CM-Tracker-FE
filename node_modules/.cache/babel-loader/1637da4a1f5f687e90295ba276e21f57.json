{"ast":null,"code":"var _jsxFileName = \"/Users/mrfabian/Documents/cm-tracker-project/CM-Tracker-FE/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\"; //componets\n\nimport Navbar from './components/layout/Nav';\nimport login from './components/pages/public/login';\nimport adminRegister from './components/pages/registrations/admin/adminRegister';\nimport orgRegister from './components/pages/registrations/admin/organization/orgRegister';\nimport mergingAdminWithOrg from './components/pages/registrations/admin/merging/mergingAdminWithOrg';\nimport AuthRoute from './util/AuthRoute';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport jwtDecode from 'jwt-decode';\nimport './App.css';\nimport registration from './components/pages/registrations/modules/registration'; //REDUX\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { SET_AUTHENTICATED_USER, SET_AUTHENTICATED_ADMIN } from './redux/types';\nimport { logoutAdminUser, getAdminData } from './redux/actions/adminActions'; // import { getCurrentAdmin } from './redux/actions/adminActions'\n\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nconst token = localStorage.FBIdToken;\n\nif (token) {\n  const decodedtoken = jwtDecode(token); // console.log(decodedtoken.exp);\n\n  if (decodedtoken.exp * 1000 < Date.now()) {\n    store.dispatch(logoutAdminUser());\n    window.location.href = '/login';\n  } else {\n    store.dispatch({\n      type: SET_AUTHENTICATED_USER\n    });\n    axios.defaults.headers.common['Authorization'] = token; // store.dispatch(getAdminData());\n  }\n}\n\nclass App extends Component {\n  render() {\n    return React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/merge/admin/:fullname/organization/:orgId\",\n      component: mergingAdminWithOrg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(AuthRoute, {\n      exact: true,\n      path: \"/admin-register\",\n      component: adminRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/admin/:fullname/org-register\",\n      component: orgRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/registration\",\n      component: registration,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(AuthRoute, {\n      exact: true,\n      path: \"/login\",\n      component: login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nApp.propTypes = {\n  admin: PropTypes.object.isRequired // UI: PropTypes.object.isRequired,\n  // adminRegistration: PropTypes.func.isRequired\n\n};\n\nconst mapStateToProps = state => ({\n  admin: state.admin // UI: state.UI\n\n});\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/mrfabian/Documents/cm-tracker-project/CM-Tracker-FE/src/App.js"],"names":["React","Component","Navbar","login","adminRegister","orgRegister","mergingAdminWithOrg","AuthRoute","PropTypes","connect","jwtDecode","registration","Provider","store","SET_AUTHENTICATED_USER","SET_AUTHENTICATED_ADMIN","logoutAdminUser","getAdminData","axios","BrowserRouter","Router","Route","Switch","token","localStorage","FBIdToken","decodedtoken","exp","Date","now","dispatch","window","location","href","type","defaults","headers","common","App","render","propTypes","admin","object","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\n\n//componets\nimport Navbar from './components/layout/Nav';\nimport login from './components/pages/public/login';\nimport adminRegister from './components/pages/registrations/admin/adminRegister';\nimport orgRegister from './components/pages/registrations/admin/organization/orgRegister';\nimport mergingAdminWithOrg from './components/pages/registrations/admin/merging/mergingAdminWithOrg';\nimport AuthRoute from  './util/AuthRoute'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport jwtDecode from 'jwt-decode';\nimport './App.css';\n\nimport registration from './components/pages/registrations/modules/registration';\n//REDUX\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { SET_AUTHENTICATED_USER, SET_AUTHENTICATED_ADMIN } from './redux/types';\nimport { logoutAdminUser, getAdminData } from './redux/actions/adminActions';\n// import { getCurrentAdmin } from './redux/actions/adminActions'\n\nimport axios from 'axios';\n\n\n\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\n\n\nconst token = localStorage.FBIdToken;\nif(token){\n  const decodedtoken = jwtDecode(token);\n  // console.log(decodedtoken.exp);\n  if(decodedtoken.exp * 1000 < Date.now()){\n    store.dispatch(logoutAdminUser());\n    window.location.href = '/login';\n  } else {\n    store.dispatch({ type: SET_AUTHENTICATED_USER });\n    axios.defaults.headers.common['Authorization'] = token;\n    // store.dispatch(getAdminData());\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <Navbar />\n            <div className=\"container\">\n              <Switch>\n                {/* <Route exact path=\"/\" component={home} /> */}\n                {/* <AuthRoute exact path=\"/login\" component={login} /> */}\n                {/* <AuthRoute exact path=\"/signup\" component={signup} />\n                <Route exact path=\"/admin/:fullname/modules\" component={user} />*/}\n                <Route exact path=\"/merge/admin/:fullname/organization/:orgId\" component={mergingAdminWithOrg} /> \n                <AuthRoute exact path=\"/admin-register\" component={adminRegister} />\n                <Route exact path=\"/admin/:fullname/org-register\" component={orgRegister} />\n                <Route exact path=\"/registration\" component={registration} />\n                <AuthRoute exact path=\"/login\" component={login} />\n              </Switch>\n            </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nApp.propTypes = {\n  admin: PropTypes.object.isRequired,\n  // UI: PropTypes.object.isRequired,\n  // adminRegistration: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  admin: state.admin,\n  // UI: state.UI\n});\n\nexport default connect(mapStateToProps)(App);"]},"metadata":{},"sourceType":"module"}