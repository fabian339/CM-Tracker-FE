{"ast":null,"code":"var _jsxFileName = \"/home/mikebladez/Documents/cm-tracker/CM-Tracker-FE/src/util/authRoutes/PrivateAdminRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst PrivateAdminRoute = props => {\n  const {\n    authenticated,\n    component,\n    computedMatch: {\n      params: {\n        fullname\n      }\n    }\n  } = props; // console.log(\"provate route\",authenticated && (fullname === props.fullname));\n\n  const adminAuthentication = authenticated && fullname === props.fullname;\n  console.log(\"provate route\", adminAuthentication);\n  let adminRoute = adminAuthentication ? React.createElement(Route, {\n    component: component,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }) : React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }); // console.log(\"provate route\",Route);\n\n  return adminRoute;\n};\n\nconst mapStateToProps = state => ({\n  authenticated: state.admin.authenticated,\n  fullname: state.admin.fullname\n});\n\nPrivateAdminRoute.prototype = {\n  admin: PropTypes.object\n};\nexport default connect(mapStateToProps)(PrivateAdminRoute);","map":{"version":3,"sources":["/home/mikebladez/Documents/cm-tracker/CM-Tracker-FE/src/util/authRoutes/PrivateAdminRoute.js"],"names":["React","Route","Redirect","connect","PropTypes","PrivateAdminRoute","props","authenticated","component","computedMatch","params","fullname","adminAuthentication","console","log","adminRoute","mapStateToProps","state","admin","prototype","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,SAAjB;AAA4BC,IAAAA,aAAa,EAAE;AAACC,MAAAA,MAAM,EAAG;AAAEC,QAAAA;AAAF;AAAV;AAA3C,MAAuEL,KAA7E,CADiC,CAEjC;;AACA,QAAMM,mBAAmB,GAAGL,aAAa,IAAKI,QAAQ,KAAKL,KAAK,CAACK,QAAjE;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BF,mBAA5B;AAEA,MAAIG,UAAU,GAAIH,mBAAD,GACb,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEJ,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADa,GAGb,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CANiC,CAWjC;;AAEA,SAAQO,UAAR;AACH,CAdD;;AAgBA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCV,EAAAA,aAAa,EAAEU,KAAK,CAACC,KAAN,CAAYX,aADK;AAEhCI,EAAAA,QAAQ,EAAEM,KAAK,CAACC,KAAN,CAAYP;AAFU,CAAZ,CAAxB;;AAMAN,iBAAiB,CAACc,SAAlB,GAA8B;AAC1BD,EAAAA,KAAK,EAAEd,SAAS,CAACgB;AADS,CAA9B;AAIA,eAAejB,OAAO,CAACa,eAAD,CAAP,CAAyBX,iBAAzB,CAAf","sourcesContent":["import React from 'react'\nimport {Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst PrivateAdminRoute = (props) => {\n    const { authenticated, component, computedMatch :{params : { fullname }} } = props;\n    // console.log(\"provate route\",authenticated && (fullname === props.fullname));\n    const adminAuthentication = authenticated && (fullname === props.fullname);\n    console.log(\"provate route\",adminAuthentication);\n\n    let adminRoute = (adminAuthentication) ? (\n        <Route component={component} />\n    ) : (\n        <Redirect to='/' />\n    )\n    // console.log(\"provate route\",Route);\n\n    return (adminRoute)\n}\n\nconst mapStateToProps = (state) => ({\n    authenticated: state.admin.authenticated,\n    fullname: state.admin.fullname\n\n});\n\nPrivateAdminRoute.prototype = {\n    admin: PropTypes.object\n}\n\nexport default connect(mapStateToProps)(PrivateAdminRoute);"]},"metadata":{},"sourceType":"module"}