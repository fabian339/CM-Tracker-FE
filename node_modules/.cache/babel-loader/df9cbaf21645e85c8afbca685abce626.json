{"ast":null,"code":"var _jsxFileName = \"/home/mikebladez/Documents/cm-tracker/CM-Tracker-FE/src/util/authRoutes/PrivateAdminRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst PrivateAdminRoute = props => {\n  const {\n    authenticated,\n    component,\n    adminFullname,\n    computedMatch: {\n      params: {\n        fullname\n      }\n    }\n  } = props; //fix authentication with fullname && id\n\n  let adminAuthentication = fullname == adminFullname;\n  console.log(\"This is trueee\", adminAuthentication); // console.log(\"provate route\", fullname, props);\n\n  let adminRoute = adminAuthentication === true ? React.createElement(Route, {\n    component: component,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }) : React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  });\n  return adminRoute;\n};\n\nPrivateAdminRoute.propTypes = {\n  authenticated: PropTypes.bool.isRequired,\n  adminFullname: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  authenticated: state.admin.authenticated,\n  adminFullname: state.admin.fullname\n});\n\nexport default connect(mapStateToProps)(PrivateAdminRoute);","map":{"version":3,"sources":["/home/mikebladez/Documents/cm-tracker/CM-Tracker-FE/src/util/authRoutes/PrivateAdminRoute.js"],"names":["React","Route","Redirect","connect","PropTypes","PrivateAdminRoute","props","authenticated","component","adminFullname","computedMatch","params","fullname","adminAuthentication","console","log","adminRoute","propTypes","bool","isRequired","string","mapStateToProps","state","admin"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,SAAjB;AAA4BC,IAAAA,aAA5B;AAA2CC,IAAAA,aAAa,EAAE;AAACC,MAAAA,MAAM,EAAG;AAAEC,QAAAA;AAAF;AAAV;AAA1D,MAAsFN,KAA5F,CADiC,CAEjC;;AACA,MAAIO,mBAAmB,GAAID,QAAQ,IAAIH,aAAvC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BF,mBAA7B,EAJiC,CAKjC;;AAEA,MAAIG,UAAU,GAAIH,mBAAmB,KAAK,IAAzB,GACb,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEL,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADa,GAGb,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ;AAMA,SAAQQ,UAAR;AACH,CAdD;;AAgBAX,iBAAiB,CAACY,SAAlB,GAA8B;AAC1BV,EAAAA,aAAa,EAAEH,SAAS,CAACc,IAAV,CAAeC,UADJ;AAE1BV,EAAAA,aAAa,EAAEL,SAAS,CAACgB,MAAV,CAAiBD;AAFN,CAA9B;;AAMA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAChCC,EAAAA,KAAK,EAAED,KAAK,CAACC,KADmB;AAEhChB,EAAAA,aAAa,EAAEe,KAAK,CAACC,KAAN,CAAYhB,aAFK;AAGhCE,EAAAA,aAAa,EAAEa,KAAK,CAACC,KAAN,CAAYX;AAHK,CAAZ,CAAxB;;AAQA,eAAeT,OAAO,CAACkB,eAAD,CAAP,CAAyBhB,iBAAzB,CAAf","sourcesContent":["import React from 'react'\nimport {Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst PrivateAdminRoute = (props) => {\n    const { authenticated, component, adminFullname, computedMatch :{params : { fullname }} } = props;\n    //fix authentication with fullname && id\n    let adminAuthentication = (fullname == adminFullname);\n    console.log(\"This is trueee\",adminAuthentication)\n    // console.log(\"provate route\", fullname, props);\n\n    let adminRoute = (adminAuthentication === true) ? (\n        <Route component={component} />\n    ) : (\n        <Redirect to='/' />\n    )\n\n    return (adminRoute)\n}\n\nPrivateAdminRoute.propTypes = {\n    authenticated: PropTypes.bool.isRequired,\n    adminFullname: PropTypes.string.isRequired\n}\n\n\nconst mapStateToProps = (state) => ({\n    admin: state.admin,\n    authenticated: state.admin.authenticated,\n    adminFullname: state.admin.fullname\n\n});\n\n\nexport default connect(mapStateToProps)(PrivateAdminRoute);"]},"metadata":{},"sourceType":"module"}