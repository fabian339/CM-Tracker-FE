{"ast":null,"code":"var _jsxFileName = \"/home/mikebladez/Documents/cm-tracker/CM-Tracker-FE/src/components/pages/registrations/admin/merging/loadingAdminPage.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'; // import AppIcon from '../images/ori_logo.png';\n\nimport Typography from '@material-ui/core/Typography';\nimport appLogo from '../../../../../images/ori_logo.png'; // import styles from '../styles';\n\nimport { Bounce, Shake, FadeIn, FadeOut, Flash } from 'react-motions'; //https://github.com/raphamorim/react-motions\n//mui studd\n\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport MuiPhoneNumber from \"material-ui-phone-number\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport PanToolIcon from '@material-ui/icons/PanTool';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './loading.css'; //Redux stuf\n\nimport { connect } from 'react-redux';\nimport { mergeAdminWithOrg } from '../../../../../redux/actions/adminActions';\n\nconst Link = require(\"react-router-dom\").Link;\n\nconst styles = {\n  container: {\n    // backgroundColor: \"black\",\n    // width: '320px',\n    height: '520px',\n    margin: \"10%\" // border: \"2px solid\"\n\n  },\n  progressBar1: {\n    // width: \"\",\n    height: \"35px\",\n    borderRadius: \"15px\",\n    backgroundImage: \"linear-gradient(red, yellow)\",\n    border: \"2px solid white\",\n    marginTop: \"5px\"\n  },\n  progressBar2: {\n    height: \"35px\",\n    borderRadius: \"15px\",\n    backgroundImage: \"linear-gradient(blue, lightblue)\",\n    border: \"2px solid white\",\n    marginBottom: \"5px\"\n  },\n  showPercent: {\n    textAlign: \"center\",\n    fontSize: \"100px\",\n    // margin: \"80px auto\",\n    color: \"darkslategray\" // WebkitBackgroundClip: \"text\",\n    // WebkitTextFillColor: \"transparent\"\n\n  },\n  message: {\n    textAlign: \"center\",\n    fontSize: \"80px\",\n    margin: \"80px auto\",\n    color: \"wheat\" // WebkitBackgroundClip: \"text\",\n    // WebkitTextFillColor: \"transparent\"\n\n  }\n};\n\nclass loadingAdminPage extends Component {\n  // const p =    setInterval(() => <p style={{fontSize:\"100px\"}}>Loading</p>, 1000);\n  // const classes = useStyles();\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      document.body.style = \"background: radial-gradient(black, transparent);\";\n      let intervalId = setInterval(this.runTimer, 1000);\n      this.setState({\n        intervalId: intervalId\n      });\n    };\n\n    this.addProgress = () => {\n      console.log(\"Adding\");\n      this.setState({\n        percentage: this.state.percentage + 12.5,\n        timer: this.state.timer + 1\n      });\n    };\n\n    this.reset = () => {\n      // document.body.style = 'background: #ffff;';\n      clearInterval(this.state.intervalId);\n      this.setState({\n        percentage: 0,\n        timer: 0\n      });\n    };\n\n    this.runTimer = () => {\n      if (this.state.timer <= 8) {\n        this.addProgress();\n      } else {\n        this.reset();\n      }\n    };\n\n    this.state = {\n      percentage: 0,\n      timer: 1,\n      intervalId: 0\n    };\n  } // const [completed, setCompleted] = React.useState(0);\n\n\n  render() {\n    console.log(this.state.percentage, this.state.timer);\n    return React.createElement(\"div\", {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      style: styles.showPercent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, this.state.percentage, \"%\"), React.createElement(LinearProgress, {\n      style: styles.progressBar1,\n      variant: \"determinate\",\n      value: this.state.percentage,\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), this.state.timer < 5 ? React.createElement(Bounce, {\n      duration: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      style: styles.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \" LOADING DATA \")) : this.state.timer >= 5 && this.state.timer < 8 ? React.createElement(FadeOut, {\n      duration: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      style: styles.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \" ALMOST DONE \")) : React.createElement(Shake, {\n      duration: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      style: styles.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \" ALL SET \")), React.createElement(LinearProgress, {\n      style: styles.progressBar2,\n      variant: \"determinate\",\n      value: this.state.percentage,\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default loadingAdminPage;","map":{"version":3,"sources":["/home/mikebladez/Documents/cm-tracker/CM-Tracker-FE/src/components/pages/registrations/admin/merging/loadingAdminPage.js"],"names":["React","Component","PropTypes","Typography","appLogo","Bounce","Shake","FadeIn","FadeOut","Flash","Grid","TextField","Button","MuiPhoneNumber","Select","MenuItem","FormControl","PanToolIcon","Radio","RadioGroup","FormControlLabel","Switch","InputLabel","EmojiEmotionsIcon","LinearProgress","CircularProgress","connect","mergeAdminWithOrg","Link","require","styles","container","height","margin","progressBar1","borderRadius","backgroundImage","border","marginTop","progressBar2","marginBottom","showPercent","textAlign","fontSize","color","message","loadingAdminPage","constructor","componentDidMount","document","body","style","intervalId","setInterval","runTimer","setState","addProgress","console","log","percentage","state","timer","reset","clearInterval","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import AppIcon from '../images/ori_logo.png';\nimport Typography from '@material-ui/core/Typography';\nimport appLogo from '../../../../../images/ori_logo.png';\n// import styles from '../styles';\nimport { Bounce, Shake, FadeIn, FadeOut, Flash } from 'react-motions' //https://github.com/raphamorim/react-motions\n\n\n//mui studd\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport MuiPhoneNumber from \"material-ui-phone-number\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport PanToolIcon from '@material-ui/icons/PanTool';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './loading.css';\n\n//Redux stuf\nimport { connect } from 'react-redux';\nimport { mergeAdminWithOrg } from '../../../../../redux/actions/adminActions'\n\nconst Link = require(\"react-router-dom\").Link\n\nconst styles = {\n    container: {\n        // backgroundColor: \"black\",\n        // width: '320px',\n        height: '520px',\n        margin: \"10%\",\n        // border: \"2px solid\"\n    },\n    progressBar1: {\n        // width: \"\",\n        height: \"35px\",\n        borderRadius: \"15px\",\n        backgroundImage: \"linear-gradient(red, yellow)\",\n        border: \"2px solid white\",\n        marginTop: \"5px\"\n\n    },\n    progressBar2: {\n        height: \"35px\",\n        borderRadius: \"15px\",\n        backgroundImage: \"linear-gradient(blue, lightblue)\",\n        border: \"2px solid white\",\n        marginBottom: \"5px\"\n    },\n    showPercent: {\n        textAlign: \"center\",\n        fontSize: \"100px\",\n        // margin: \"80px auto\",\n        color: \"darkslategray\",\n        // WebkitBackgroundClip: \"text\",\n        // WebkitTextFillColor: \"transparent\"\n        \n    },\n    message: {\n        textAlign: \"center\",\n        fontSize: \"80px\",\n        margin: \"80px auto\",\n        color: \"wheat\",\n        // WebkitBackgroundClip: \"text\",\n        // WebkitTextFillColor: \"transparent\"\n        \n    }\n}\n\n\nclass loadingAdminPage extends Component {\n        // const p =    setInterval(() => <p style={{fontSize:\"100px\"}}>Loading</p>, 1000);\n        // const classes = useStyles();\n        constructor(){\n            super();\n            this.state = {\n                percentage: 0,\n                timer: 1,\n                intervalId: 0\n            }\n        }\n        // const [completed, setCompleted] = React.useState(0);\n        componentDidMount = () => {\n            document.body.style = \"background: radial-gradient(black, transparent);\";\n\n            let intervalId  = setInterval(this.runTimer, 1000);\n            this.setState({intervalId: intervalId});\n          }\n\n\n\n        addProgress  = () => {\n               console.log(\"Adding\");\n            this.setState({ percentage: this.state.percentage + 12.5, timer: this.state.timer + 1})\n          }\n\n        reset = () => {\n            // document.body.style = 'background: #ffff;';\n            clearInterval(this.state.intervalId);\n            this.setState({ percentage: 0, timer: 0})\n        }\n\n        runTimer = () => {\n            if (this.state.timer <= 8) { \n                this.addProgress()\n            } else {\n                this.reset()\n            }\n        }\n\n        render() {\n          \n            console.log(this.state.percentage, this.state.timer);\n            \n            return (\n                <div style={styles.container}>\n                    <Typography style={styles.showPercent}>\n                        {this.state.percentage}%\n                    </Typography>\n\n                    <LinearProgress style={styles.progressBar1} variant=\"determinate\" value={this.state.percentage} color=\"secondary\"/>\n                    {(this.state.timer < 5 ) ? (\n                        <Bounce duration={3}>\n                            <Typography style={styles.message}> LOADING DATA </Typography>\n                        </Bounce>\n                    ): ((this.state.timer >= 5 && this.state.timer < 8 ) ? (\n                        <FadeOut duration={5}>\n                            <Typography style={styles.message}> ALMOST DONE </Typography>\n                        </FadeOut>\n\n                    ) : (\n                        <Shake duration={2}>\n                            <Typography style={styles.message}> ALL SET </Typography>\n                        </Shake>\n                    ))}\n\n                    <LinearProgress style={styles.progressBar2} variant=\"determinate\" value={this.state.percentage} color=\"secondary\"/>\n\n                </div>\n                \n            )\n        }\n    \n}\n\n\nexport default loadingAdminPage\n"]},"metadata":{},"sourceType":"module"}