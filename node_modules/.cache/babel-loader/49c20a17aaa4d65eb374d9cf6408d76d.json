{"ast":null,"code":"var _jsxFileName = \"/home/mikebladez/Documents/cm-tracker/CM-Tracker-FE/src/components/pages/registrations/admin/organization/orgRegister.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'; // import AppIcon from '../images/ori_logo.png';\n\nimport Typography from '@material-ui/core/Typography';\nimport appLogo from '../../../../../images/ori_logo.png';\nimport styles from '../styles';\nimport { Bounce, Shake, FadeIn, FadeOut, Flash } from 'react-motions'; //https://github.com/raphamorim/react-motions\n//mui studd\n\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MuiPhoneNumber from \"material-ui-phone-number\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport PanToolIcon from '@material-ui/icons/PanTool';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Autocomplete from '@material-ui/lab/Autocomplete'; //Redux stuf\n\nimport { connect } from 'react-redux';\nimport { registerOrg, getOrgWithName, getOrganizations } from '../../../../../redux/actions/adminActions';\n\nconst Link = require(\"react-router-dom\").Link;\n\nclass orgRegister extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const newOrgData = {\n        orgName: this.state.orgName,\n        orgPhone: this.state.orgPhone,\n        orgAddress: this.state.orgAddress,\n        orgType: this.state.orgType\n      };\n      console.log(\"propssss\", this.props);\n      const {\n        firstN,\n        lastN\n      } = this.props.admin.information;\n      let fullname = firstN + \"_\" + lastN; // const fullname = `/merge/admin/${fullname}/organization/`;\n      //call to add the new organization and redirect to new path\n\n      if (this.state.orgExist && this.state.orgName) {\n        this.props.getOrgWithName(newOrgData.orgName, this.props.history, fullname);\n      } else {\n        this.props.registerOrg(newOrgData, this.props.history, fullname);\n      }\n    };\n\n    this.handleChange = (event, value) => {\n      console.log(value);\n\n      if (event.target.name === \"orgExist\") {\n        this.setState({\n          orgExist: !this.state.orgExist,\n          organizations: this.props.admin.organizations\n        });\n      } else {\n        this.setState({\n          [event.target.name]: event.target.value\n        });\n      }\n    };\n\n    this.fetchOrganizations = () => {} // fetchOrganization\n    // handleOrganizationChange = (event) => {\n    //     console.log(event.target.name)\n    //     this.setState({\n    //         [event.target.name]: event.target.value\n    //     })\n    //     //Query wheter and organization exist or not\n    //     if(this.state.orgExist){\n    //         this.setState({ orgFound: true });\n    //     }\n    // }\n    ;\n\n    this.handleOrganizationPhoneChange = value => {\n      if (value) {\n        this.setState({\n          orgPhone: value\n        });\n      }\n    };\n\n    this.state = {\n      //ORGANIZATION INFO\n      orgName: '',\n      orgPhone: '',\n      orgAddress: '',\n      orgType: '',\n      orgExist: false,\n      orgFound: false,\n      //organizations\n      organizations: [],\n      //errors\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    this.props.getOrganizations();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      UI: {\n        loading\n      }\n    } = this.props;\n    const {\n      organizations,\n      errors\n    } = this.state;\n    const top100Films = [{\n      title: 'The Shawshank Redemption',\n      year: 1994\n    }, {\n      title: 'The Godfather',\n      year: 1972\n    }, {\n      title: 'Apple',\n      year: 1972\n    }, {\n      title: 'Monty Python and the Holy Grail',\n      year: 1975\n    }];\n    console.log(this.props);\n    return React.createElement(Shake, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: styles.logoContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: appLogo,\n      alt: \"icon\",\n      style: {\n        width: 250\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      variant: \"h4\",\n      style: styles.pageTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Yaiiiiii, keep it going for the last step\")), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      style: styles.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      style: {\n        margin: \"20px auto 10px auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"ORGANIZATION\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Is your organization register with us?\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      component: \"label\",\n      container: true,\n      alignItems: \"center\",\n      style: {\n        margin: \"auto 40%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"No\"), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      name: \"orgExist\",\n      checked: this.state.orgExist,\n      onChange: this.handleChange,\n      value: this.state.orgExist,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Yes\")), this.state.orgExist && React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Switch to No to register organization\"))), this.state.orgExist ? React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Autocomplete // freeSolo\n    , {\n      id: \"free-solo-2-demo\" // disableClearable\n      // disableCloseOnSelect\n      ,\n      defaultValue: \"company\",\n      options: organizations ? organizations.map(org => org.orgName) : [\"Amazon\"] // autoSelect={true}\n      ,\n      onInputChange: this.handleChange,\n      name: \"orgName\",\n      renderInput: params => React.createElement(TextField, Object.assign({}, params, {\n        label: \"Search for an organization\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        style: styles.textField,\n        helperText: errors.orgName,\n        error: errors.orgName ? true : false,\n        value: this.state.orgName,\n        InputProps: { ...params.InputProps,\n          type: 'search'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), this.state.orgExist && this.state.orgFound && React.createElement(Bounce, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body2\",\n      style: styles.orgFound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"Organization found!\"), React.createElement(Typography, {\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(EmojiEmotionsIcon, {\n      style: {\n        color: \"royalblue\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }))))) : React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"Great, lest register your Organization/Business\"), React.createElement(TextField, {\n      id: \"organization\",\n      name: \"orgName\",\n      type: \"text\",\n      label: \"Organization/Business Name\",\n      style: styles.textField,\n      variant: \"outlined\",\n      required: true,\n      helperText: errors.orgName,\n      error: errors.orgName ? true : false,\n      value: this.state.orgName,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"addrees\",\n      name: \"orgAddress\",\n      type: \"text\",\n      label: \"Main Address: 123 Street Ave, New York, NY, 10022\",\n      style: {\n        width: \"80%\",\n        marginTop: \"-7px\"\n      },\n      required: true,\n      helperText: errors.orgAddress,\n      error: errors.orgAddress ? true : false,\n      value: this.state.orgAddress,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      style: styles.orgTypes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, errors.orgType ? React.createElement(InputLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, errors.orgType) : React.createElement(InputLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"Organization Type\"), React.createElement(Select, {\n      native: true,\n      value: this.state.orgType,\n      onChange: this.handleChange // helperText={errors.orgType}\n      ,\n      error: errors.orgType ? true : false,\n      inputProps: {\n        name: 'orgType',\n        id: 'age-native-simple'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"Educational\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"Educational\"), React.createElement(\"option\", {\n      value: \"Merchandise Business\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"Merchandise Business\"), React.createElement(\"option\", {\n      value: \"Manufacture Business\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \"Manufacture Business\"), React.createElement(\"option\", {\n      value: \"Non-Profit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"Non-Profit\"), React.createElement(\"option\", {\n      value: \"Insurance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, \"Insurance\"), React.createElement(\"option\", {\n      value: \"Service Business\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, \"Service Business\"), React.createElement(\"option\", {\n      value: \"Other\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, \"Other\"))), React.createElement(MuiPhoneNumber, {\n      name: \"orgPhone\",\n      label: \"Organization Phone#\",\n      \"data-cy\": \"user-phone\",\n      defaultCountry: \"us\",\n      style: {\n        width: \"37.5%\",\n        margin: \"15px 0 15px 2.5%\"\n      },\n      helperText: errors.orgPhone,\n      error: errors.orgPhone ? true : false,\n      value: this.state.orgPhone,\n      onChange: this.handleOrganizationPhoneChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    })), errors.general && React.createElement(Typography, {\n      variant: \"body2\",\n      style: styles.customError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, errors.general), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      style: styles.button,\n      disabled: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, \"register organization\", loading && React.createElement(CircularProgress, {\n      size: 30,\n      style: styles.progress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }), React.createElement(\"footer\", {\n      style: {\n        margin: \"20px auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, \"Already have an account? Log In \", React.createElement(Link, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, \"Here\"))))), React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }))));\n  }\n\n}\n\norgRegister.propTypes = {\n  admin: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n  registerOrg: PropTypes.func.isRequired,\n  getOrgWithName: PropTypes.func.isRequired,\n  getOrganizations: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  registerOrg,\n  getOrgWithName,\n  getOrganizations\n};\nexport default connect(mapStateToProps, mapActionsToProps)(orgRegister);","map":{"version":3,"sources":["/home/mikebladez/Documents/cm-tracker/CM-Tracker-FE/src/components/pages/registrations/admin/organization/orgRegister.js"],"names":["React","Component","PropTypes","Typography","appLogo","styles","Bounce","Shake","FadeIn","FadeOut","Flash","Grid","TextField","Button","CircularProgress","MuiPhoneNumber","Select","MenuItem","FormControl","PanToolIcon","Radio","RadioGroup","FormControlLabel","Switch","InputLabel","EmojiEmotionsIcon","Autocomplete","connect","registerOrg","getOrgWithName","getOrganizations","Link","require","orgRegister","constructor","handleSubmit","event","preventDefault","setState","loading","newOrgData","orgName","state","orgPhone","orgAddress","orgType","console","log","props","firstN","lastN","admin","information","fullname","orgExist","history","handleChange","value","target","name","organizations","fetchOrganizations","handleOrganizationPhoneChange","orgFound","errors","componentDidMount","UNSAFE_componentWillReceiveProps","nextProps","UI","render","top100Films","title","year","logoContainer","width","pageTitle","form","margin","map","org","params","textField","InputProps","type","color","marginTop","orgTypes","id","general","customError","button","progress","propTypes","object","isRequired","func","mapStateToProps","mapActionsToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,MAAxB,EAAgCC,OAAhC,EAAyCC,KAAzC,QAAsD,eAAtD,C,CAAsE;AAGtE;;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,YAAP,MAAyB,+BAAzB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,gBAAtC,QAA8D,2CAA9D;;AAEA,MAAMC,IAAI,GAAGC,OAAO,CAAC,kBAAD,CAAP,CAA4BD,IAAzC;;AAGA,MAAME,WAAN,SAA0BhC,SAA1B,CAAoC;AAEhCiC,EAAAA,WAAW,GAAE;AACT;;AADS,SA2BbC,YA3Ba,GA2BGC,KAAD,IAAW;AAEtBA,MAAAA,KAAK,CAACC,cAAN;AAEA,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE;AADC,OAAd;AAIA,YAAMC,UAAU,GAAG;AACfC,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD,OADL;AAEfE,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAFN;AAGfC,QAAAA,UAAU,EAAE,KAAKF,KAAL,CAAWE,UAHR;AAIfC,QAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWG;AAJL,OAAnB;AAMAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKC,KAA7B;AACA,YAAM;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAoB,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,WAA3C;AACA,UAAIC,QAAQ,GAAGJ,MAAM,GAAC,GAAP,GAAWC,KAA1B,CAhBsB,CAkBtB;AACA;;AACA,UAAG,KAAKR,KAAL,CAAWY,QAAX,IAAuB,KAAKZ,KAAL,CAAWD,OAArC,EAA6C;AACzC,aAAKO,KAAL,CAAWnB,cAAX,CAA0BW,UAAU,CAACC,OAArC,EAA8C,KAAKO,KAAL,CAAWO,OAAzD,EAAkEF,QAAlE;AACH,OAFD,MAEO;AACH,aAAKL,KAAL,CAAWpB,WAAX,CAAuBY,UAAvB,EAAmC,KAAKQ,KAAL,CAAWO,OAA9C,EAAuDF,QAAvD;AACH;AACJ,KApDY;;AAAA,SAsDbG,YAtDa,GAsDE,CAACpB,KAAD,EAAQqB,KAAR,KAAkB;AAC7BX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;;AACA,UAAIrB,KAAK,CAACsB,MAAN,CAAaC,IAAb,KAAsB,UAA1B,EAAqC;AACjC,aAAKrB,QAAL,CAAc;AACVgB,UAAAA,QAAQ,EAAE,CAAC,KAAKZ,KAAL,CAAWY,QADZ;AAEVM,UAAAA,aAAa,EAAE,KAAKZ,KAAL,CAAWG,KAAX,CAAiBS;AAFtB,SAAd;AAIH,OALD,MAKO;AACH,aAAKtB,QAAL,CAAc;AACV,WAACF,KAAK,CAACsB,MAAN,CAAaC,IAAd,GAAqBvB,KAAK,CAACsB,MAAN,CAAaD;AADxB,SAAd;AAGH;AACJ,KAlEY;;AAAA,SAoEbI,kBApEa,GAoEQ,MAAM,CAE1B,CAFoB,CACjB;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjFa;;AAAA,SAoFbC,6BApFa,GAoFoBL,KAAD,IAAW;AACvC,UAAIA,KAAJ,EAAW;AACT,aAAKnB,QAAL,CAAc;AAAEK,UAAAA,QAAQ,EAAEc;AAAZ,SAAd;AACD;AACF,KAxFU;;AAET,SAAKf,KAAL,GAAa;AACT;AACAD,MAAAA,OAAO,EAAE,EAFA;AAGTE,MAAAA,QAAQ,EAAE,EAHD;AAITC,MAAAA,UAAU,EAAE,EAJH;AAKTC,MAAAA,OAAO,EAAE,EALA;AAMTS,MAAAA,QAAQ,EAAE,KAND;AAOTS,MAAAA,QAAQ,EAAE,KAPD;AAQT;AACAH,MAAAA,aAAa,EAAE,EATN;AAUT;AACAI,MAAAA,MAAM,EAAE;AAXC,KAAb;AAaH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,SAAKjB,KAAL,CAAWlB,gBAAX;AACH;;AAEDoC,EAAAA,gCAAgC,CAACC,SAAD,EAAW;AACvC,QAAGA,SAAS,CAACC,EAAV,CAAaJ,MAAhB,EAAwB;AACpB,WAAK1B,QAAL,CAAc;AAAE0B,QAAAA,MAAM,EAAEG,SAAS,CAACC,EAAV,CAAaJ;AAAvB,OAAd;AACH;AACJ;;AAiEDK,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAED,MAAAA,EAAE,EAAE;AAAE7B,QAAAA;AAAF;AAAN,QAAsB,KAAKS,KAAjC;AACA,UAAM;AAAEY,MAAAA,aAAF;AAAgBI,MAAAA;AAAhB,QAA2B,KAAKtB,KAAtC;AACA,UAAM4B,WAAW,GAAG,CAChB;AAAEC,MAAAA,KAAK,EAAE,0BAAT;AAAqCC,MAAAA,IAAI,EAAE;AAA3C,KADgB,EAEhB;AAAED,MAAAA,KAAK,EAAE,eAAT;AAA0BC,MAAAA,IAAI,EAAE;AAAhC,KAFgB,EAGhB;AAAED,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,IAAI,EAAE;AAAxB,KAHgB,EAIhB;AAAED,MAAAA,KAAK,EAAE,iCAAT;AAA4CC,MAAAA,IAAI,EAAE;AAAlD,KAJgB,CAApB;AAMA1B,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,WACA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAE3C,MAAM,CAACoE,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAErE,OAAV;AAAmB,MAAA,GAAG,EAAC,MAAvB;AAA8B,MAAA,KAAK,EAAE;AAACsE,QAAAA,KAAK,EAAE;AAAR,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,KAAK,EAAErE,MAAM,CAACsE,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAJJ,CADA,EASA,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,UAAU,MAAhB;AAAiB,MAAA,QAAQ,EAAE,KAAKxC,YAAhC;AAA8C,MAAA,KAAK,EAAE9B,MAAM,CAACuE,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AACA,MAAA,SAAS,EAAC,OADV;AAEA,MAAA,SAAS,MAFT;AAGA,MAAA,UAAU,EAAC,QAHX;AAIA,MAAA,KAAK,EAAE;AAACA,QAAAA,MAAM,EAAE;AAAT,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,EAOQ,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,OAAO,EAAE,KAAKnC,KAAL,CAAWY,QAFxB;AAGI,MAAA,QAAQ,EAAE,KAAKE,YAHnB;AAII,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWY,QAJtB;AAKI,MAAA,KAAK,EAAC,SALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPR,EAgBI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBJ,CADJ,EAmBK,KAAKZ,KAAL,CAAWY,QAAX,IACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CApBR,CALJ,CANJ,EAqCK,KAAKZ,KAAL,CAAWY,QAAX,GACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,oBAAC,YAAD,CACI;AADJ;AAEI,MAAA,EAAE,EAAC,kBAFP,CAGI;AACA;AAJJ;AAKI,MAAA,YAAY,EAAI,SALpB;AAMI,MAAA,OAAO,EAAGM,aAAa,GAAGA,aAAa,CAACkB,GAAd,CAAkBC,GAAG,IAAIA,GAAG,CAACtC,OAA7B,CAAH,GAA2C,CAAC,QAAD,CANtE,CAOI;AAPJ;AAQI,MAAA,aAAa,EAAE,KAAKe,YARxB;AASI,MAAA,IAAI,EAAC,SATT;AAWI,MAAA,WAAW,EAAEwB,MAAM,IACnB,oBAAC,SAAD,oBACQA,MADR;AAEI,QAAA,KAAK,EAAC,4BAFV;AAGI,QAAA,MAAM,EAAC,QAHX;AAII,QAAA,OAAO,EAAC,UAJZ;AAKI,QAAA,KAAK,EAAE3E,MAAM,CAAC4E,SALlB;AAMI,QAAA,UAAU,EAAEjB,MAAM,CAACvB,OANvB;AAOI,QAAA,KAAK,EAAEuB,MAAM,CAACvB,OAAP,GAAiB,IAAjB,GAAwB,KAPnC;AAQI,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,OARtB;AASI,QAAA,UAAU,EAAE,EAAE,GAAGuC,MAAM,CAACE,UAAZ;AAAwBC,UAAAA,IAAI,EAAE;AAA9B,SAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR,EAuDM,KAAKzC,KAAL,CAAWY,QAAX,IAAuB,KAAKZ,KAAL,CAAWqB,QAAnC,IACG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,MAAA,KAAK,EAAE1D,MAAM,CAAC0D,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAII,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AAAmB,MAAA,KAAK,EAAE;AAACqB,QAAAA,KAAK,EAAE;AAAR,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,CADJ,CAxDR,CADH,GAuEG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDADJ,EAII,oBAAC,SAAD;AACI,MAAA,EAAE,EAAC,cADP;AAEI,MAAA,IAAI,EAAC,SAFT;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,KAAK,EAAC,4BAJV;AAKI,MAAA,KAAK,EAAE/E,MAAM,CAAC4E,SALlB;AAMI,MAAA,OAAO,EAAC,UANZ;AAOI,MAAA,QAAQ,MAPZ;AAQI,MAAA,UAAU,EAAEjB,MAAM,CAACvB,OARvB;AASI,MAAA,KAAK,EAAEuB,MAAM,CAACvB,OAAP,GAAiB,IAAjB,GAAwB,KATnC;AAUI,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,OAVtB;AAWI,MAAA,QAAQ,EAAE,KAAKe,YAXnB;AAYI,MAAA,SAAS,MAZb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAmBI,oBAAC,SAAD;AACI,MAAA,EAAE,EAAC,SADP;AAEI,MAAA,IAAI,EAAC,YAFT;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,KAAK,EAAC,mDAJV;AAKI,MAAA,KAAK,EAAE;AAACkB,QAAAA,KAAK,EAAC,KAAP;AAAcW,QAAAA,SAAS,EAAC;AAAxB,OALX;AAMI,MAAA,QAAQ,MANZ;AAOI,MAAA,UAAU,EAAErB,MAAM,CAACpB,UAPvB;AAQI,MAAA,KAAK,EAAEoB,MAAM,CAACpB,UAAP,GAAoB,IAApB,GAA2B,KARtC;AASI,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,UATtB;AAUI,MAAA,QAAQ,EAAE,KAAKY,YAVnB;AAWI,MAAA,SAAS,MAXb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBJ,EAiCI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAEnD,MAAM,CAACiF,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKtB,MAAM,CAACnB,OAAP,GACG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAamB,MAAM,CAACnB,OAApB,CADH,GAGG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJR,EAMI,oBAAC,MAAD;AACI,MAAA,MAAM,MADV;AAEI,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,OAFtB;AAGI,MAAA,QAAQ,EAAE,KAAKW,YAHnB,CAII;AAJJ;AAKI,MAAA,KAAK,EAAEQ,MAAM,CAACnB,OAAP,GAAiB,IAAjB,GAAwB,KALnC;AAMI,MAAA,UAAU,EAAE;AACRc,QAAAA,IAAI,EAAE,SADE;AAER4B,QAAAA,EAAE,EAAE;AAFI,OANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,EAYI;AAAQ,MAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAZJ,EAaI;AAAQ,MAAA,KAAK,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAbJ,EAcI;AAAQ,MAAA,KAAK,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAdJ,EAeI;AAAQ,MAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfJ,EAgBI;AAAQ,MAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAhBJ,EAiBI;AAAQ,MAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAjBJ,EAkBI;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAlBJ,CANJ,CAjCJ,EA8DI,oBAAC,cAAD;AACA,MAAA,IAAI,EAAC,UADL;AAEA,MAAA,KAAK,EAAC,qBAFN;AAGA,iBAAQ,YAHR;AAIA,MAAA,cAAc,EAAE,IAJhB;AAKA,MAAA,KAAK,EAAE;AACHb,QAAAA,KAAK,EAAE,OADJ;AAEHG,QAAAA,MAAM,EAAE;AAFL,OALP;AASA,MAAA,UAAU,EAAEb,MAAM,CAACrB,QATnB;AAUA,MAAA,KAAK,EAAEqB,MAAM,CAACrB,QAAP,GAAkB,IAAlB,GAAyB,KAVhC;AAWA,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,QAXlB;AAYA,MAAA,QAAQ,EAAE,KAAKmB,6BAZf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9DJ,CA5GR,EA4LKE,MAAM,CAACwB,OAAP,IACG,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,MAAA,KAAK,EAAEnF,MAAM,CAACoF,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKzB,MAAM,CAACwB,OADZ,CA7LR,EAkMI,oBAAC,MAAD;AACA,MAAA,IAAI,EAAC,QADL;AAEA,MAAA,OAAO,EAAC,WAFR;AAGA,MAAA,KAAK,EAAC,SAHN;AAIA,MAAA,KAAK,EAAEnF,MAAM,CAACqF,MAJd;AAKA,MAAA,QAAQ,EAAE,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCASCnD,OAAO,IACJ,oBAAC,gBAAD;AAAkB,MAAA,IAAI,EAAE,EAAxB;AAA4B,MAAA,KAAK,EAAElC,MAAM,CAACsF,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CAlMJ,EA+MI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/MJ,EAgNI;AAAQ,MAAA,KAAK,EAAE;AAACd,QAAAA,MAAM,EAAE;AAAT,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACoC,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADpC,CADJ,CAhNJ,CADJ,CAFJ,EA0NI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1NJ,CATA,CADJ,CADA;AA2OH;;AAlV+B;;AAqVpC5C,WAAW,CAAC2D,SAAZ,GAAwB;AACpBzC,EAAAA,KAAK,EAAEjD,SAAS,CAAC2F,MAAV,CAAiBC,UADJ;AAEpB1B,EAAAA,EAAE,EAAElE,SAAS,CAAC2F,MAAV,CAAiBC,UAFD;AAGpBlE,EAAAA,WAAW,EAAE1B,SAAS,CAAC6F,IAAV,CAAeD,UAHR;AAIpBjE,EAAAA,cAAc,EAAE3B,SAAS,CAAC6F,IAAV,CAAeD,UAJX;AAKpBhE,EAAAA,gBAAgB,EAAE5B,SAAS,CAAC6F,IAAV,CAAeD;AALb,CAAxB;;AAQA,MAAME,eAAe,GAAItD,KAAD,KAAY;AAChCS,EAAAA,KAAK,EAAET,KAAK,CAACS,KADmB;AAEhCiB,EAAAA,EAAE,EAAE1B,KAAK,CAAC0B;AAFsB,CAAZ,CAAxB;;AAKA,MAAM6B,iBAAiB,GAAG;AACtBrE,EAAAA,WADsB;AAEtBC,EAAAA,cAFsB;AAGtBC,EAAAA;AAHsB,CAA1B;AAOA,eAAeH,OAAO,CAACqE,eAAD,EAAkBC,iBAAlB,CAAP,CAA4ChE,WAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import AppIcon from '../images/ori_logo.png';\nimport Typography from '@material-ui/core/Typography';\nimport appLogo from '../../../../../images/ori_logo.png';\nimport styles from '../styles';\nimport { Bounce, Shake, FadeIn, FadeOut, Flash } from 'react-motions' //https://github.com/raphamorim/react-motions\n\n\n//mui studd\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MuiPhoneNumber from \"material-ui-phone-number\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport PanToolIcon from '@material-ui/icons/PanTool';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//Redux stuf\nimport { connect } from 'react-redux';\nimport { registerOrg, getOrgWithName, getOrganizations } from '../../../../../redux/actions/adminActions'\n\nconst Link = require(\"react-router-dom\").Link\n\n\nclass orgRegister extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n            //ORGANIZATION INFO\n            orgName: '',\n            orgPhone: '',\n            orgAddress: '',\n            orgType: '',\n            orgExist: false,\n            orgFound: false,\n            //organizations\n            organizations: [],\n            //errors\n            errors: {}\n        }\n    }\n\n    componentDidMount(){\n        this.props.getOrganizations();\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps){\n        if(nextProps.UI.errors) {\n            this.setState({ errors: nextProps.UI.errors })\n        }\n    }\n\n    handleSubmit = (event) => {\n\n        event.preventDefault();\n\n        this.setState({\n            loading: true\n        });\n\n        const newOrgData = {\n            orgName: this.state.orgName,\n            orgPhone: this.state.orgPhone,\n            orgAddress: this.state.orgAddress,\n            orgType: this.state.orgType\n        }\n        console.log(\"propssss\", this.props)\n        const { firstN, lastN } = this.props.admin.information;\n        let fullname = firstN+\"_\"+lastN;\n\n        // const fullname = `/merge/admin/${fullname}/organization/`;\n        //call to add the new organization and redirect to new path\n        if(this.state.orgExist && this.state.orgName){\n            this.props.getOrgWithName(newOrgData.orgName ,this.props.history, fullname);\n        } else {\n            this.props.registerOrg(newOrgData ,this.props.history, fullname);\n        }\n    }\n\n    handleChange = (event, value) => {\n        console.log(value)\n        if (event.target.name === \"orgExist\"){\n            this.setState({\n                orgExist: !this.state.orgExist,\n                organizations: this.props.admin.organizations\n            });\n        } else {\n            this.setState({\n                [event.target.name]: event.target.value\n            })\n        }\n    }\n\n    fetchOrganizations = () => {\n        // fetchOrganization\n    }\n\n    // handleOrganizationChange = (event) => {\n    //     console.log(event.target.name)\n    //     this.setState({\n    //         [event.target.name]: event.target.value\n    //     })\n    //     //Query wheter and organization exist or not\n    //     if(this.state.orgExist){\n    //         this.setState({ orgFound: true });\n    //     }\n    // }\n\n\n    handleOrganizationPhoneChange = (value) => {\n        if (value) {\n          this.setState({ orgPhone: value });\n        }\n      }\n\n    render() {\n\n        const { UI: { loading } } = this.props;\n        const { organizations,errors } = this.state;\n        const top100Films = [\n            { title: 'The Shawshank Redemption', year: 1994 },\n            { title: 'The Godfather', year: 1972 },\n            { title: 'Apple', year: 1972 },\n            { title: 'Monty Python and the Holy Grail', year: 1975 },\n          ];\n        console.log(this.props);\n        return (\n        <Shake>\n            <Grid >\n            <header>\n                <div style={styles.logoContainer}>\n                    <img src={appLogo} alt=\"icon\" style={{width: 250}}/>\n                </div>                    \n                <Typography variant=\"h4\" style={styles.pageTitle} >\n                    Yaiiiiii, keep it going for the last step\n                </Typography>\n            </header>\n            <Grid container>\n                <Grid item sm />\n                <Grid item sm>\n                    <form noValidate onSubmit={this.handleSubmit} style={styles.form} >\n\n                        <Typography variant=\"h6\" style={{margin: \"20px auto 10px auto\"}}>\n                            ORGANIZATION\n                        </Typography>\n\n                        <div>\n                            <Typography variant=\"subtitle1\">\n                                Is your organization register with us?\n                            </Typography>\n                            {/* <FormControlLabel label=\"No\" /> */}\n                            <div >\n                                <Grid \n                                component=\"label\" \n                                container \n                                alignItems=\"center\"\n                                style={{margin: \"auto 40%\"}}\n                                >\n                                    <Grid item>No</Grid>\n                                        <Grid item>\n                                            <Switch\n                                                name=\"orgExist\"\n                                                checked={this.state.orgExist}\n                                                onChange={this.handleChange}\n                                                value={this.state.orgExist}\n                                                color=\"primary\"\n                                            />\n                                        </Grid>\n                                    <Grid item>Yes</Grid>\n                                </Grid>\n                                {this.state.orgExist && (\n                                    <small>\n                                        Switch to No to register organization\n                                    </small>\n                                )}\n                            </div>\n                        </div>\n                        {this.state.orgExist ? (\n                            <Grid>\n\n                                    <Autocomplete\n                                        // freeSolo\n                                        id=\"free-solo-2-demo\"\n                                        // disableClearable\n                                        // disableCloseOnSelect\n                                        defaultValue = {\"company\"}\n                                        options={ organizations ? organizations.map(org => org.orgName) : [\"Amazon\"] }\n                                        // autoSelect={true}\n                                        onInputChange={this.handleChange}\n                                        name='orgName'\n\n                                        renderInput={params => (\n                                        <TextField\n                                            {...params}\n                                            label=\"Search for an organization\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            style={styles.textField}\n                                            helperText={errors.orgName}\n                                            error={errors.orgName ? true : false}\n                                            value={this.state.orgName}\n                                            InputProps={{ ...params.InputProps, type: 'search' }}\n                                        />\n                                        )}\n                                    />\n\n                                {/* <FormControl style={{width: \"80%\"}} >\n                                    {errors.orgName ? (\n                                        <InputLabel>*Must not be empty*</InputLabel>\n                                    ) : (\n                                        <InputLabel>*Choose an existing organization*</InputLabel>\n                                    )}\n                                    <Select\n                                        native\n                                        value={this.state.orgName}\n                                        onChange={this.handleOrganizationChange}\n                                        variant=\"outlined\" \n                                        // helperText={errors.orgName}\n                                        error={errors.orgName ? true : false}\n                                        // value={this.state.orgName}\n                                        inputProps={{\n                                            name: 'orgName',\n                                            id: 'age-native-simple',\n                                        }}\n                                        >\n                                        <option value=\"\" />\n                                        <option value=\"Apple\">Apple</option>\n                                        <option value=\"East Side House\">East Side House</option>\n                                        <option value=\"Jericco\">Jericco</option>\n                                        <option value=\"Amazon\">Amazon</option>\n                                    </Select>\n                                </FormControl> */}\n                                \n                                {(this.state.orgExist && this.state.orgFound) && (\n                                    <Bounce> \n                                        <Grid>\n                                            <Typography variant=\"body2\" style={styles.orgFound}>\n                                                Organization found! \n                                            </Typography>\n                                            <Typography variant=\"body2\">\n                                                <EmojiEmotionsIcon style={{color: \"royalblue\"}} /> \n                                            </Typography>\n                                        </Grid>\n                                    </Bounce>\n                                )}\n\n                            </Grid>\n                        ) : (\n                            <Grid >\n                                <Typography variant=\"subtitle1\">\n                                    Great, lest register your Organization/Business\n                                </Typography>\n                                <TextField\n                                    id='organization'\n                                    name='orgName'\n                                    type=\"text\"\n                                    label=\"Organization/Business Name\"\n                                    style={styles.textField}\n                                    variant=\"outlined\" \n                                    required\n                                    helperText={errors.orgName}\n                                    error={errors.orgName ? true : false}\n                                    value={this.state.orgName}\n                                    onChange={this.handleChange}\n                                    fullWidth \n                                    /> \n\n                                <TextField\n                                    id='addrees'\n                                    name='orgAddress'\n                                    type=\"text\"\n                                    label=\"Main Address: 123 Street Ave, New York, NY, 10022\"\n                                    style={{width:\"80%\", marginTop:\"-7px\"}}\n                                    required\n                                    helperText={errors.orgAddress}\n                                    error={errors.orgAddress ? true : false}\n                                    value={this.state.orgAddress}\n                                    onChange={this.handleChange}\n                                    fullWidth \n                                    /> \n                                \n                                <FormControl style={styles.orgTypes} >\n                                    {errors.orgType ? (\n                                        <InputLabel>{errors.orgType}</InputLabel>  \n                                    ) : (\n                                        <InputLabel>Organization Type</InputLabel>\n                                    )}\n                                    <Select\n                                        native\n                                        value={this.state.orgType}\n                                        onChange={this.handleChange}\n                                        // helperText={errors.orgType}\n                                        error={errors.orgType ? true : false}\n                                        inputProps={{\n                                            name: 'orgType',\n                                            id: 'age-native-simple',\n                                        }}\n                                        >\n                                        <option value=\"\" />\n                                        <option value=\"Educational\">Educational</option>\n                                        <option value=\"Merchandise Business\">Merchandise Business</option>\n                                        <option value=\"Manufacture Business\">Manufacture Business</option>\n                                        <option value=\"Non-Profit\">Non-Profit</option>\n                                        <option value=\"Insurance\">Insurance</option>\n                                        <option value=\"Service Business\">Service Business</option>\n                                        <option value=\"Other\">Other</option>\n                                    </Select>\n                                    \n                                </FormControl>\n\n                                <MuiPhoneNumber\n                                name=\"orgPhone\"\n                                label=\"Organization Phone#\"\n                                data-cy=\"user-phone\"\n                                defaultCountry={\"us\"}\n                                style={{\n                                    width: \"37.5%\", \n                                    margin: \"15px 0 15px 2.5%\",\n                                }}\n                                helperText={errors.orgPhone}\n                                error={errors.orgPhone ? true : false}\n                                value={this.state.orgPhone}\n                                onChange={this.handleOrganizationPhoneChange}\n                                />\n                            </Grid>\n                            )\n                        }\n\n                        {errors.general && (\n                            <Typography variant=\"body2\" style={styles.customError}>\n                                {errors.general}\n                            </Typography>\n                        )}\n\n                        <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        style={styles.button}\n                        disabled={false}\n                        > \n                        {}\n                        register organization\n                        {loading && (\n                            <CircularProgress size={30} style={styles.progress} />\n                        )}\n                        </Button>\n                        <br/>\n                        <footer style={{margin: \"20px auto\"}}>\n                            <small>\n                                Already have an account? Log In <Link to=\"/login\">Here</Link>\n                            </small>\n                        </footer>\n                    </form>\n                </Grid>\n                <Grid item sm/>\n\n            </Grid>\n        </Grid>\n        </Shake>\n        )\n    }\n}\n\norgRegister.propTypes = {\n    admin: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired,\n    registerOrg: PropTypes.func.isRequired,\n    getOrgWithName: PropTypes.func.isRequired,\n    getOrganizations: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    admin: state.admin,\n    UI: state.UI\n});\n\nconst mapActionsToProps = { \n    registerOrg, \n    getOrgWithName,\n    getOrganizations\n};\n\n\nexport default connect(mapStateToProps, mapActionsToProps)(orgRegister);\n"]},"metadata":{},"sourceType":"module"}