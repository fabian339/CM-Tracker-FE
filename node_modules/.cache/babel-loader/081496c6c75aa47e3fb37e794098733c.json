{"ast":null,"code":"var _jsxFileName = \"/Users/mrfabian/Documents/cm-tracker-project/CM-Tracker-FE/src/components/pages/registrations/admin/organization/orgRegister.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'; // import AppIcon from '../images/ori_logo.png';\n\nimport Typography from '@material-ui/core/Typography';\nimport appLogo from '../../../../../images/ori_logo.png';\nimport styles from '../styles';\nimport { Bounce, Shake, FadeIn, FadeOut, Flash } from 'react-motions'; //https://github.com/raphamorim/react-motions\n\nimport MyAutocomplete from '../../../../../util/MyAutocomplete';\nimport axios from 'axios'; //mui studd\n\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MuiPhoneNumber from \"material-ui-phone-number\";\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport Switch from '@material-ui/core/Switch';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Autocomplete from '@material-ui/lab/Autocomplete'; //Redux stuf\n\nimport { connect } from 'react-redux';\nimport { registerOrg, getOrgToMerge, getOrganizations } from '../../../../../redux/actions/userActions';\n\nconst Link = require(\"react-router-dom\").Link;\n\nclass orgRegister extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const {\n        orgName,\n        orgPhone,\n        orgAddress,\n        orgType,\n        orgAdmin,\n        orgExist,\n        organizations\n      } = this.state;\n      let delay = 0;\n\n      if (organizations) {\n        let org = organizations.find(org => org === orgName);\n        console.log(\"THIS ORGGGG\", org === undefined);\n        const orgFound = !(org === undefined);\n        this.setState({\n          orgFound\n        });\n        delay = orgFound ? 4000 : 0;\n      }\n\n      const newOrgData = {\n        orgName,\n        orgPhone,\n        orgAddress,\n        orgType,\n        fullname: localStorage.fullname\n      };\n      const mergeOrgData = {\n        orgName,\n        orgAdmin,\n        fullname: localStorage.fullname\n      }; //call to add the new organization and redirect to new path\n      //set timeout for emotion when finding organizations\n\n      setTimeout(() => {\n        if (orgExist && orgName) {\n          this.props.getOrgToMerge(mergeOrgData, this.props.history);\n        } else {\n          this.props.registerOrg(newOrgData, this.props.history);\n        }\n      }, delay);\n    };\n\n    this.handleSarchOrganizationBarChange = event => {\n      // console.log(event.target.name, event.target.value)\n      const {\n        user: {\n          organizations\n        }\n      } = this.props;\n      this.setState({\n        orgExist: !this.state.orgExist\n      });\n\n      if (organizations === undefined) {\n        const errors = {};\n        errors.orgName = \"Organizations not fetched, please reload and try again!\";\n        this.setState({\n          errors\n        });\n      } else if (!this.state.organizations.lenght) {\n        this.setState({\n          organizations\n        });\n      }\n    };\n\n    this.handleChange = event => {\n      // console.log(event.target.name, event.target.value)\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleOrganizationChangeOnSearchBar = (event, value) => {\n      const {\n        match: {\n          params: {\n            fullname\n          }\n        }\n      } = this.props;\n\n      if (!(value.trim() === '')) {\n        console.log(\"IM HEREE\");\n        this.setState({\n          loadingAdmins: !this.state.loadingAdmins\n        }); // dispatch( { type: LOADING_DATA });\n\n        axios.get(`/admin/${fullname}/${value}/admins`).then(res => {\n          this.setState({\n            orgAdministrators: res.data,\n            loadingAdmins: !this.state.loadingAdmins,\n            adminsLoaded: res.data ? true : false\n          });\n        }).catch(err => {\n          this.setState({\n            orgAdministrators: [],\n            loadingAdmins: !this.state.loadingAdmins\n          });\n        }); // }\n        // this.props.getAdminsFromOrganization(value);\n      }\n\n      this.setState({\n        orgName: value\n      });\n    };\n\n    this.handleAdminChangeOnSearchBar = (event, value) => {\n      this.setState({\n        orgAdmin: value\n      });\n    };\n\n    this.handleOrganizationPhoneChange = value => {\n      if (value) {\n        this.setState({\n          orgPhone: value\n        });\n      }\n    };\n\n    this.state = {\n      //ORGANIZATION INFO\n      orgName: '',\n      orgPhone: '',\n      orgAddress: '',\n      orgType: '',\n      orgExist: false,\n      orgFound: false,\n      loadingAdmins: false,\n      adminsLoaded: false,\n      //organizations\n      organizations: [],\n      orgAdmin: '',\n      //orgAdministrators\n      orgAdministrators: [],\n      //errors\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match: {\n        params: {\n          fullname\n        }\n      }\n    } = this.props;\n    this.props.getOrganizations(fullname); // console.log(\"ORG Register\",this.props.match.params.fullname)\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n  }\n\n  render() {\n    // const { user : { organizations } } = this.props;\n    const {\n      UI: {\n        loading\n      }\n    } = this.props;\n    const {\n      organizations,\n      errors,\n      loadingAdmins,\n      orgAdministrators,\n      adminsLoaded\n    } = this.state;\n    console.log(\"orgREgister\", orgAdministrators);\n    return React.createElement(Shake, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: styles.logoContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: appLogo,\n      alt: \"icon\",\n      style: {\n        width: 250\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      variant: \"h4\",\n      style: styles.pageTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Yaiiiiii, keep it going for the last step\")), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      style: styles.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      style: {\n        margin: \"20px auto 10px auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"ORGANIZATION\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Is your organization already registered with us?\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      component: \"label\",\n      container: true,\n      alignItems: \"center\",\n      style: {\n        margin: \"auto 40%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"No\"), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      name: \"orgExist\",\n      checked: this.state.orgExist,\n      onChange: this.handleSarchOrganizationBarChange,\n      value: this.state.orgExist,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Yes\")), this.state.orgExist && React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Switch to No to register organization\"))), this.state.orgExist ? React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(MyAutocomplete, {\n      options: organizations,\n      value: this.state.orgName,\n      onInputChange: this.handleOrganizationChangeOnSearchBar,\n      name: \"orgName\",\n      label: \"Search for an organizations\",\n      style: styles.textField,\n      helperText: errors.orgName,\n      error: errors.orgName ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), this.state.orgExist && this.state.orgFound && React.createElement(Bounce, {\n      duration: 2.5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body2\",\n      style: styles.orgFound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Organization and Administrator found!\"), React.createElement(Typography, {\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(EmojiEmotionsIcon, {\n      style: {\n        color: \"royalblue\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }))))) : React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"Great, lest register your Organization/Business\"), React.createElement(TextField, {\n      id: \"organization\",\n      name: \"orgName\",\n      type: \"text\",\n      label: \"Organization/Business Name\",\n      style: styles.textField,\n      variant: \"outlined\",\n      required: true,\n      helperText: errors.orgName,\n      error: errors.orgName ? true : false,\n      value: this.state.orgName,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"addrees\",\n      name: \"orgAddress\",\n      type: \"text\",\n      label: \"Main Address: 123 Street Ave, New York, NY, 10022\",\n      style: {\n        width: \"80%\",\n        marginTop: \"-7px\"\n      },\n      required: true,\n      helperText: errors.orgAddress,\n      error: errors.orgAddress ? true : false,\n      value: this.state.orgAddress,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      style: styles.orgTypes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, errors.orgType ? React.createElement(InputLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, errors.orgType) : React.createElement(InputLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"Organization Type\"), React.createElement(Select, {\n      native: true,\n      value: this.state.orgType,\n      onChange: this.handleChange // helperText={errors.orgType}\n      ,\n      error: errors.orgType ? true : false,\n      inputProps: {\n        name: 'orgType',\n        id: 'age-native-simple'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"Educational\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"Educational\"), React.createElement(\"option\", {\n      value: \"Merchandise Business\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"Merchandise Business\"), React.createElement(\"option\", {\n      value: \"Manufacture Business\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"Manufacture Business\"), React.createElement(\"option\", {\n      value: \"Non-Profit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"Non-Profit\"), React.createElement(\"option\", {\n      value: \"Insurance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"Insurance\"), React.createElement(\"option\", {\n      value: \"Service Business\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"Service Business\"), React.createElement(\"option\", {\n      value: \"Other\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"Other\"))), React.createElement(MuiPhoneNumber, {\n      name: \"orgPhone\",\n      label: \"Organization Phone#\",\n      \"data-cy\": \"user-phone\",\n      defaultCountry: \"us\",\n      style: {\n        width: \"37.5%\",\n        margin: \"15px 0 15px 2.5%\"\n      },\n      helperText: errors.orgPhone,\n      error: errors.orgPhone ? true : false,\n      value: this.state.orgPhone,\n      onChange: this.handleOrganizationPhoneChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    })), errors.general && React.createElement(Typography, {\n      variant: \"body2\",\n      style: styles.customError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, errors.general), loadingAdmins && React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      size: 50,\n      style: {\n        position: 'relative',\n        color: \"brown\",\n        width: \"40px\",\n        height: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    })), adminsLoaded && React.createElement(MyAutocomplete, {\n      options: orgAdministrators,\n      value: this.state.orgAdmin,\n      onInputChange: this.handleAdminChangeOnSearchBar,\n      name: \"orgAdmin\",\n      label: \"Search for an administrator\",\n      style: styles.textField,\n      helperText: \"Please select an administrator\",\n      error: errors.orgAdmin ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      style: styles.button,\n      disabled: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, \"register organization\", loading && React.createElement(CircularProgress, {\n      size: 30,\n      style: styles.progress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }), React.createElement(\"footer\", {\n      style: {\n        margin: \"20px auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, \"Already have an account? Log In \", React.createElement(Link, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, \"Here\"))))), React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }))));\n  }\n\n}\n\norgRegister.propTypes = {\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n  registerOrg: PropTypes.func.isRequired,\n  getOrgToMerge: PropTypes.func.isRequired,\n  getOrganizations: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  registerOrg,\n  getOrgToMerge,\n  getOrganizations\n};\nexport default connect(mapStateToProps, mapActionsToProps)(orgRegister);","map":{"version":3,"sources":["/Users/mrfabian/Documents/cm-tracker-project/CM-Tracker-FE/src/components/pages/registrations/admin/organization/orgRegister.js"],"names":["React","Component","PropTypes","Typography","appLogo","styles","Bounce","Shake","FadeIn","FadeOut","Flash","MyAutocomplete","axios","Grid","TextField","Button","CircularProgress","MuiPhoneNumber","Select","FormControl","Switch","InputLabel","EmojiEmotionsIcon","Autocomplete","connect","registerOrg","getOrgToMerge","getOrganizations","Link","require","orgRegister","constructor","handleSubmit","event","preventDefault","setState","loading","orgName","orgPhone","orgAddress","orgType","orgAdmin","orgExist","organizations","state","delay","org","find","console","log","undefined","orgFound","newOrgData","fullname","localStorage","mergeOrgData","setTimeout","props","history","handleSarchOrganizationBarChange","user","errors","lenght","handleChange","target","name","value","handleOrganizationChangeOnSearchBar","match","params","trim","loadingAdmins","get","then","res","orgAdministrators","data","adminsLoaded","catch","err","handleAdminChangeOnSearchBar","handleOrganizationPhoneChange","componentDidMount","UNSAFE_componentWillReceiveProps","nextProps","UI","render","logoContainer","width","pageTitle","form","margin","textField","color","marginTop","orgTypes","id","general","customError","position","height","button","progress","propTypes","object","isRequired","func","mapStateToProps","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import AppIcon from '../images/ori_logo.png';\nimport Typography from '@material-ui/core/Typography';\nimport appLogo from '../../../../../images/ori_logo.png';\nimport styles from '../styles';\nimport { Bounce, Shake, FadeIn, FadeOut, Flash } from 'react-motions' //https://github.com/raphamorim/react-motions\nimport MyAutocomplete from '../../../../../util/MyAutocomplete'\nimport axios from 'axios';\n\n\n//mui studd\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MuiPhoneNumber from \"material-ui-phone-number\";\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport Switch from '@material-ui/core/Switch';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//Redux stuf\nimport { connect } from 'react-redux';\nimport { \n    registerOrg,\n    getOrgToMerge, \n    getOrganizations, \n     } from '../../../../../redux/actions/userActions'\n\nconst Link = require(\"react-router-dom\").Link\n\n\nclass orgRegister extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n            //ORGANIZATION INFO\n            orgName: '',\n            orgPhone: '',\n            orgAddress: '',\n            orgType: '',\n            orgExist: false,\n            orgFound: false,\n            loadingAdmins: false,\n            adminsLoaded: false,\n            //organizations\n            organizations: [],\n            orgAdmin: '',\n            //orgAdministrators\n            orgAdministrators: [],\n            //errors\n            errors: {}\n        }\n    }\n\n    componentDidMount(){\n        const {match : { params : { fullname } }} = this.props;\n        this.props.getOrganizations(fullname);\n        // console.log(\"ORG Register\",this.props.match.params.fullname)\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps){\n        if(nextProps.UI.errors) {\n            this.setState({ errors: nextProps.UI.errors })\n        }\n    }\n\n    handleSubmit = (event) => {\n\n        event.preventDefault();\n\n        this.setState({\n            loading: true\n        });\n        \n        const { orgName, orgPhone, orgAddress, orgType,orgAdmin, orgExist, organizations } = this.state;\n        let delay = 0;\n        if(organizations) {\n            let org = organizations.find(org => org === orgName);\n            console.log(\"THIS ORGGGG\", org === undefined)\n            const orgFound = !(org === undefined)\n            this.setState({orgFound});\n            delay = orgFound ? 4000 : 0;\n        }\n\n        const newOrgData = { orgName, orgPhone, orgAddress, orgType, fullname: localStorage.fullname };\n        const mergeOrgData = {orgName, orgAdmin, fullname: localStorage.fullname}\n        \n        //call to add the new organization and redirect to new path\n        //set timeout for emotion when finding organizations\n        setTimeout(() => { \n        if(orgExist && orgName){\n                this.props.getOrgToMerge(mergeOrgData ,this.props.history);\n            } else {\n                this.props.registerOrg(newOrgData ,this.props.history);\n            }\n        }, delay);\n\n    }\n\n    handleSarchOrganizationBarChange = (event) => {\n        // console.log(event.target.name, event.target.value)\n\n        const { user : { organizations } } = this.props;\n        this.setState({ orgExist: !this.state.orgExist });\n\n        if(organizations === undefined){\n            const errors = {};\n            errors.orgName = \"Organizations not fetched, please reload and try again!\"\n            this.setState({ errors })\n        } else if(!this.state.organizations.lenght){\n            this.setState({ organizations });\n        }   \n     }\n\n\n    handleChange = (event) => {\n        // console.log(event.target.name, event.target.value)\n            this.setState({\n                [event.target.name]: event.target.value\n            })\n    }\n\n    handleOrganizationChangeOnSearchBar = (event, value) => {\n        const {match : { params : { fullname } }} = this.props;\n        if(!(value.trim() === '')){\n            console.log(\"IM HEREE\")\n            this.setState({loadingAdmins: !this.state.loadingAdmins})\n                // dispatch( { type: LOADING_DATA });\n            axios.get(`/admin/${fullname}/${value}/admins`)\n            .then((res) => {\n                this.setState({\n                    orgAdministrators: res.data,\n                    loadingAdmins: !this.state.loadingAdmins,\n                    adminsLoaded: res.data ? true:false\n                })\n            })\n            .catch(err => {\n                this.setState({\n                    orgAdministrators: [],\n                    loadingAdmins: !this.state.loadingAdmins \n                })\n            });\n        // }\n            // this.props.getAdminsFromOrganization(value);\n        }\n        this.setState({orgName: value})\n    }\n\n    handleAdminChangeOnSearchBar = (event, value) => {\n        this.setState({orgAdmin: value})\n    }\n\n\n    handleOrganizationPhoneChange = (value) => {\n        if (value) {\n          this.setState({ orgPhone: value });\n        }\n      }\n\n    render() {\n        // const { user : { organizations } } = this.props;\n\n        const { UI: { loading } } = this.props;\n        const { organizations, errors, loadingAdmins, orgAdministrators, adminsLoaded } = this.state;\n        console.log(\"orgREgister\", orgAdministrators);\n        return (\n        <Shake>\n            <Grid >\n            <header>\n                <div style={styles.logoContainer}>\n                    <img src={appLogo} alt=\"icon\" style={{width: 250}}/>\n                </div>                    \n                <Typography variant=\"h4\" style={styles.pageTitle} >\n                    Yaiiiiii, keep it going for the last step\n                </Typography>\n            </header>\n            <Grid container>\n                <Grid item sm />\n                <Grid item sm={6}>\n                    <form noValidate onSubmit={this.handleSubmit} style={styles.form} >\n\n                        <Typography variant=\"h6\" style={{margin: \"20px auto 10px auto\"}}>\n                            ORGANIZATION\n                        </Typography>\n\n                        <div>\n                            <Typography variant=\"subtitle1\">\n                                Is your organization already registered with us?\n                            </Typography>\n                            <div >\n                                <Grid \n                                component=\"label\" \n                                container \n                                alignItems=\"center\"\n                                style={{margin: \"auto 40%\"}}\n                                >\n                                    <Grid item>No</Grid>\n                                        <Grid item>\n                                            <Switch\n                                                name=\"orgExist\"\n                                                checked={this.state.orgExist}\n                                                onChange={this.handleSarchOrganizationBarChange}\n                                                value={this.state.orgExist}\n                                                color=\"primary\"\n                                            />\n                                        </Grid>\n                                    <Grid item>Yes</Grid>\n                                </Grid>\n                                {this.state.orgExist && (\n                                    <small>\n                                        Switch to No to register organization\n                                    </small>\n                                )}\n                            </div>\n                        </div>\n                        {this.state.orgExist ? (\n                            <Grid>\n\n                                <MyAutocomplete\n                                    options={organizations}\n                                    value={this.state.orgName}\n                                    onInputChange={this.handleOrganizationChangeOnSearchBar}\n                                    name='orgName'\n                                    label=\"Search for an organizations\"\n                                    style={styles.textField}\n                                    helperText={errors.orgName}\n                                    error={errors.orgName ? true : false}\n                                >\n                                </MyAutocomplete>\n                                \n                                {(this.state.orgExist && this.state.orgFound) && (\n                                    <Bounce duration={2.5}> \n                                        <Grid>\n                                            <Typography variant=\"body2\" style={styles.orgFound}>\n                                                Organization and Administrator found! \n                                            </Typography>\n                                            <Typography variant=\"body2\">\n                                                <EmojiEmotionsIcon style={{color: \"royalblue\"}} /> \n                                            </Typography>\n                                        </Grid>\n                                    </Bounce>\n                                )}\n\n                            </Grid>\n                        ) : (\n                            <Grid >\n                                <Typography variant=\"subtitle1\">\n                                    Great, lest register your Organization/Business\n                                </Typography>\n                                <TextField\n                                    id='organization'\n                                    name='orgName'\n                                    type=\"text\"\n                                    label=\"Organization/Business Name\"\n                                    style={styles.textField}\n                                    variant=\"outlined\" \n                                    required\n                                    helperText={errors.orgName}\n                                    error={errors.orgName ? true : false}\n                                    value={this.state.orgName}\n                                    onChange={this.handleChange}\n                                    fullWidth \n                                    /> \n\n                                <TextField\n                                    id='addrees'\n                                    name='orgAddress'\n                                    type=\"text\"\n                                    label=\"Main Address: 123 Street Ave, New York, NY, 10022\"\n                                    style={{width:\"80%\", marginTop:\"-7px\"}}\n                                    required\n                                    helperText={errors.orgAddress}\n                                    error={errors.orgAddress ? true : false}\n                                    value={this.state.orgAddress}\n                                    onChange={this.handleChange}\n                                    fullWidth \n                                    /> \n                                \n                                <FormControl style={styles.orgTypes} >\n                                    {errors.orgType ? (\n                                        <InputLabel>{errors.orgType}</InputLabel>  \n                                    ) : (\n                                        <InputLabel>Organization Type</InputLabel>\n                                    )}\n                                    <Select\n                                        native\n                                        value={this.state.orgType}\n                                        onChange={this.handleChange}\n                                        // helperText={errors.orgType}\n                                        error={errors.orgType ? true : false}\n                                        inputProps={{\n                                            name: 'orgType',\n                                            id: 'age-native-simple',\n                                        }}\n                                        >\n                                        <option value=\"\" />\n                                        <option value=\"Educational\">Educational</option>\n                                        <option value=\"Merchandise Business\">Merchandise Business</option>\n                                        <option value=\"Manufacture Business\">Manufacture Business</option>\n                                        <option value=\"Non-Profit\">Non-Profit</option>\n                                        <option value=\"Insurance\">Insurance</option>\n                                        <option value=\"Service Business\">Service Business</option>\n                                        <option value=\"Other\">Other</option>\n                                    </Select>\n                                    \n                                </FormControl>\n\n                                <MuiPhoneNumber\n                                name=\"orgPhone\"\n                                label=\"Organization Phone#\"\n                                data-cy=\"user-phone\"\n                                defaultCountry={\"us\"}\n                                style={{\n                                    width: \"37.5%\", \n                                    margin: \"15px 0 15px 2.5%\",\n                                }}\n                                helperText={errors.orgPhone}\n                                error={errors.orgPhone ? true : false}\n                                value={this.state.orgPhone}\n                                onChange={this.handleOrganizationPhoneChange}\n                                />\n                            </Grid>\n                            )\n                        }\n\n                        {errors.general && (\n                            <Typography variant=\"body2\" style={styles.customError}>\n                                {errors.general}\n                            </Typography>\n                        )}\n                        \n                        {loadingAdmins && (\n                            <Grid item>\n                                <CircularProgress size={50} \n                                    style={{      \n                                    position: 'relative',\n                                    color: \"brown\",\n                                    width: \"40px\",\n                                    height: \"40px\"\n                                }} />\n                            </Grid>\n                        )}\n\n                        {/* //HEREEEEEEEEEEEEEEEEEEE */}\n                        {adminsLoaded && (\n                            <MyAutocomplete\n                                options={orgAdministrators}\n                                value={this.state.orgAdmin}\n                                onInputChange={this.handleAdminChangeOnSearchBar}\n                                name='orgAdmin'\n                                label=\"Search for an administrator\"\n                                style={styles.textField}\n                                helperText={\"Please select an administrator\"}\n                                error={errors.orgAdmin ? true : false}\n                            >\n                            </MyAutocomplete>\n                        )}\n\n                        <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        style={styles.button}\n                        disabled={false}\n                        > \n                        register organization\n                        {loading && (\n                            <CircularProgress size={30} style={styles.progress} />\n                        )}\n                        </Button>\n                        <br/>\n                        <footer style={{margin: \"20px auto\"}}>\n                            <small>\n                                Already have an account? Log In <Link to=\"/login\">Here</Link>\n                            </small>\n                        </footer>\n                    </form>\n                </Grid>\n                <Grid item sm/>\n\n            </Grid>\n        </Grid>\n        </Shake>\n        )\n    }\n}\n\norgRegister.propTypes = {\n    user: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired,\n    registerOrg: PropTypes.func.isRequired,\n    getOrgToMerge: PropTypes.func.isRequired,\n    getOrganizations: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    UI: state.UI\n});\n\nconst mapActionsToProps = { \n    registerOrg, \n    getOrgToMerge,\n    getOrganizations\n};\n\n\nexport default connect(mapStateToProps, mapActionsToProps)(orgRegister);\n"]},"metadata":{},"sourceType":"module"}