{"ast":null,"code":"var _jsxFileName = \"/home/mikebladez/Documents/cm-tracker/CM-Tracker-FE/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\"; //componets\n\nimport Navbar from './components/layout/Nav';\nimport login from './components/pages/public/login';\nimport adminRegister from './components/pages/registrations/admin/adminRegister';\nimport orgRegister from './components/pages/registrations/admin/organization/orgRegister';\nimport mergingAdminWithOrg from './components/pages/registrations/admin/merging/mergingAdminWithOrg';\nimport adminModules from './components/pages/adminPages/adminModules/adminModules';\nimport PrivateAdminRoute from './util/PrivateAdminRoute';\nimport jwtDecode from 'jwt-decode';\nimport './App.css';\nimport registration from './components/pages/registrations/registerOptions/registration'; //REDUX\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { SET_AUTHENTICATED_USER, SET_AUTHENTICATED_ADMIN } from './redux/types';\nimport { getAdminData, logoutAdmin } from './redux/actions/adminActions';\nimport { getUserData } from './redux/actions/userActions';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nconst token = localStorage.FBIdToken;\nlet autenticatedUser = false;\nlet autenticatedAdmin = false;\nconsole.log(\"Triggereddd\");\n\nif (token) {\n  const decodedtoken = jwtDecode(token); // console.log(decodedtoken.exp);\n\n  if (decodedtoken.exp * 1000 < Date.now()) {\n    store.dispatch(logoutAdmin());\n    window.location.href = '/login';\n  } else {\n    if (localStorage.accType === \"admin\") {\n      console.log(\"settiong headers\");\n      store.dispatch({\n        type: SET_AUTHENTICATED_ADMIN\n      });\n      axios.defaults.headers.common['Authorization'] = token;\n      store.dispatch(getAdminData());\n    } else if (localStorage.accType === \"user\") {\n      autenticatedUser = true;\n      store.dispatch({\n        type: SET_AUTHENTICATED_USER\n      });\n      axios.defaults.headers.common['Authorization'] = token;\n      store.dispatch(getUserData());\n    }\n  }\n}\n\nconst PrivateUserRoute = ({\n  component: Component,\n  ...rest\n}) => React.createElement(Route, Object.assign({}, rest, {\n  render: props => autenticatedUser === true ? React.createElement(Component, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })) : React.createElement(Redirect, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}));\n\nfunction App() {\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/merge/admin/:fullname/organization/:orgId\",\n    component: mergingAdminWithOrg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/admin-register\",\n    component: adminRegister,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(PrivateAdminRoute, {\n    exact: true,\n    path: \"/admin/:fullname/modules\",\n    component: adminModules,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/admin/:fullname/org-register\",\n    component: orgRegister,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/registration\",\n    component: registration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    component: login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mikebladez/Documents/cm-tracker/CM-Tracker-FE/src/App.js"],"names":["React","Navbar","login","adminRegister","orgRegister","mergingAdminWithOrg","adminModules","PrivateAdminRoute","jwtDecode","registration","Provider","store","SET_AUTHENTICATED_USER","SET_AUTHENTICATED_ADMIN","getAdminData","logoutAdmin","getUserData","axios","BrowserRouter","Router","Route","Switch","Redirect","token","localStorage","FBIdToken","autenticatedUser","autenticatedAdmin","console","log","decodedtoken","exp","Date","now","dispatch","window","location","href","accType","type","defaults","headers","common","PrivateUserRoute","component","Component","rest","props","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\n\n//componets\nimport Navbar from './components/layout/Nav';\nimport login from './components/pages/public/login';\nimport adminRegister from './components/pages/registrations/admin/adminRegister';\nimport orgRegister from './components/pages/registrations/admin/organization/orgRegister';\nimport mergingAdminWithOrg from './components/pages/registrations/admin/merging/mergingAdminWithOrg';\nimport adminModules from './components/pages/adminPages/adminModules/adminModules';\nimport PrivateAdminRoute from  './util/PrivateAdminRoute'\n\nimport jwtDecode from 'jwt-decode';\nimport './App.css';\n\nimport registration from './components/pages/registrations/registerOptions/registration';\n//REDUX\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { SET_AUTHENTICATED_USER, SET_AUTHENTICATED_ADMIN } from './redux/types';\nimport { getAdminData, logoutAdmin } from './redux/actions/adminActions';\nimport { getUserData } from './redux/actions/userActions';\n\nimport axios from 'axios';\n\nimport {BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom'\n\n\nconst token = localStorage.FBIdToken;\nlet autenticatedUser = false;\nlet autenticatedAdmin = false;\n\n      console.log(\"Triggereddd\");\nif(token){\n  const decodedtoken = jwtDecode(token);\n  // console.log(decodedtoken.exp);\n  if(decodedtoken.exp * 1000 < Date.now()){\n    store.dispatch(logoutAdmin());\n    window.location.href = '/login';\n  } else {\n      if(localStorage.accType === \"admin\") {\n        console.log(\"settiong headers\");\n        store.dispatch({ type: SET_AUTHENTICATED_ADMIN });\n        axios.defaults.headers.common['Authorization'] = token;\n        store.dispatch(getAdminData());\n    } else if(localStorage.accType === \"user\") {\n      autenticatedUser = true;\n      store.dispatch({ type: SET_AUTHENTICATED_USER });\n      axios.defaults.headers.common['Authorization'] = token;\n      store.dispatch(getUserData());\n    }\n  }\n}\n\nconst PrivateUserRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={(props) => (\n    autenticatedUser === true\n      ? <Component {...props} />\n      : <Redirect to='/login' />\n  )} />\n)\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Navbar />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/merge/admin/:fullname/organization/:orgId\" component={mergingAdminWithOrg} /> \n              <Route exact path=\"/admin-register\" component={adminRegister} />\n              <PrivateAdminRoute exact path=\"/admin/:fullname/modules\" component={adminModules} />\n              {/* <AuthRoute exact path=\"/user/:fullname/page\" component={adminModules} /> */}\n              <Route exact path=\"/admin/:fullname/org-register\" component={orgRegister} />\n              <Route exact path=\"/registration\" component={registration} />\n              <Route exact path=\"/login\" component={login} />\n            </Switch>\n          </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}