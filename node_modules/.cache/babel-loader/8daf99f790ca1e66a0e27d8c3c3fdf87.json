{"ast":null,"code":"import { SET_SECRETS, LOADING_DATA, LIKE_SECRET, UNLIKE_SECRET, DELETE_SECRET, SET_ERRORS, CLEAR_ERRORS, POST_SECRET, LOADING_UI, SET_SECRET, STOP_LOADING_UI, SUBMIT_COMMENT, ON_IMAGE_UPDATED } from '../types';\nimport axios from 'axios'; //get all secrets\n\nexport const getSecrets = imageUpdated => dispatch => {\n  // console.log(\"BEIN CALLED\");\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get('/secrets').then(res => {\n    dispatch({\n      type: SET_SECRETS,\n      payload: res.data\n    }); //imageUpdated parameter is a  true or false \n\n    if (imageUpdated) {\n      dispatch(updatedImg());\n    }\n  }).catch(err => {\n    dispatch({\n      type: SET_SECRETS,\n      payload: []\n    });\n  });\n}; //dispatch an action for when the image is updated\n\nexport const updatedImg = () => dispatch => {\n  dispatch({\n    type: ON_IMAGE_UPDATED\n  });\n};\nexport const getSecret = secretId => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.get(`/secret/${secretId}`).then(res => {\n    dispatch({\n      type: SET_SECRET,\n      payload: res.data\n    });\n    dispatch({\n      type: STOP_LOADING_UI\n    });\n  }).catch(err => console.log(err));\n}; //post a secret\n\nexport const postSecret = newSecret => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/secret', newSecret).then(res => {\n    dispatch({\n      type: POST_SECRET,\n      payload: res.data\n    });\n    dispatch(clearErrors());\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; //Like a secret\n\nexport const likeSecret = secretId => dispatch => {\n  axios.get(`/secret/${secretId}/like`).then(res => {\n    dispatch({\n      type: LIKE_SECRET,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; //Unlike a secret\n\nexport const unlikeSecret = secretId => dispatch => {\n  axios.get(`/secret/${secretId}/unlike`).then(res => {\n    dispatch({\n      type: UNLIKE_SECRET,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; //submit comment\n\nexport const submitComment = (secretId, commentData) => dispatch => {\n  axios.post(`/secret/${secretId}/comment`, commentData).then(res => {\n    dispatch({\n      type: SUBMIT_COMMENT,\n      payload: res.data\n    });\n    dispatch(clearErrors());\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; //delete a secret\n\nexport const deleteSecret = secretId => dispatch => {\n  // console.log(\"CALLEDD\");\n  axios.delete(`/secret/${secretId}`).then(() => {\n    dispatch({\n      type: DELETE_SECRET,\n      payload: secretId\n    });\n  }).catch(err => console.log(err));\n};\nexport const getUserData = userHandle => dispatch => {\n  // console.log(\"HANDLEEE__>\", userHandle);\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get(`/user/${userHandle}`).then(res => {\n    // console.log(\"THISS DATAA--> \", res.data)\n    dispatch({\n      type: SET_SECRETS,\n      payload: res.data.secrets\n    });\n  }).catch(() => {\n    dispatch({\n      type: CLEAR_ERRORS,\n      payload: null\n    });\n  });\n};\nexport const clearErrors = () => dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["/home/mikebladez/Documents/cm-tracker/CM-Tracker-FE/src/redux/actions/dataActions.js"],"names":["SET_SECRETS","LOADING_DATA","LIKE_SECRET","UNLIKE_SECRET","DELETE_SECRET","SET_ERRORS","CLEAR_ERRORS","POST_SECRET","LOADING_UI","SET_SECRET","STOP_LOADING_UI","SUBMIT_COMMENT","ON_IMAGE_UPDATED","axios","getSecrets","imageUpdated","dispatch","type","get","then","res","payload","data","updatedImg","catch","err","getSecret","secretId","console","log","postSecret","newSecret","post","clearErrors","response","likeSecret","unlikeSecret","submitComment","commentData","deleteSecret","delete","getUserData","userHandle","secrets"],"mappings":"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","sourcesContent":["import { \n    SET_SECRETS, \n    LOADING_DATA, \n    LIKE_SECRET, \n    UNLIKE_SECRET, \n    DELETE_SECRET, \n    SET_ERRORS, \n    CLEAR_ERRORS,\n    POST_SECRET,\n    LOADING_UI,\n    SET_SECRET,\n    STOP_LOADING_UI,\n    SUBMIT_COMMENT,\n    ON_IMAGE_UPDATED\n    } from '../types';\nimport axios from 'axios';\n\n//get all secrets\nexport const getSecrets = (imageUpdated) => (dispatch) => {\n    // console.log(\"BEIN CALLED\");\n    dispatch( { type: LOADING_DATA });\n    axios.get('/secrets')\n    .then((res) => {\n        dispatch({\n            type: SET_SECRETS,\n            payload: res.data\n        });\n        //imageUpdated parameter is a  true or false \n        if(imageUpdated){ dispatch(updatedImg());}\n    })\n    .catch(err => {\n        dispatch({\n            type: SET_SECRETS,\n            payload: []\n        });\n    });\n}\n\n//dispatch an action for when the image is updated\nexport const updatedImg = () => dispatch => {\n    dispatch({ type: ON_IMAGE_UPDATED });\n}\n\n\n\nexport const getSecret = (secretId) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    axios.get(`/secret/${secretId}`)\n    .then((res) => {\n        dispatch({\n            type: SET_SECRET,\n            payload: res.data\n        });\n        dispatch({ type: STOP_LOADING_UI })\n    })\n    .catch(err =>  console.log(err) );\n}\n\n//post a secret\nexport const postSecret = (newSecret) => (dispatch) => {\n    dispatch( { type: LOADING_UI });\n    axios.post('/secret', newSecret)\n    .then((res) => {\n        dispatch({\n            type: POST_SECRET,\n            payload: res.data\n        });\n        dispatch(clearErrors());\n    })\n    .catch(err => {\n        dispatch({\n            type: SET_ERRORS,\n            payload: err.response.data\n        });\n    });\n}\n\n\n\n//Like a secret\nexport const likeSecret = (secretId) => (dispatch) => {\n    axios.get(`/secret/${secretId}/like`)\n    .then((res) => {\n        dispatch({\n            type: LIKE_SECRET,\n            payload: res.data\n        });\n    })\n    .catch(err => console.log(err));\n}\n\n\n\n//Unlike a secret\nexport const unlikeSecret = (secretId) => (dispatch) => {\n    axios.get(`/secret/${secretId}/unlike`)\n    .then((res) => {\n        dispatch({\n            type: UNLIKE_SECRET,\n            payload: res.data\n        });\n    })\n    .catch(err => console.log(err));\n}\n\n//submit comment\nexport const submitComment = (secretId, commentData) => (dispatch) => {\n    axios.post(`/secret/${secretId}/comment`, commentData)\n    .then(res => {\n        dispatch({\n            type: SUBMIT_COMMENT,\n            payload: res.data\n        });\n        dispatch(clearErrors());\n    })\n    .catch(err => {\n        dispatch({\n            type: SET_ERRORS,\n            payload: err.response.data\n        })\n    })\n}\n\n\n\n//delete a secret\nexport const deleteSecret = (secretId) => (dispatch) => {\n    // console.log(\"CALLEDD\");\n\n    axios.delete(`/secret/${secretId}`)\n    .then(() => {\n        dispatch({\n            type: DELETE_SECRET,\n            payload: secretId\n        });\n    })\n    .catch(err => console.log(err));\n}\n\nexport const getUserData = userHandle => dispatch => {\n    // console.log(\"HANDLEEE__>\", userHandle);\n    dispatch({ type: LOADING_DATA});\n    axios.get(`/user/${userHandle}`)\n    .then(res => {\n        // console.log(\"THISS DATAA--> \", res.data)\n        dispatch({ \n            type: SET_SECRETS,\n            payload: res.data.secrets\n        });\n    })\n    .catch(() => {\n        dispatch({ \n            type: CLEAR_ERRORS,\n            payload: null\n         });\n    })\n}\n\nexport const clearErrors = () => dispatch => {\n    dispatch({ type: CLEAR_ERRORS });\n}"]},"metadata":{},"sourceType":"module"}