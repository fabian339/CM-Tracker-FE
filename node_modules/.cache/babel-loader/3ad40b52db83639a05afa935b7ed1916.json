{"ast":null,"code":"var _jsxFileName = \"/home/mikebladez/Documents/cm-tracker/CM-Tracker-FE/src/util/authRoutes/PrivateAdminRoute.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nexport class PrivateAdminRoute extends Component {\n  constructor() {\n    super();\n    this.state = {\n      fullname: '',\n      pathAdminName: ''\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.adminFullname !== prevProps.adminFullname) {\n      console.log(\"Private Next props\", this.prevProps);\n      this.setState({\n        fullname: this.props.adminFullname,\n        pathAdminName: this.props.computedMatch.params.fullname\n      });\n    }\n  }\n\n  render() {\n    const {\n      authenticated,\n      component\n    } = this.props; //fix authentication with fullname && id\n\n    let adminAuthentication = authenticated && this.state.fullname === this.state.pathAdminName;\n    console.log(\"This is trueee\", this.state.fullname, this.state.pathAdminName); // console.log(\"provate route\", fullname, props);\n\n    let adminRoute = adminAuthentication ? React.createElement(Route, {\n      component: component,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    });\n    return adminRoute;\n  }\n\n}\nPrivateAdminRoute.propTypes = {\n  authenticated: PropTypes.bool.isRequired,\n  adminFullname: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  authenticated: state.admin.authenticated,\n  adminFullname: state.admin.fullname\n});\n\nexport default connect(mapStateToProps)(PrivateAdminRoute);","map":{"version":3,"sources":["/home/mikebladez/Documents/cm-tracker/CM-Tracker-FE/src/util/authRoutes/PrivateAdminRoute.js"],"names":["React","Component","Fragment","Route","Redirect","connect","PropTypes","PrivateAdminRoute","constructor","state","fullname","pathAdminName","componentDidUpdate","prevProps","props","adminFullname","console","log","setState","computedMatch","params","render","authenticated","component","adminAuthentication","adminRoute","propTypes","bool","isRequired","string","mapStateToProps","admin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAIA,OAAO,MAAMC,iBAAN,SAAgCN,SAAhC,CAA0C;AAC7CO,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,aAAa,EAAC;AAFL,KAAb;AAIH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,QAAI,KAAKC,KAAL,CAAWC,aAAX,KAA6BF,SAAS,CAACE,aAA3C,EAA0D;AACtDC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiC,KAAKJ,SAAtC;AACA,WAAKK,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAE,KAAKI,KAAL,CAAWC,aADX;AAEVJ,QAAAA,aAAa,EAAE,KAAKG,KAAL,CAAWK,aAAX,CAAyBC,MAAzB,CAAgCV;AAFrC,OAAd;AAIH;AAEJ;;AAEDW,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,QAA8B,KAAKT,KAAzC,CADK,CAEL;;AACA,QAAIU,mBAAmB,GAAIF,aAAa,IAAK,KAAKb,KAAL,CAAWC,QAAX,KAAwB,KAAKD,KAAL,CAAWE,aAAhF;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6B,KAAKR,KAAL,CAAWC,QAAxC,EAAkD,KAAKD,KAAL,CAAWE,aAA7D,EAJK,CAKL;;AAEA,QAAIc,UAAU,GAAID,mBAAD,GACb,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAED,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa,GAGb,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ;AAMA,WAAQE,UAAR;AACH;;AAlC4C;AAqCjDlB,iBAAiB,CAACmB,SAAlB,GAA8B;AAC1BJ,EAAAA,aAAa,EAAEhB,SAAS,CAACqB,IAAV,CAAeC,UADJ;AAE1Bb,EAAAA,aAAa,EAAET,SAAS,CAACuB,MAAV,CAAiBD;AAFN,CAA9B;;AAMA,MAAME,eAAe,GAAIrB,KAAD,KAAY;AAChCsB,EAAAA,KAAK,EAAEtB,KAAK,CAACsB,KADmB;AAEhCT,EAAAA,aAAa,EAAEb,KAAK,CAACsB,KAAN,CAAYT,aAFK;AAGhCP,EAAAA,aAAa,EAAEN,KAAK,CAACsB,KAAN,CAAYrB;AAHK,CAAZ,CAAxB;;AAQA,eAAeL,OAAO,CAACyB,eAAD,CAAP,CAAyBvB,iBAAzB,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport {Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n\n\nexport class PrivateAdminRoute extends Component {\n    constructor(){\n        super();\n        this.state = {\n            fullname: '',\n            pathAdminName:''\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.adminFullname !== prevProps.adminFullname) {\n            console.log(\"Private Next props\",this.prevProps)\n            this.setState({ \n                fullname: this.props.adminFullname,\n                pathAdminName: this.props.computedMatch.params.fullname\n            })\n        }\n        \n    }\n\n    render() {\n        const { authenticated, component} = this.props;\n        //fix authentication with fullname && id\n        let adminAuthentication = (authenticated && (this.state.fullname === this.state.pathAdminName));\n        console.log(\"This is trueee\",this.state.fullname, this.state.pathAdminName)\n        // console.log(\"provate route\", fullname, props);\n\n        let adminRoute = (adminAuthentication) ? (\n            <Route component={component} />\n        ) : (\n            <Redirect to='/' />\n        )\n\n        return (adminRoute)\n    }\n}\n\nPrivateAdminRoute.propTypes = {\n    authenticated: PropTypes.bool.isRequired,\n    adminFullname: PropTypes.string.isRequired\n}\n\n\nconst mapStateToProps = (state) => ({\n    admin: state.admin,\n    authenticated: state.admin.authenticated,\n    adminFullname: state.admin.fullname\n\n});\n\n\nexport default connect(mapStateToProps)(PrivateAdminRoute);"]},"metadata":{},"sourceType":"module"}