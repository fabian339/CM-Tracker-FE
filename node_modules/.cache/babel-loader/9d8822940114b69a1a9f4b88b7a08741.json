{"ast":null,"code":"var _jsxFileName = \"/Users/mrfabian/Documents/cm-tracker-project/CM-Tracker-FE/src/components/pages/registrations/admin/organization/orgRegister.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'; // import AppIcon from '../images/ori_logo.png';\n\nimport Typography from '@material-ui/core/Typography';\nimport appLogo from '../../../../../images/ori_logo.png';\nimport styles from '../styles';\nimport { Bounce, Shake, FadeIn, FadeOut, Flash } from 'react-motions'; //https://github.com/raphamorim/react-motions\n//mui studd\n\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MuiPhoneNumber from \"material-ui-phone-number\";\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport Switch from '@material-ui/core/Switch';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Autocomplete from '@material-ui/lab/Autocomplete'; //Redux stuf\n\nimport { connect } from 'react-redux';\nimport { registerOrg, getOrgWithName, getOrganizations } from '../../../../../redux/actions/adminActions';\n\nconst Link = require(\"react-router-dom\").Link;\n\nclass orgRegister extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const {\n        orgName,\n        orgPhone,\n        orgAddress,\n        orgType,\n        orgExist,\n        organizations\n      } = this.state;\n      let delay = 0;\n\n      if (organizations) {\n        const org = organizations.find(org => org.orgName === orgName);\n        const orgFound = org ? org.orgName === orgName : false;\n        this.setState({\n          orgFound\n        });\n        delay = orgFound ? 4000 : 0;\n      }\n\n      const newOrgData = {\n        orgName,\n        orgPhone,\n        orgAddress,\n        orgType\n      }; //call to add the new organization and redirect to new path\n      //set timeout for emotion when finding organizations\n\n      setTimeout(() => {\n        if (orgExist && orgName) {\n          this.props.getOrgWithName(orgName, this.props.history, localStorage.fullname);\n        } else {\n          this.props.registerOrg(newOrgData, this.props.history, localStorage.fullname);\n        }\n      }, delay);\n    };\n\n    this.handleChange = event => {\n      console.log(event.target.name);\n\n      if (event.target.name === \"orgExist\") {\n        console.log(\"HERREE\");\n        this.setState({\n          orgExist: !this.state.orgExist,\n          organizations: this.props.admin.organizations\n        });\n      } else {\n        this.setState({\n          [event.target.name]: event.target.value\n        });\n      }\n    };\n\n    this.handleOrganizationChangeOnSearchBar = (event, value) => {\n      this.setState({\n        orgName: value\n      });\n    };\n\n    this.handleOrganizationPhoneChange = value => {\n      if (value) {\n        this.setState({\n          orgPhone: value\n        });\n      }\n    };\n\n    this.state = {\n      //ORGANIZATION INFO\n      orgName: '',\n      orgPhone: '',\n      orgAddress: '',\n      orgType: '',\n      orgExist: false,\n      orgFound: false,\n      //organizations\n      organizations: [],\n      //errors\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    this.props.getOrganizations(this.props.match.params.fullname); // console.log(\"ORG Register\",this.props.match.params.fullname)\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      UI: {\n        loading\n      }\n    } = this.props;\n    const {\n      organizations,\n      errors\n    } = this.state;\n    const top100Films = [{\n      title: 'The Shawshank Redemption',\n      year: 1994\n    }, {\n      title: 'The Godfather',\n      year: 1972\n    }, {\n      title: 'Apple',\n      year: 1972\n    }, {\n      title: 'Monty Python and the Holy Grail',\n      year: 1975\n    }]; // console.log(this.props);\n\n    return React.createElement(Shake, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: styles.logoContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: appLogo,\n      alt: \"icon\",\n      style: {\n        width: 250\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      variant: \"h4\",\n      style: styles.pageTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Yaiiiiii, keep it going for the last step\")), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      style: styles.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      style: {\n        margin: \"20px auto 10px auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"ORGANIZATION\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Is your organization register with us?\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      component: \"label\",\n      container: true,\n      alignItems: \"center\",\n      style: {\n        margin: \"auto 40%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"No\"), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      name: \"orgExist\",\n      checked: this.state.orgExist,\n      onChange: this.handleChange,\n      value: this.state.orgExist,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Yes\")), this.state.orgExist && React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Switch to No to register organization\"))), this.state.orgExist ? React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Autocomplete // freeSolo\n    , {\n      id: \"free-solo-2-demo\" // disableClearable\n      ,\n      options: organizations ? organizations.map(org => org.orgName) : [\"Amazon\"],\n      value: this.state.orgName,\n      onInputChange: this.handleOrganizationChangeOnSearchBar,\n      name: \"orgName\",\n      renderInput: params => React.createElement(TextField, Object.assign({}, params, {\n        label: \"Search for an organization\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        style: styles.textField // helperText={errors.orgName}\n        ,\n        error: errors.orgName ? true : false,\n        InputProps: { ...params.InputProps,\n          type: 'search'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), this.state.orgExist && this.state.orgFound && React.createElement(Bounce, {\n      duration: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body2\",\n      style: styles.orgFound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Organization found!\"), React.createElement(Typography, {\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(EmojiEmotionsIcon, {\n      style: {\n        color: \"royalblue\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }))))) : React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Great, lest register your Organization/Business\"), React.createElement(TextField, {\n      id: \"organization\",\n      name: \"orgName\",\n      type: \"text\",\n      label: \"Organization/Business Name\",\n      style: styles.textField,\n      variant: \"outlined\",\n      required: true,\n      helperText: errors.orgName,\n      error: errors.orgName ? true : false,\n      value: this.state.orgName,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"addrees\",\n      name: \"orgAddress\",\n      type: \"text\",\n      label: \"Main Address: 123 Street Ave, New York, NY, 10022\",\n      style: {\n        width: \"80%\",\n        marginTop: \"-7px\"\n      },\n      required: true,\n      helperText: errors.orgAddress,\n      error: errors.orgAddress ? true : false,\n      value: this.state.orgAddress,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      style: styles.orgTypes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, errors.orgType ? React.createElement(InputLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, errors.orgType) : React.createElement(InputLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"Organization Type\"), React.createElement(Select, {\n      native: true,\n      value: this.state.orgType,\n      onChange: this.handleChange // helperText={errors.orgType}\n      ,\n      error: errors.orgType ? true : false,\n      inputProps: {\n        name: 'orgType',\n        id: 'age-native-simple'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"Educational\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"Educational\"), React.createElement(\"option\", {\n      value: \"Merchandise Business\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Merchandise Business\"), React.createElement(\"option\", {\n      value: \"Manufacture Business\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"Manufacture Business\"), React.createElement(\"option\", {\n      value: \"Non-Profit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \"Non-Profit\"), React.createElement(\"option\", {\n      value: \"Insurance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"Insurance\"), React.createElement(\"option\", {\n      value: \"Service Business\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"Service Business\"), React.createElement(\"option\", {\n      value: \"Other\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"Other\"))), React.createElement(MuiPhoneNumber, {\n      name: \"orgPhone\",\n      label: \"Organization Phone#\",\n      \"data-cy\": \"user-phone\",\n      defaultCountry: \"us\",\n      style: {\n        width: \"37.5%\",\n        margin: \"15px 0 15px 2.5%\"\n      },\n      helperText: errors.orgPhone,\n      error: errors.orgPhone ? true : false,\n      value: this.state.orgPhone,\n      onChange: this.handleOrganizationPhoneChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    })), errors.general && React.createElement(Typography, {\n      variant: \"body2\",\n      style: styles.customError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, errors.general), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      style: styles.button,\n      disabled: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"register organization\", loading && React.createElement(CircularProgress, {\n      size: 30,\n      style: styles.progress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }), React.createElement(\"footer\", {\n      style: {\n        margin: \"20px auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, \"Already have an account? Log In \", React.createElement(Link, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, \"Here\"))))), React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }))));\n  }\n\n}\n\norgRegister.propTypes = {\n  admin: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n  registerOrg: PropTypes.func.isRequired,\n  getOrgWithName: PropTypes.func.isRequired,\n  getOrganizations: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  admin: state.admin,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  registerOrg,\n  getOrgWithName,\n  getOrganizations\n};\nexport default connect(mapStateToProps, mapActionsToProps)(orgRegister);","map":{"version":3,"sources":["/Users/mrfabian/Documents/cm-tracker-project/CM-Tracker-FE/src/components/pages/registrations/admin/organization/orgRegister.js"],"names":["React","Component","PropTypes","Typography","appLogo","styles","Bounce","Shake","FadeIn","FadeOut","Flash","Grid","TextField","Button","CircularProgress","MuiPhoneNumber","Select","FormControl","Switch","InputLabel","EmojiEmotionsIcon","Autocomplete","connect","registerOrg","getOrgWithName","getOrganizations","Link","require","orgRegister","constructor","handleSubmit","event","preventDefault","setState","loading","orgName","orgPhone","orgAddress","orgType","orgExist","organizations","state","delay","org","find","orgFound","newOrgData","setTimeout","props","history","localStorage","fullname","handleChange","console","log","target","name","admin","value","handleOrganizationChangeOnSearchBar","handleOrganizationPhoneChange","errors","componentDidMount","match","params","UNSAFE_componentWillReceiveProps","nextProps","UI","render","top100Films","title","year","logoContainer","width","pageTitle","form","margin","map","textField","InputProps","type","color","marginTop","orgTypes","id","general","customError","button","progress","propTypes","object","isRequired","func","mapStateToProps","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import AppIcon from '../images/ori_logo.png';\nimport Typography from '@material-ui/core/Typography';\nimport appLogo from '../../../../../images/ori_logo.png';\nimport styles from '../styles';\nimport { Bounce, Shake, FadeIn, FadeOut, Flash } from 'react-motions' //https://github.com/raphamorim/react-motions\n\n\n//mui studd\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MuiPhoneNumber from \"material-ui-phone-number\";\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport Switch from '@material-ui/core/Switch';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//Redux stuf\nimport { connect } from 'react-redux';\nimport { registerOrg, getOrgWithName, getOrganizations } from '../../../../../redux/actions/adminActions'\n\nconst Link = require(\"react-router-dom\").Link\n\n\nclass orgRegister extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n            //ORGANIZATION INFO\n            orgName: '',\n            orgPhone: '',\n            orgAddress: '',\n            orgType: '',\n            orgExist: false,\n            orgFound: false,\n            //organizations\n            organizations: [],\n            //errors\n            errors: {}\n        }\n    }\n\n    componentDidMount(){\n        this.props.getOrganizations(this.props.match.params.fullname);\n        // console.log(\"ORG Register\",this.props.match.params.fullname)\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps){\n        if(nextProps.UI.errors) {\n            this.setState({ errors: nextProps.UI.errors })\n        }\n    }\n\n    handleSubmit = (event) => {\n\n        event.preventDefault();\n\n        this.setState({\n            loading: true\n        });\n        \n        const { orgName, orgPhone, orgAddress, orgType, orgExist, organizations } = this.state;\n        let delay = 0;\n        if(organizations) {\n            const org = organizations.find(org => org.orgName === orgName);\n            const orgFound = (org ? org.orgName === orgName : false)\n            this.setState({orgFound});\n            delay = orgFound ? 4000 : 0;\n        }\n\n        const newOrgData = { orgName, orgPhone, orgAddress, orgType };\n        \n        //call to add the new organization and redirect to new path\n        //set timeout for emotion when finding organizations\n        setTimeout(() => { \n        if(orgExist && orgName){\n                this.props.getOrgWithName(orgName ,this.props.history, localStorage.fullname);\n            } else {\n                this.props.registerOrg(newOrgData ,this.props.history, localStorage.fullname);\n            }\n        }, delay);\n\n    }\n\n\n    handleChange = (event) => {\n        console.log(event.target.name)\n        if (event.target.name === \"orgExist\"){\n            console.log(\"HERREE\")\n            this.setState({\n                orgExist: !this.state.orgExist,\n                organizations: this.props.admin.organizations\n            });\n        } else {\n            this.setState({\n                [event.target.name]: event.target.value\n            })\n        }\n    }\n\n    handleOrganizationChangeOnSearchBar = (event, value) => {\n        this.setState({orgName: value})\n    }\n\n\n    handleOrganizationPhoneChange = (value) => {\n        if (value) {\n          this.setState({ orgPhone: value });\n        }\n      }\n\n    render() {\n\n        const { UI: { loading } } = this.props;\n        const { organizations, errors } = this.state;\n        const top100Films = [\n            { title: 'The Shawshank Redemption', year: 1994 },\n            { title: 'The Godfather', year: 1972 },\n            { title: 'Apple', year: 1972 },\n            { title: 'Monty Python and the Holy Grail', year: 1975 },\n          ];\n        // console.log(this.props);\n        return (\n        <Shake>\n            <Grid >\n            <header>\n                <div style={styles.logoContainer}>\n                    <img src={appLogo} alt=\"icon\" style={{width: 250}}/>\n                </div>                    \n                <Typography variant=\"h4\" style={styles.pageTitle} >\n                    Yaiiiiii, keep it going for the last step\n                </Typography>\n            </header>\n            <Grid container>\n                <Grid item sm />\n                <Grid item sm={10}>\n                    <form noValidate onSubmit={this.handleSubmit} style={styles.form} >\n\n                        <Typography variant=\"h6\" style={{margin: \"20px auto 10px auto\"}}>\n                            ORGANIZATION\n                        </Typography>\n\n                        <div>\n                            <Typography variant=\"subtitle1\">\n                                Is your organization register with us?\n                            </Typography>\n                            <div >\n                                <Grid \n                                component=\"label\" \n                                container \n                                alignItems=\"center\"\n                                style={{margin: \"auto 40%\"}}\n                                >\n                                    <Grid item>No</Grid>\n                                        <Grid item>\n                                            <Switch\n                                                name=\"orgExist\"\n                                                checked={this.state.orgExist}\n                                                onChange={this.handleChange}\n                                                value={this.state.orgExist}\n                                                color=\"primary\"\n                                            />\n                                        </Grid>\n                                    <Grid item>Yes</Grid>\n                                </Grid>\n                                {this.state.orgExist && (\n                                    <small>\n                                        Switch to No to register organization\n                                    </small>\n                                )}\n                            </div>\n                        </div>\n                        {this.state.orgExist ? (\n                            <Grid>\n\n                                    <Autocomplete\n                                        // freeSolo\n                                        id=\"free-solo-2-demo\"\n                                        // disableClearable\n                                        options={ organizations ? organizations.map(org => org.orgName) : [\"Amazon\"] }\n                                        value={this.state.orgName}\n                                        onInputChange={this.handleOrganizationChangeOnSearchBar}\n                                        name='orgName'\n                                        renderInput={params => (\n                                        <TextField\n                                            {...params}\n                                            label=\"Search for an organization\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            style={styles.textField}\n                                            // helperText={errors.orgName}\n                                            error={errors.orgName ? true : false}\n                                            InputProps={{ ...params.InputProps, type: 'search' }}\n                                        />\n                                        )}\n                                    />\n                                \n                                {(this.state.orgExist && this.state.orgFound) && (\n                                    <Bounce duration={3}> \n                                        <Grid>\n                                            <Typography variant=\"body2\" style={styles.orgFound}>\n                                                Organization found! \n                                            </Typography>\n                                            <Typography variant=\"body2\">\n                                                <EmojiEmotionsIcon style={{color: \"royalblue\"}} /> \n                                            </Typography>\n                                        </Grid>\n                                    </Bounce>\n                                )}\n\n                            </Grid>\n                        ) : (\n                            <Grid >\n                                <Typography variant=\"subtitle1\">\n                                    Great, lest register your Organization/Business\n                                </Typography>\n                                <TextField\n                                    id='organization'\n                                    name='orgName'\n                                    type=\"text\"\n                                    label=\"Organization/Business Name\"\n                                    style={styles.textField}\n                                    variant=\"outlined\" \n                                    required\n                                    helperText={errors.orgName}\n                                    error={errors.orgName ? true : false}\n                                    value={this.state.orgName}\n                                    onChange={this.handleChange}\n                                    fullWidth \n                                    /> \n\n                                <TextField\n                                    id='addrees'\n                                    name='orgAddress'\n                                    type=\"text\"\n                                    label=\"Main Address: 123 Street Ave, New York, NY, 10022\"\n                                    style={{width:\"80%\", marginTop:\"-7px\"}}\n                                    required\n                                    helperText={errors.orgAddress}\n                                    error={errors.orgAddress ? true : false}\n                                    value={this.state.orgAddress}\n                                    onChange={this.handleChange}\n                                    fullWidth \n                                    /> \n                                \n                                <FormControl style={styles.orgTypes} >\n                                    {errors.orgType ? (\n                                        <InputLabel>{errors.orgType}</InputLabel>  \n                                    ) : (\n                                        <InputLabel>Organization Type</InputLabel>\n                                    )}\n                                    <Select\n                                        native\n                                        value={this.state.orgType}\n                                        onChange={this.handleChange}\n                                        // helperText={errors.orgType}\n                                        error={errors.orgType ? true : false}\n                                        inputProps={{\n                                            name: 'orgType',\n                                            id: 'age-native-simple',\n                                        }}\n                                        >\n                                        <option value=\"\" />\n                                        <option value=\"Educational\">Educational</option>\n                                        <option value=\"Merchandise Business\">Merchandise Business</option>\n                                        <option value=\"Manufacture Business\">Manufacture Business</option>\n                                        <option value=\"Non-Profit\">Non-Profit</option>\n                                        <option value=\"Insurance\">Insurance</option>\n                                        <option value=\"Service Business\">Service Business</option>\n                                        <option value=\"Other\">Other</option>\n                                    </Select>\n                                    \n                                </FormControl>\n\n                                <MuiPhoneNumber\n                                name=\"orgPhone\"\n                                label=\"Organization Phone#\"\n                                data-cy=\"user-phone\"\n                                defaultCountry={\"us\"}\n                                style={{\n                                    width: \"37.5%\", \n                                    margin: \"15px 0 15px 2.5%\",\n                                }}\n                                helperText={errors.orgPhone}\n                                error={errors.orgPhone ? true : false}\n                                value={this.state.orgPhone}\n                                onChange={this.handleOrganizationPhoneChange}\n                                />\n                            </Grid>\n                            )\n                        }\n\n                        {errors.general && (\n                            <Typography variant=\"body2\" style={styles.customError}>\n                                {errors.general}\n                            </Typography>\n                        )}\n\n                        <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        style={styles.button}\n                        disabled={false}\n                        > \n                        {}\n                        register organization\n                        {loading && (\n                            <CircularProgress size={30} style={styles.progress} />\n                        )}\n                        </Button>\n                        <br/>\n                        <footer style={{margin: \"20px auto\"}}>\n                            <small>\n                                Already have an account? Log In <Link to=\"/login\">Here</Link>\n                            </small>\n                        </footer>\n                    </form>\n                </Grid>\n                <Grid item sm/>\n\n            </Grid>\n        </Grid>\n        </Shake>\n        )\n    }\n}\n\norgRegister.propTypes = {\n    admin: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired,\n    registerOrg: PropTypes.func.isRequired,\n    getOrgWithName: PropTypes.func.isRequired,\n    getOrganizations: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    admin: state.admin,\n    UI: state.UI\n});\n\nconst mapActionsToProps = { \n    registerOrg, \n    getOrgWithName,\n    getOrganizations\n};\n\n\nexport default connect(mapStateToProps, mapActionsToProps)(orgRegister);\n"]},"metadata":{},"sourceType":"module"}